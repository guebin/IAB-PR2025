[
  {
    "objectID": "content/12wk-2.html",
    "href": "content/12wk-2.html",
    "title": "12wk-2: [DataFrame] – FIFA23 데이터 // 숙제",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt"
  },
  {
    "objectID": "content/12wk-2.html#fifa데이터",
    "href": "content/12wk-2.html#fifa데이터",
    "title": "12wk-2: [DataFrame] – FIFA23 데이터 // 숙제",
    "section": "1. FIFA데이터",
    "text": "1. FIFA데이터\n\nA. Data\n- 데이터 load\n\ndf = pd.read_csv('FIFA23_official_data.csv')\ndf\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n0\n209658\nL. Goretzka\n27\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2018\nNaN\n2026\n189cm\n82kg\n€157M\n8.0\nNaN\n\n\n1\n212198\nBruno Fernandes\n27\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 30, 2020\nNaN\n2026\n179cm\n69kg\n€155M\n8.0\nNaN\n\n\n2\n224334\nM. Acuña\n30\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n...\nNo\n&lt;span class=\"pos pos7\"&gt;LB\nSep 14, 2020\nNaN\n2024\n172cm\n69kg\n€97.7M\n19.0\nNaN\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\nNaN\n2025\n181cm\n70kg\n€198.9M\n17.0\nNaN\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\nNaN\n2026\n172cm\n68kg\n€154.4M\n23.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nApr 11, 2022\nNaN\n2027\n190cm\n78kg\n€218K\n35.0\nNaN\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2022\nNaN\n2026\n195cm\n84kg\n€188K\n21.0\nNaN\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 6, 2021\nNaN\n2023\n190cm\n82kg\n€142K\n12.0\nNaN\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2020\nNaN\n2021\n187cm\n79kg\n€214K\n40.0\nNaN\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 8, 2020\nNaN\n2021\n186cm\n78kg\n€131K\n30.0\nNaN\n\n\n\n\n17660 rows × 29 columns"
  },
  {
    "objectID": "content/12wk-2.html#fifa23데이터",
    "href": "content/12wk-2.html#fifa23데이터",
    "title": "12wk-2: [DataFrame] – FIFA23 데이터 // 숙제",
    "section": "1. FIFA23데이터",
    "text": "1. FIFA23데이터\n\nA. Data\n- 데이터 load\n\ndf = pd.read_csv('FIFA23_official_data.csv')\ndf\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n0\n209658\nL. Goretzka\n27\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2018\nNaN\n2026\n189cm\n82kg\n€157M\n8.0\nNaN\n\n\n1\n212198\nBruno Fernandes\n27\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 30, 2020\nNaN\n2026\n179cm\n69kg\n€155M\n8.0\nNaN\n\n\n2\n224334\nM. Acuña\n30\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n...\nNo\n&lt;span class=\"pos pos7\"&gt;LB\nSep 14, 2020\nNaN\n2024\n172cm\n69kg\n€97.7M\n19.0\nNaN\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\nNaN\n2025\n181cm\n70kg\n€198.9M\n17.0\nNaN\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\nNaN\n2026\n172cm\n68kg\n€154.4M\n23.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nApr 11, 2022\nNaN\n2027\n190cm\n78kg\n€218K\n35.0\nNaN\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2022\nNaN\n2026\n195cm\n84kg\n€188K\n21.0\nNaN\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 6, 2021\nNaN\n2023\n190cm\n82kg\n€142K\n12.0\nNaN\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2020\nNaN\n2021\n187cm\n79kg\n€214K\n40.0\nNaN\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 8, 2020\nNaN\n2021\n186cm\n78kg\n€131K\n30.0\nNaN\n\n\n\n\n17660 rows × 29 columns\n\n\n\n\n\nB. df.T\n- df.T를 이용하여 데이터를 살피면 편리한 경우도 있음\n\ndf.T\n\n\n\n\n\n\n\n\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n...\n17650\n17651\n17652\n17653\n17654\n17655\n17656\n17657\n17658\n17659\n\n\n\n\nID\n209658\n212198\n224334\n192985\n224232\n212622\n197445\n187961\n208333\n210514\n...\n256879\n269546\n267647\n253186\n267461\n269526\n267946\n270567\n256624\n256376\n\n\nName\nL. Goretzka\nBruno Fernandes\nM. Acuña\nK. De Bruyne\nN. Barella\nJ. Kimmich\nD. Alaba\n22 Paulinho\nE. Can\nJoão Cancelo\n...\n22 G. Leijon\nWu Fei\n22 E. Grosz\n22 S. Booth\n22 L. Grimpe\nDeng Xiongtao\n22 Lim Jun Sub\nA. Demir\n21 S. Czajor\n21 F. Jakobsson\n\n\nAge\n27\n27\n30\n31\n25\n27\n30\n32\n28\n28\n...\n19\n32\n18\n20\n17\n19\n17\n25\n18\n20\n\n\nPhoto\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nhttps://cdn.sofifa.net/players/212/622/23_60.png\nhttps://cdn.sofifa.net/players/197/445/23_60.png\nhttps://cdn.sofifa.net/players/187/961/22_60.png\nhttps://cdn.sofifa.net/players/208/333/23_60.png\nhttps://cdn.sofifa.net/players/210/514/23_60.png\n...\nhttps://cdn.sofifa.net/players/256/879/22_60.png\nhttps://cdn.sofifa.net/players/269/546/23_60.png\nhttps://cdn.sofifa.net/players/267/647/22_60.png\nhttps://cdn.sofifa.net/players/253/186/22_60.png\nhttps://cdn.sofifa.net/players/267/461/22_60.png\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nhttps://cdn.sofifa.net/players/256/376/21_60.png\n\n\nNationality\nGermany\nPortugal\nArgentina\nBelgium\nItaly\nGermany\nAustria\nBrazil\nGermany\nPortugal\n...\nSweden\nChina PR\nRomania\nEngland\nGermany\nChina PR\nKorea Republic\nTurkey\nPoland\nSweden\n\n\nFlag\nhttps://cdn.sofifa.net/flags/de.png\nhttps://cdn.sofifa.net/flags/pt.png\nhttps://cdn.sofifa.net/flags/ar.png\nhttps://cdn.sofifa.net/flags/be.png\nhttps://cdn.sofifa.net/flags/it.png\nhttps://cdn.sofifa.net/flags/de.png\nhttps://cdn.sofifa.net/flags/at.png\nhttps://cdn.sofifa.net/flags/br.png\nhttps://cdn.sofifa.net/flags/de.png\nhttps://cdn.sofifa.net/flags/pt.png\n...\nhttps://cdn.sofifa.net/flags/se.png\nhttps://cdn.sofifa.net/flags/cn.png\nhttps://cdn.sofifa.net/flags/ro.png\nhttps://cdn.sofifa.net/flags/gb-eng.png\nhttps://cdn.sofifa.net/flags/de.png\nhttps://cdn.sofifa.net/flags/cn.png\nhttps://cdn.sofifa.net/flags/kr.png\nhttps://cdn.sofifa.net/flags/tr.png\nhttps://cdn.sofifa.net/flags/pl.png\nhttps://cdn.sofifa.net/flags/se.png\n\n\nOverall\n87\n86\n85\n91\n86\n89\n86\n83\n82\n88\n...\n52\n51\n52\n51\n54\n48\n48\n51\n50\n50\n\n\nPotential\n88\n87\n85\n91\n89\n90\n86\n83\n82\n88\n...\n62\n51\n70\n60\n68\n61\n64\n56\n65\n61\n\n\nClub\nFC Bayern München\nManchester United\nSevilla FC\nManchester City\nInter\nFC Bayern München\nReal Madrid CF\nAl Ahli\nBorussia Dortmund\nManchester City\n...\nÖrebro SK\nWuhan Three Towns\nGaz Metan Mediaş\nCrewe Alexandra\nRB Leipzig\nMeizhou Hakka\nJeju United FC\nÜmraniyespor\nFleetwood Town\nIFK Norrköping\n\n\nClub Logo\nhttps://cdn.sofifa.net/teams/21/30.png\nhttps://cdn.sofifa.net/teams/11/30.png\nhttps://cdn.sofifa.net/teams/481/30.png\nhttps://cdn.sofifa.net/teams/10/30.png\nhttps://cdn.sofifa.net/teams/44/30.png\nhttps://cdn.sofifa.net/teams/21/30.png\nhttps://cdn.sofifa.net/teams/243/30.png\nhttps://cdn.sofifa.net/teams/112387/30.png\nhttps://cdn.sofifa.net/teams/22/30.png\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nhttps://cdn.sofifa.net/teams/705/30.png\nhttps://cdn.sofifa.net/teams/116361/30.png\nhttps://cdn.sofifa.net/teams/112637/30.png\nhttps://cdn.sofifa.net/teams/121/30.png\nhttps://cdn.sofifa.net/teams/112172/30.png\nhttps://cdn.sofifa.net/teams/114628/30.png\nhttps://cdn.sofifa.net/teams/1478/30.png\nhttps://cdn.sofifa.net/teams/113796/30.png\nhttps://cdn.sofifa.net/teams/112260/30.png\nhttps://cdn.sofifa.net/teams/702/30.png\n\n\nValue\n€91M\n€78.5M\n€46.5M\n€107.5M\n€89.5M\n€105.5M\n€55.5M\n€28.5M\n€30.5M\n€82.5M\n...\n€150K\n€30K\n€180K\n€110K\n€210K\n€100K\n€100K\n€70K\n€90K\n€90K\n\n\nWage\n€115K\n€190K\n€46K\n€350K\n€110K\n€130K\n€220K\n€61K\n€63K\n€250K\n...\n€500\n€2K\n€500\n€850\n€500\n€500\n€500\n€2K\n€500\n€500\n\n\nSpecial\n2312\n2305\n2303\n2303\n2296\n2283\n2277\n2273\n2271\n2262\n...\n779\n777\n775\n768\n767\n762\n761\n759\n758\n749\n\n\nPreferred Foot\nRight\nRight\nLeft\nRight\nRight\nRight\nLeft\nRight\nRight\nRight\n...\nRight\nRight\nRight\nRight\nRight\nRight\nRight\nRight\nRight\nLeft\n\n\nInternational Reputation\n4.0\n3.0\n2.0\n4.0\n3.0\n4.0\n4.0\n3.0\n3.0\n3.0\n...\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n\n\nWeak Foot\n4.0\n3.0\n3.0\n5.0\n3.0\n4.0\n4.0\n4.0\n4.0\n4.0\n...\n3.0\n2.0\n2.0\n2.0\n3.0\n3.0\n2.0\n2.0\n2.0\n2.0\n\n\nSkill Moves\n3.0\n4.0\n3.0\n4.0\n3.0\n3.0\n3.0\n4.0\n3.0\n4.0\n...\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n\n\nWork Rate\nHigh/ Medium\nHigh/ High\nHigh/ High\nHigh/ High\nHigh/ High\nHigh/ Medium\nMedium/ Medium\nHigh/ High\nMedium/ High\nHigh/ Medium\n...\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\n\n\nBody Type\nUnique\nUnique\nStocky (170-185)\nUnique\nNormal (170-)\nNormal (170-185)\nNormal (170-185)\nNormal (170-185)\nStocky (185+)\nUnique\n...\nNormal (185+)\nNormal (185+)\nLean (185+)\nLean (185+)\nLean (185+)\nNormal (185+)\nLean (185+)\nLean (185+)\nNormal (185+)\nNormal (185+)\n\n\nReal Face\nYes\nYes\nNo\nYes\nYes\nYes\nYes\nYes\nYes\nYes\n...\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n\n\nPosition\n&lt;span class=\"pos pos28\"&gt;SUB\n&lt;span class=\"pos pos15\"&gt;LCM\n&lt;span class=\"pos pos7\"&gt;LB\n&lt;span class=\"pos pos13\"&gt;RCM\n&lt;span class=\"pos pos13\"&gt;RCM\n&lt;span class=\"pos pos9\"&gt;RDM\n&lt;span class=\"pos pos6\"&gt;LCB\n&lt;span class=\"pos pos15\"&gt;LCM\n&lt;span class=\"pos pos28\"&gt;SUB\n&lt;span class=\"pos pos7\"&gt;LB\n...\n&lt;span class=\"pos pos28\"&gt;SUB\n&lt;span class=\"pos pos28\"&gt;SUB\n&lt;span class=\"pos pos28\"&gt;SUB\n&lt;span class=\"pos pos29\"&gt;RES\n&lt;span class=\"pos pos29\"&gt;RES\n&lt;span class=\"pos pos29\"&gt;RES\n&lt;span class=\"pos pos29\"&gt;RES\n&lt;span class=\"pos pos29\"&gt;RES\n&lt;span class=\"pos pos29\"&gt;RES\n&lt;span class=\"pos pos29\"&gt;RES\n\n\nJoined\nJul 1, 2018\nJan 30, 2020\nSep 14, 2020\nAug 30, 2015\nSep 1, 2020\nJul 1, 2015\nJul 1, 2021\nJul 22, 2021\nFeb 18, 2020\nAug 7, 2019\n...\nJun 14, 2020\nFeb 15, 2019\nJul 1, 2020\nJul 1, 2019\nFeb 7, 2022\nApr 11, 2022\nJan 1, 2022\nJun 6, 2021\nJan 1, 2020\nJan 8, 2020\n\n\nLoaned From\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\nContract Valid Until\n2026\n2026\n2024\n2025\n2026\n2025\n2026\n2024\n2024\n2027\n...\n2022\n2022\n2022\n2022\n2023\n2027\n2026\n2023\n2021\n2021\n\n\nHeight\n189cm\n179cm\n172cm\n181cm\n172cm\n177cm\n180cm\n183cm\n186cm\n182cm\n...\n188cm\n186cm\n190cm\n195cm\n186cm\n190cm\n195cm\n190cm\n187cm\n186cm\n\n\nWeight\n82kg\n69kg\n69kg\n70kg\n68kg\n75kg\n78kg\n80kg\n86kg\n74kg\n...\n81kg\n78kg\n70kg\n80kg\n78kg\n78kg\n84kg\n82kg\n79kg\n78kg\n\n\nRelease Clause\n€157M\n€155M\n€97.7M\n€198.9M\n€154.4M\n€182M\n€113.8M\n€48.5M\n€51.9M\n€152.6M\n...\n€218K\n€47K\n€356K\n€215K\n€488K\n€218K\n€188K\n€142K\n€214K\n€131K\n\n\nKit Number\n8.0\n8.0\n19.0\n17.0\n23.0\n6.0\n4.0\n15.0\n23.0\n7.0\n...\n33.0\n1.0\n99.0\n27.0\n43.0\n35.0\n21.0\n12.0\n40.0\n30.0\n\n\nBest Overall Rating\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n29 rows × 17660 columns\n\n\n\n- 출력옵션 조정\n\npd.options.display.max_rows = 100\ndisplay(df.T)\npd.reset_option(\"display.max_rows\")\n\n\n\n\n\n\n\n\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n...\n17650\n17651\n17652\n17653\n17654\n17655\n17656\n17657\n17658\n17659\n\n\n\n\nID\n209658\n212198\n224334\n192985\n224232\n212622\n197445\n187961\n208333\n210514\n...\n256879\n269546\n267647\n253186\n267461\n269526\n267946\n270567\n256624\n256376\n\n\nName\nL. Goretzka\nBruno Fernandes\nM. Acuña\nK. De Bruyne\nN. Barella\nJ. Kimmich\nD. Alaba\n22 Paulinho\nE. Can\nJoão Cancelo\n...\n22 G. Leijon\nWu Fei\n22 E. Grosz\n22 S. Booth\n22 L. Grimpe\nDeng Xiongtao\n22 Lim Jun Sub\nA. Demir\n21 S. Czajor\n21 F. Jakobsson\n\n\nAge\n27\n27\n30\n31\n25\n27\n30\n32\n28\n28\n...\n19\n32\n18\n20\n17\n19\n17\n25\n18\n20\n\n\nPhoto\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nhttps://cdn.sofifa.net/players/212/622/23_60.png\nhttps://cdn.sofifa.net/players/197/445/23_60.png\nhttps://cdn.sofifa.net/players/187/961/22_60.png\nhttps://cdn.sofifa.net/players/208/333/23_60.png\nhttps://cdn.sofifa.net/players/210/514/23_60.png\n...\nhttps://cdn.sofifa.net/players/256/879/22_60.png\nhttps://cdn.sofifa.net/players/269/546/23_60.png\nhttps://cdn.sofifa.net/players/267/647/22_60.png\nhttps://cdn.sofifa.net/players/253/186/22_60.png\nhttps://cdn.sofifa.net/players/267/461/22_60.png\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nhttps://cdn.sofifa.net/players/256/376/21_60.png\n\n\nNationality\nGermany\nPortugal\nArgentina\nBelgium\nItaly\nGermany\nAustria\nBrazil\nGermany\nPortugal\n...\nSweden\nChina PR\nRomania\nEngland\nGermany\nChina PR\nKorea Republic\nTurkey\nPoland\nSweden\n\n\nFlag\nhttps://cdn.sofifa.net/flags/de.png\nhttps://cdn.sofifa.net/flags/pt.png\nhttps://cdn.sofifa.net/flags/ar.png\nhttps://cdn.sofifa.net/flags/be.png\nhttps://cdn.sofifa.net/flags/it.png\nhttps://cdn.sofifa.net/flags/de.png\nhttps://cdn.sofifa.net/flags/at.png\nhttps://cdn.sofifa.net/flags/br.png\nhttps://cdn.sofifa.net/flags/de.png\nhttps://cdn.sofifa.net/flags/pt.png\n...\nhttps://cdn.sofifa.net/flags/se.png\nhttps://cdn.sofifa.net/flags/cn.png\nhttps://cdn.sofifa.net/flags/ro.png\nhttps://cdn.sofifa.net/flags/gb-eng.png\nhttps://cdn.sofifa.net/flags/de.png\nhttps://cdn.sofifa.net/flags/cn.png\nhttps://cdn.sofifa.net/flags/kr.png\nhttps://cdn.sofifa.net/flags/tr.png\nhttps://cdn.sofifa.net/flags/pl.png\nhttps://cdn.sofifa.net/flags/se.png\n\n\nOverall\n87\n86\n85\n91\n86\n89\n86\n83\n82\n88\n...\n52\n51\n52\n51\n54\n48\n48\n51\n50\n50\n\n\nPotential\n88\n87\n85\n91\n89\n90\n86\n83\n82\n88\n...\n62\n51\n70\n60\n68\n61\n64\n56\n65\n61\n\n\nClub\nFC Bayern München\nManchester United\nSevilla FC\nManchester City\nInter\nFC Bayern München\nReal Madrid CF\nAl Ahli\nBorussia Dortmund\nManchester City\n...\nÖrebro SK\nWuhan Three Towns\nGaz Metan Mediaş\nCrewe Alexandra\nRB Leipzig\nMeizhou Hakka\nJeju United FC\nÜmraniyespor\nFleetwood Town\nIFK Norrköping\n\n\nClub Logo\nhttps://cdn.sofifa.net/teams/21/30.png\nhttps://cdn.sofifa.net/teams/11/30.png\nhttps://cdn.sofifa.net/teams/481/30.png\nhttps://cdn.sofifa.net/teams/10/30.png\nhttps://cdn.sofifa.net/teams/44/30.png\nhttps://cdn.sofifa.net/teams/21/30.png\nhttps://cdn.sofifa.net/teams/243/30.png\nhttps://cdn.sofifa.net/teams/112387/30.png\nhttps://cdn.sofifa.net/teams/22/30.png\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nhttps://cdn.sofifa.net/teams/705/30.png\nhttps://cdn.sofifa.net/teams/116361/30.png\nhttps://cdn.sofifa.net/teams/112637/30.png\nhttps://cdn.sofifa.net/teams/121/30.png\nhttps://cdn.sofifa.net/teams/112172/30.png\nhttps://cdn.sofifa.net/teams/114628/30.png\nhttps://cdn.sofifa.net/teams/1478/30.png\nhttps://cdn.sofifa.net/teams/113796/30.png\nhttps://cdn.sofifa.net/teams/112260/30.png\nhttps://cdn.sofifa.net/teams/702/30.png\n\n\nValue\n€91M\n€78.5M\n€46.5M\n€107.5M\n€89.5M\n€105.5M\n€55.5M\n€28.5M\n€30.5M\n€82.5M\n...\n€150K\n€30K\n€180K\n€110K\n€210K\n€100K\n€100K\n€70K\n€90K\n€90K\n\n\nWage\n€115K\n€190K\n€46K\n€350K\n€110K\n€130K\n€220K\n€61K\n€63K\n€250K\n...\n€500\n€2K\n€500\n€850\n€500\n€500\n€500\n€2K\n€500\n€500\n\n\nSpecial\n2312\n2305\n2303\n2303\n2296\n2283\n2277\n2273\n2271\n2262\n...\n779\n777\n775\n768\n767\n762\n761\n759\n758\n749\n\n\nPreferred Foot\nRight\nRight\nLeft\nRight\nRight\nRight\nLeft\nRight\nRight\nRight\n...\nRight\nRight\nRight\nRight\nRight\nRight\nRight\nRight\nRight\nLeft\n\n\nInternational Reputation\n4.0\n3.0\n2.0\n4.0\n3.0\n4.0\n4.0\n3.0\n3.0\n3.0\n...\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n\n\nWeak Foot\n4.0\n3.0\n3.0\n5.0\n3.0\n4.0\n4.0\n4.0\n4.0\n4.0\n...\n3.0\n2.0\n2.0\n2.0\n3.0\n3.0\n2.0\n2.0\n2.0\n2.0\n\n\nSkill Moves\n3.0\n4.0\n3.0\n4.0\n3.0\n3.0\n3.0\n4.0\n3.0\n4.0\n...\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n\n\nWork Rate\nHigh/ Medium\nHigh/ High\nHigh/ High\nHigh/ High\nHigh/ High\nHigh/ Medium\nMedium/ Medium\nHigh/ High\nMedium/ High\nHigh/ Medium\n...\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\n\n\nBody Type\nUnique\nUnique\nStocky (170-185)\nUnique\nNormal (170-)\nNormal (170-185)\nNormal (170-185)\nNormal (170-185)\nStocky (185+)\nUnique\n...\nNormal (185+)\nNormal (185+)\nLean (185+)\nLean (185+)\nLean (185+)\nNormal (185+)\nLean (185+)\nLean (185+)\nNormal (185+)\nNormal (185+)\n\n\nReal Face\nYes\nYes\nNo\nYes\nYes\nYes\nYes\nYes\nYes\nYes\n...\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n\n\nPosition\n&lt;span class=\"pos pos28\"&gt;SUB\n&lt;span class=\"pos pos15\"&gt;LCM\n&lt;span class=\"pos pos7\"&gt;LB\n&lt;span class=\"pos pos13\"&gt;RCM\n&lt;span class=\"pos pos13\"&gt;RCM\n&lt;span class=\"pos pos9\"&gt;RDM\n&lt;span class=\"pos pos6\"&gt;LCB\n&lt;span class=\"pos pos15\"&gt;LCM\n&lt;span class=\"pos pos28\"&gt;SUB\n&lt;span class=\"pos pos7\"&gt;LB\n...\n&lt;span class=\"pos pos28\"&gt;SUB\n&lt;span class=\"pos pos28\"&gt;SUB\n&lt;span class=\"pos pos28\"&gt;SUB\n&lt;span class=\"pos pos29\"&gt;RES\n&lt;span class=\"pos pos29\"&gt;RES\n&lt;span class=\"pos pos29\"&gt;RES\n&lt;span class=\"pos pos29\"&gt;RES\n&lt;span class=\"pos pos29\"&gt;RES\n&lt;span class=\"pos pos29\"&gt;RES\n&lt;span class=\"pos pos29\"&gt;RES\n\n\nJoined\nJul 1, 2018\nJan 30, 2020\nSep 14, 2020\nAug 30, 2015\nSep 1, 2020\nJul 1, 2015\nJul 1, 2021\nJul 22, 2021\nFeb 18, 2020\nAug 7, 2019\n...\nJun 14, 2020\nFeb 15, 2019\nJul 1, 2020\nJul 1, 2019\nFeb 7, 2022\nApr 11, 2022\nJan 1, 2022\nJun 6, 2021\nJan 1, 2020\nJan 8, 2020\n\n\nLoaned From\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\nContract Valid Until\n2026\n2026\n2024\n2025\n2026\n2025\n2026\n2024\n2024\n2027\n...\n2022\n2022\n2022\n2022\n2023\n2027\n2026\n2023\n2021\n2021\n\n\nHeight\n189cm\n179cm\n172cm\n181cm\n172cm\n177cm\n180cm\n183cm\n186cm\n182cm\n...\n188cm\n186cm\n190cm\n195cm\n186cm\n190cm\n195cm\n190cm\n187cm\n186cm\n\n\nWeight\n82kg\n69kg\n69kg\n70kg\n68kg\n75kg\n78kg\n80kg\n86kg\n74kg\n...\n81kg\n78kg\n70kg\n80kg\n78kg\n78kg\n84kg\n82kg\n79kg\n78kg\n\n\nRelease Clause\n€157M\n€155M\n€97.7M\n€198.9M\n€154.4M\n€182M\n€113.8M\n€48.5M\n€51.9M\n€152.6M\n...\n€218K\n€47K\n€356K\n€215K\n€488K\n€218K\n€188K\n€142K\n€214K\n€131K\n\n\nKit Number\n8.0\n8.0\n19.0\n17.0\n23.0\n6.0\n4.0\n15.0\n23.0\n7.0\n...\n33.0\n1.0\n99.0\n27.0\n43.0\n35.0\n21.0\n12.0\n40.0\n30.0\n\n\nBest Overall Rating\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n29 rows × 17660 columns\n\n\n\n\n\nC. df.sort_values()\n# 예시1 – 나이가 어린 순서대로 정렬\n\ndf.sort_values(by=\"Age\")\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n17636\n263636\n22 D. Oncescu\n15\nhttps://cdn.sofifa.net/players/263/636/22_60.png\nRomania\nhttps://cdn.sofifa.net/flags/ro.png\n50\n72\nFC Dinamo 1948 Bucureşti\nhttps://cdn.sofifa.net/teams/100757/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 1, 2021\nNaN\n2025\n190cm\n77kg\n€306K\n34.0\nNaN\n\n\n13536\n270867\nA. Mazilu\n16\nhttps://cdn.sofifa.net/players/270/867/23_60.png\nRomania\nhttps://cdn.sofifa.net/flags/ro.png\n55\n75\nFC Farul Constanța\nhttps://cdn.sofifa.net/teams/110075/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 1, 2022\nNaN\n2024\n186cm\n72kg\n€823K\n26.0\nNaN\n\n\n17544\n269196\n22 M. Anchor\n16\nhttps://cdn.sofifa.net/players/269/196/22_60.png\nCanada\nhttps://cdn.sofifa.net/flags/ca.png\n47\n70\nVancouver Whitecaps FC\nhttps://cdn.sofifa.net/teams/101112/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nMay 21, 2022\nNaN\n2023\n185cm\n74kg\n€325K\n50.0\nNaN\n\n\n13509\n271182\nM. Moraru\n16\nhttps://cdn.sofifa.net/players/271/182/23_60.png\nRomania\nhttps://cdn.sofifa.net/flags/ro.png\n50\n72\nUniversitatea Cluj\nhttps://cdn.sofifa.net/teams/110751/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJul 1, 2020\nNaN\n2023\n175cm\n65kg\n€353K\n19.0\nNaN\n\n\n15654\n269024\n22 Zeng Yaozhang\n16\nhttps://cdn.sofifa.net/players/269/024/22_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n46\n56\nGuangzhou FC\nhttps://cdn.sofifa.net/teams/111839/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nMay 1, 2022\nNaN\n2024\n175cm\n64kg\n€175K\n16.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n16036\n216692\nS. Torrico\n42\nhttps://cdn.sofifa.net/players/216/692/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n72\n72\nSan Lorenzo de Almagro\nhttps://cdn.sofifa.net/teams/1013/30.png\n...\nNo\n&lt;span class=\"pos pos0\"&gt;GK\nApr 25, 2013\nNaN\n2022\n183cm\n84kg\n€375K\n12.0\nNaN\n\n\n3143\n153260\n21 Hilton\n42\nhttps://cdn.sofifa.net/players/153/260/21_60.png\nBrazil\nhttps://cdn.sofifa.net/flags/br.png\n75\n75\nMontpellier Hérault SC\nhttps://cdn.sofifa.net/teams/70/30.png\n...\nYes\n&lt;span class=\"pos pos4\"&gt;RCB\nAug 1, 2011\nNaN\n2021\n180cm\n78kg\nNaN\n4.0\nNaN\n\n\n17257\n645\n17 D. Andersson\n43\nhttps://cdn.sofifa.net/players/000/645/17_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n57\n57\nHelsingborgs IF\nhttps://cdn.sofifa.net/teams/432/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nApr 21, 2016\nNaN\n2022\n187cm\n85kg\nNaN\n39.0\nNaN\n\n\n15375\n1179\nG. Buffon\n44\nhttps://cdn.sofifa.net/players/001/179/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n79\n79\nParma\nhttps://cdn.sofifa.net/teams/50/30.png\n...\nYes\n&lt;span class=\"pos pos0\"&gt;GK\nJul 1, 2021\nNaN\n2024\n192cm\n92kg\n€3M\n1.0\nNaN\n\n\n15272\n254704\n22 K. Miura\n54\nhttps://cdn.sofifa.net/players/254/704/22_60.png\nJapan\nhttps://cdn.sofifa.net/flags/jp.png\n56\n56\nYokohama FC\nhttps://cdn.sofifa.net/teams/113197/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJul 1, 2005\nNaN\n2022\n177cm\n72kg\nNaN\n11.0\nNaN\n\n\n\n\n17660 rows × 29 columns\n\n\n\n\ndf.sort_values(by='Age')\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n17636\n263636\n22 D. Oncescu\n15\nhttps://cdn.sofifa.net/players/263/636/22_60.png\nRomania\nhttps://cdn.sofifa.net/flags/ro.png\n50\n72\nFC Dinamo 1948 Bucureşti\nhttps://cdn.sofifa.net/teams/100757/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 1, 2021\nNaN\n2025\n190cm\n77kg\n€306K\n34.0\nNaN\n\n\n13536\n270867\nA. Mazilu\n16\nhttps://cdn.sofifa.net/players/270/867/23_60.png\nRomania\nhttps://cdn.sofifa.net/flags/ro.png\n55\n75\nFC Farul Constanța\nhttps://cdn.sofifa.net/teams/110075/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 1, 2022\nNaN\n2024\n186cm\n72kg\n€823K\n26.0\nNaN\n\n\n17544\n269196\n22 M. Anchor\n16\nhttps://cdn.sofifa.net/players/269/196/22_60.png\nCanada\nhttps://cdn.sofifa.net/flags/ca.png\n47\n70\nVancouver Whitecaps FC\nhttps://cdn.sofifa.net/teams/101112/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nMay 21, 2022\nNaN\n2023\n185cm\n74kg\n€325K\n50.0\nNaN\n\n\n13509\n271182\nM. Moraru\n16\nhttps://cdn.sofifa.net/players/271/182/23_60.png\nRomania\nhttps://cdn.sofifa.net/flags/ro.png\n50\n72\nUniversitatea Cluj\nhttps://cdn.sofifa.net/teams/110751/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJul 1, 2020\nNaN\n2023\n175cm\n65kg\n€353K\n19.0\nNaN\n\n\n15654\n269024\n22 Zeng Yaozhang\n16\nhttps://cdn.sofifa.net/players/269/024/22_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n46\n56\nGuangzhou FC\nhttps://cdn.sofifa.net/teams/111839/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nMay 1, 2022\nNaN\n2024\n175cm\n64kg\n€175K\n16.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n16036\n216692\nS. Torrico\n42\nhttps://cdn.sofifa.net/players/216/692/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n72\n72\nSan Lorenzo de Almagro\nhttps://cdn.sofifa.net/teams/1013/30.png\n...\nNo\n&lt;span class=\"pos pos0\"&gt;GK\nApr 25, 2013\nNaN\n2022\n183cm\n84kg\n€375K\n12.0\nNaN\n\n\n3143\n153260\n21 Hilton\n42\nhttps://cdn.sofifa.net/players/153/260/21_60.png\nBrazil\nhttps://cdn.sofifa.net/flags/br.png\n75\n75\nMontpellier Hérault SC\nhttps://cdn.sofifa.net/teams/70/30.png\n...\nYes\n&lt;span class=\"pos pos4\"&gt;RCB\nAug 1, 2011\nNaN\n2021\n180cm\n78kg\nNaN\n4.0\nNaN\n\n\n17257\n645\n17 D. Andersson\n43\nhttps://cdn.sofifa.net/players/000/645/17_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n57\n57\nHelsingborgs IF\nhttps://cdn.sofifa.net/teams/432/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nApr 21, 2016\nNaN\n2022\n187cm\n85kg\nNaN\n39.0\nNaN\n\n\n15375\n1179\nG. Buffon\n44\nhttps://cdn.sofifa.net/players/001/179/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n79\n79\nParma\nhttps://cdn.sofifa.net/teams/50/30.png\n...\nYes\n&lt;span class=\"pos pos0\"&gt;GK\nJul 1, 2021\nNaN\n2024\n192cm\n92kg\n€3M\n1.0\nNaN\n\n\n15272\n254704\n22 K. Miura\n54\nhttps://cdn.sofifa.net/players/254/704/22_60.png\nJapan\nhttps://cdn.sofifa.net/flags/jp.png\n56\n56\nYokohama FC\nhttps://cdn.sofifa.net/teams/113197/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJul 1, 2005\nNaN\n2022\n177cm\n72kg\nNaN\n11.0\nNaN\n\n\n\n\n17660 rows × 29 columns\n\n\n\n- 예시2: 나이가 많은 순서대로 정렬\n\ndf.sort_values(by='Age',ascending=False)\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n15272\n254704\n22 K. Miura\n54\nhttps://cdn.sofifa.net/players/254/704/22_60.png\nJapan\nhttps://cdn.sofifa.net/flags/jp.png\n56\n56\nYokohama FC\nhttps://cdn.sofifa.net/teams/113197/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJul 1, 2005\nNaN\n2022\n177cm\n72kg\nNaN\n11.0\nNaN\n\n\n15375\n1179\nG. Buffon\n44\nhttps://cdn.sofifa.net/players/001/179/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n79\n79\nParma\nhttps://cdn.sofifa.net/teams/50/30.png\n...\nYes\n&lt;span class=\"pos pos0\"&gt;GK\nJul 1, 2021\nNaN\n2024\n192cm\n92kg\n€3M\n1.0\nNaN\n\n\n17257\n645\n17 D. Andersson\n43\nhttps://cdn.sofifa.net/players/000/645/17_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n57\n57\nHelsingborgs IF\nhttps://cdn.sofifa.net/teams/432/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nApr 21, 2016\nNaN\n2022\n187cm\n85kg\nNaN\n39.0\nNaN\n\n\n16036\n216692\nS. Torrico\n42\nhttps://cdn.sofifa.net/players/216/692/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n72\n72\nSan Lorenzo de Almagro\nhttps://cdn.sofifa.net/teams/1013/30.png\n...\nNo\n&lt;span class=\"pos pos0\"&gt;GK\nApr 25, 2013\nNaN\n2022\n183cm\n84kg\n€375K\n12.0\nNaN\n\n\n3143\n153260\n21 Hilton\n42\nhttps://cdn.sofifa.net/players/153/260/21_60.png\nBrazil\nhttps://cdn.sofifa.net/flags/br.png\n75\n75\nMontpellier Hérault SC\nhttps://cdn.sofifa.net/teams/70/30.png\n...\nYes\n&lt;span class=\"pos pos4\"&gt;RCB\nAug 1, 2011\nNaN\n2021\n180cm\n78kg\nNaN\n4.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n12942\n265596\n22 S. Gale\n16\nhttps://cdn.sofifa.net/players/265/596/22_60.png\nEngland\nhttps://cdn.sofifa.net/flags/gb-eng.png\n52\n67\nGillingham\nhttps://cdn.sofifa.net/teams/1802/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nNov 18, 2021\nNaN\n2022\n180cm\n73kg\n€404K\n29.0\nNaN\n\n\n15242\n267858\n22 L. Noian\n16\nhttps://cdn.sofifa.net/players/267/858/22_60.png\nRomania\nhttps://cdn.sofifa.net/flags/ro.png\n51\n71\nGaz Metan Mediaş\nhttps://cdn.sofifa.net/teams/112637/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nFeb 25, 2022\nNaN\n2026\n180cm\n70kg\n€376K\n77.0\nNaN\n\n\n12798\n259182\n21 G. Plumbuitu\n16\nhttps://cdn.sofifa.net/players/259/182/21_60.png\nRomania\nhttps://cdn.sofifa.net/flags/ro.png\n56\n70\nGaz Metan Mediaş\nhttps://cdn.sofifa.net/teams/112637/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nSep 25, 2020\nNaN\n2023\n176cm\n72kg\n€642K\n26.0\nNaN\n\n\n15382\n268768\n22 Kim Dae Hwan\n16\nhttps://cdn.sofifa.net/players/268/768/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n50\n68\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nMar 4, 2022\nNaN\n2026\n172cm\n67kg\n€206K\n32.0\nNaN\n\n\n17636\n263636\n22 D. Oncescu\n15\nhttps://cdn.sofifa.net/players/263/636/22_60.png\nRomania\nhttps://cdn.sofifa.net/flags/ro.png\n50\n72\nFC Dinamo 1948 Bucureşti\nhttps://cdn.sofifa.net/teams/100757/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 1, 2021\nNaN\n2025\n190cm\n77kg\n€306K\n34.0\nNaN\n\n\n\n\n17660 rows × 29 columns\n\n\n\n- 예시3: 능력치가 좋은 순서대로 정렬\n\ndf.sort_values(by='Overall',ascending=False)\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n41\n188545\nR. Lewandowski\n33\nhttps://cdn.sofifa.net/players/188/545/23_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n91\n91\nFC Barcelona\nhttps://cdn.sofifa.net/teams/241/30.png\n...\nYes\n&lt;span class=\"pos pos25\"&gt;ST\nJul 18, 2022\nNaN\n2025\n185cm\n81kg\n€172.2M\n9.0\nNaN\n\n\n56\n158023\nL. Messi\n35\nhttps://cdn.sofifa.net/players/158/023/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n91\n91\nParis Saint-Germain\nhttps://cdn.sofifa.net/teams/73/30.png\n...\nYes\n&lt;span class=\"pos pos23\"&gt;RW\nAug 10, 2021\nNaN\n2023\n169cm\n67kg\n€99.9M\n30.0\nNaN\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\nNaN\n2025\n181cm\n70kg\n€198.9M\n17.0\nNaN\n\n\n75\n231747\nK. Mbappé\n23\nhttps://cdn.sofifa.net/players/231/747/23_60.png\nFrance\nhttps://cdn.sofifa.net/flags/fr.png\n91\n95\nParis Saint-Germain\nhttps://cdn.sofifa.net/teams/73/30.png\n...\nYes\n&lt;span class=\"pos pos25\"&gt;ST\nJul 1, 2018\nNaN\n2025\n182cm\n73kg\n€366.7M\n7.0\nNaN\n\n\n124\n165153\nK. Benzema\n34\nhttps://cdn.sofifa.net/players/165/153/23_60.png\nFrance\nhttps://cdn.sofifa.net/flags/fr.png\n91\n91\nReal Madrid CF\nhttps://cdn.sofifa.net/teams/243/30.png\n...\nYes\n&lt;span class=\"pos pos21\"&gt;CF\nJul 9, 2009\nNaN\n2023\n185cm\n81kg\n€131.2M\n9.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n14353\n269032\n22 Chen Zeshi\n16\nhttps://cdn.sofifa.net/players/269/032/22_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n45\n55\nShandong Taishan\nhttps://cdn.sofifa.net/teams/111724/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nMay 1, 2022\nNaN\n2024\n180cm\n70kg\n€175K\n38.0\nNaN\n\n\n16215\n268279\n22 J. Looschen\n24\nhttps://cdn.sofifa.net/players/268/279/22_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n44\n47\nSV Meppen\nhttps://cdn.sofifa.net/teams/110597/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nMar 19, 2022\nNaN\n2026\n178cm\n78kg\n€92K\n42.0\nNaN\n\n\n14634\n269038\n22 Zhang Wenxuan\n16\nhttps://cdn.sofifa.net/players/269/038/22_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n44\n59\nGuangzhou FC\nhttps://cdn.sofifa.net/teams/111839/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nMay 1, 2022\nNaN\n2022\n175cm\n70kg\n€239K\n29.0\nNaN\n\n\n16042\n255283\n20 Kim Yeong Geun\n22\nhttps://cdn.sofifa.net/players/255/283/20_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n44\n49\nGyeongnam FC\nhttps://cdn.sofifa.net/teams/111588/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 9, 2020\nNaN\n2020\n174cm\n71kg\n€53K\n43.0\nNaN\n\n\n17618\n168933\n07 I. Paskov\n33\nhttps://cdn.sofifa.net/players/168/933/07_60.png\nBulgaria\nhttps://cdn.sofifa.net/flags/bg.png\n43\n42\nNaN\nhttps://cdn.sofifa.net/flags/bg.png\n...\nNaN\n&lt;span class=\"pos pos28\"&gt;SUB\nNaN\nNaN\nNaN\n184cm\n79kg\nNaN\n24.0\nNaN\n\n\n\n\n17660 rows × 29 columns\n\n\n\n\n\nD. df.info()\n\ndf.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 17660 entries, 0 to 17659\nData columns (total 29 columns):\n #   Column                    Non-Null Count  Dtype  \n---  ------                    --------------  -----  \n 0   ID                        17660 non-null  int64  \n 1   Name                      17660 non-null  object \n 2   Age                       17660 non-null  int64  \n 3   Photo                     17660 non-null  object \n 4   Nationality               17660 non-null  object \n 5   Flag                      17660 non-null  object \n 6   Overall                   17660 non-null  int64  \n 7   Potential                 17660 non-null  int64  \n 8   Club                      17449 non-null  object \n 9   Club Logo                 17660 non-null  object \n 10  Value                     17660 non-null  object \n 11  Wage                      17660 non-null  object \n 12  Special                   17660 non-null  int64  \n 13  Preferred Foot            17660 non-null  object \n 14  International Reputation  17660 non-null  float64\n 15  Weak Foot                 17660 non-null  float64\n 16  Skill Moves               17660 non-null  float64\n 17  Work Rate                 17660 non-null  object \n 18  Body Type                 17622 non-null  object \n 19  Real Face                 17622 non-null  object \n 20  Position                  17625 non-null  object \n 21  Joined                    16562 non-null  object \n 22  Loaned From               694 non-null    object \n 23  Contract Valid Until      17299 non-null  object \n 24  Height                    17660 non-null  object \n 25  Weight                    17660 non-null  object \n 26  Release Clause            16509 non-null  object \n 27  Kit Number                17625 non-null  float64\n 28  Best Overall Rating       21 non-null     object \ndtypes: float64(4), int64(5), object(20)\nmemory usage: 3.9+ MB\n\n\n\n\nE. 결측치 처리\n# 예제 – Club 컬럼의 결측치 갯수를 구하라.\n\ndf.Club.isna().sum()\n\nnp.int64(211)\n\n\n\ndf.Club.isna().mean() # 결측치의 비율\n\nnp.float64(0.011947904869762174)\n\n\n#\n# 예제 – 열별 결측치 비율을 구하라.\n\n{col_name: df[col_name].isna().mean() for col_name in df.columns}\n\n{'ID': np.float64(0.0),\n 'Name': np.float64(0.0),\n 'Age': np.float64(0.0),\n 'Photo': np.float64(0.0),\n 'Nationality': np.float64(0.0),\n 'Flag': np.float64(0.0),\n 'Overall': np.float64(0.0),\n 'Potential': np.float64(0.0),\n 'Club': np.float64(0.011947904869762174),\n 'Club Logo': np.float64(0.0),\n 'Value': np.float64(0.0),\n 'Wage': np.float64(0.0),\n 'Special': np.float64(0.0),\n 'Preferred Foot': np.float64(0.0),\n 'International Reputation': np.float64(0.0),\n 'Weak Foot': np.float64(0.0),\n 'Skill Moves': np.float64(0.0),\n 'Work Rate': np.float64(0.0),\n 'Body Type': np.float64(0.0021517553793884486),\n 'Real Face': np.float64(0.0021517553793884486),\n 'Position': np.float64(0.0019818799546998866),\n 'Joined': np.float64(0.06217440543601359),\n 'Loaned From': np.float64(0.9607021517553794),\n 'Contract Valid Until': np.float64(0.02044167610419026),\n 'Height': np.float64(0.0),\n 'Weight': np.float64(0.0),\n 'Release Clause': np.float64(0.06517553793884484),\n 'Kit Number': np.float64(0.0019818799546998866),\n 'Best Overall Rating': np.float64(0.9988108720271801)}\n\n\n#\n# 예제 – 결측값이 50%이상인 열을 제외하고 새로운 데이터프레임 df_new로 저장하라.\n\ndf_new = df[[col_name for col_name in df.columns if df[col_name].isna().mean() &lt; 0.5]]\ndf_new\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nWork Rate\nBody Type\nReal Face\nPosition\nJoined\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\n\n\n\n\n0\n209658\nL. Goretzka\n27\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\nHigh/ Medium\nUnique\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2018\n2026\n189cm\n82kg\n€157M\n8.0\n\n\n1\n212198\nBruno Fernandes\n27\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\nHigh/ High\nUnique\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 30, 2020\n2026\n179cm\n69kg\n€155M\n8.0\n\n\n2\n224334\nM. Acuña\n30\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n...\nHigh/ High\nStocky (170-185)\nNo\n&lt;span class=\"pos pos7\"&gt;LB\nSep 14, 2020\n2024\n172cm\n69kg\n€97.7M\n19.0\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nHigh/ High\nUnique\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\n2025\n181cm\n70kg\n€198.9M\n17.0\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nHigh/ High\nNormal (170-)\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\n2026\n172cm\n68kg\n€154.4M\n23.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\nMedium/ Medium\nNormal (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nApr 11, 2022\n2027\n190cm\n78kg\n€218K\n35.0\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nMedium/ Medium\nLean (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2022\n2026\n195cm\n84kg\n€188K\n21.0\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nMedium/ Medium\nLean (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 6, 2021\n2023\n190cm\n82kg\n€142K\n12.0\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\nMedium/ Medium\nNormal (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2020\n2021\n187cm\n79kg\n€214K\n40.0\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nMedium/ Medium\nNormal (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 8, 2020\n2021\n186cm\n78kg\n€131K\n30.0\n\n\n\n\n17660 rows × 27 columns\n\n\n\n#\n# 예제 – df_new에서 결측치가 포함된 행을 제외하라.\n\ndf_new.dropna()\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nWork Rate\nBody Type\nReal Face\nPosition\nJoined\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\n\n\n\n\n0\n209658\nL. Goretzka\n27\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\nHigh/ Medium\nUnique\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2018\n2026\n189cm\n82kg\n€157M\n8.0\n\n\n1\n212198\nBruno Fernandes\n27\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\nHigh/ High\nUnique\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 30, 2020\n2026\n179cm\n69kg\n€155M\n8.0\n\n\n2\n224334\nM. Acuña\n30\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n...\nHigh/ High\nStocky (170-185)\nNo\n&lt;span class=\"pos pos7\"&gt;LB\nSep 14, 2020\n2024\n172cm\n69kg\n€97.7M\n19.0\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nHigh/ High\nUnique\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\n2025\n181cm\n70kg\n€198.9M\n17.0\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nHigh/ High\nNormal (170-)\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\n2026\n172cm\n68kg\n€154.4M\n23.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\nMedium/ Medium\nNormal (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nApr 11, 2022\n2027\n190cm\n78kg\n€218K\n35.0\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nMedium/ Medium\nLean (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2022\n2026\n195cm\n84kg\n€188K\n21.0\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nMedium/ Medium\nLean (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 6, 2021\n2023\n190cm\n82kg\n€142K\n12.0\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\nMedium/ Medium\nNormal (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2020\n2021\n187cm\n79kg\n€214K\n40.0\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nMedium/ Medium\nNormal (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 8, 2020\n2021\n186cm\n78kg\n€131K\n30.0\n\n\n\n\n16364 rows × 27 columns\n\n\n\n#\n\n\nF. 기본 query\n- 예제: 나이가 20-25인 선수들을 출력\n\ndf.query(\"Age &gt;= 20 and Age &lt;= 25\")\ndf.query(\"20 &lt;= Age &lt;= 25\")\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\nNaN\n2026\n172cm\n68kg\n€154.4M\n23.0\nNaN\n\n\n17\n228702\nF. de Jong\n25\nhttps://cdn.sofifa.net/players/228/702/23_60.png\nNetherlands\nhttps://cdn.sofifa.net/flags/nl.png\n87\n92\nFC Barcelona\nhttps://cdn.sofifa.net/teams/241/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nJul 1, 2019\nNaN\n2026\n180cm\n74kg\n€247.6M\n21.0\nNaN\n\n\n21\n231281\nT. Alexander-Arnold\n23\nhttps://cdn.sofifa.net/players/231/281/23_60.png\nEngland\nhttps://cdn.sofifa.net/flags/gb-eng.png\n87\n90\nLiverpool\nhttps://cdn.sofifa.net/teams/9/30.png\n...\nYes\n&lt;span class=\"pos pos3\"&gt;RB\nOct 7, 2015\nNaN\n2025\n180cm\n69kg\n€193.5M\n66.0\nNaN\n\n\n23\n235212\nA. Hakimi\n23\nhttps://cdn.sofifa.net/players/235/212/23_60.png\nMorocco\nhttps://cdn.sofifa.net/flags/ma.png\n84\n87\nParis Saint-Germain\nhttps://cdn.sofifa.net/teams/73/30.png\n...\nYes\n&lt;span class=\"pos pos2\"&gt;RWB\nJul 6, 2021\nNaN\n2026\n181cm\n73kg\n€103M\n2.0\nNaN\n\n\n26\n241096\nS. Tonali\n22\nhttps://cdn.sofifa.net/players/241/096/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n84\n90\nAC Milan\nhttps://cdn.sofifa.net/teams/47/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nJul 8, 2021\nNaN\n2026\n181cm\n79kg\n€118.8M\n8.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17644\n265760\n22 N. Sorras\n23\nhttps://cdn.sofifa.net/players/265/760/22_60.png\nAustralia\nhttps://cdn.sofifa.net/flags/au.png\n50\n57\nPerth Glory\nhttps://cdn.sofifa.net/teams/111399/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nDec 3, 2021\nNaN\n2021\n194cm\n80kg\n€116K\n30.0\nNaN\n\n\n17646\n270906\nR. Badu\n20\nhttps://cdn.sofifa.net/players/270/906/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n52\n61\nKV Oostende\nhttps://cdn.sofifa.net/teams/682/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2020\nNaN\n2023\n190cm\n75kg\n€248K\n91.0\nNaN\n\n\n17653\n253186\n22 S. Booth\n20\nhttps://cdn.sofifa.net/players/253/186/22_60.png\nEngland\nhttps://cdn.sofifa.net/flags/gb-eng.png\n51\n60\nCrewe Alexandra\nhttps://cdn.sofifa.net/teams/121/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJul 1, 2019\nNaN\n2022\n195cm\n80kg\n€215K\n27.0\nNaN\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 6, 2021\nNaN\n2023\n190cm\n82kg\n€142K\n12.0\nNaN\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 8, 2020\nNaN\n2021\n186cm\n78kg\n€131K\n30.0\nNaN\n\n\n\n\n8794 rows × 29 columns\n\n\n\n- 예제: Potential - Overall 이 20이상인 선수를 출력하라\n\ndf.query(\"Potential - Overall &gt; 20\")\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n4207\n269136\n22 K. Mainoo\n16\nhttps://cdn.sofifa.net/players/269/136/22_60.png\nEngland\nhttps://cdn.sofifa.net/flags/gb-eng.png\n62\n83\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nMay 16, 2022\nNaN\n2025\n175cm\n80kg\n€3.4M\n99.0\nNaN\n\n\n4532\n262242\nS. Raebiger\n17\nhttps://cdn.sofifa.net/players/262/242/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n62\n84\nSpVgg Greuther Fürth\nhttps://cdn.sofifa.net/teams/165/30.png\n...\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2022\nNaN\n2025\n176cm\n70kg\n€3.1M\n6.0\nNaN\n\n\n4981\n260144\nC. Patino\n18\nhttps://cdn.sofifa.net/players/260/144/23_60.png\nEngland\nhttps://cdn.sofifa.net/flags/gb-eng.png\n64\n85\nBlackpool\nhttps://cdn.sofifa.net/teams/1926/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nNaN\n&lt;a href=\"/team/1/arsenal/\"&gt;Arsenal&lt;/a&gt;\nJun 30, 2023\n182cm\n75kg\nNaN\n28.0\nNaN\n\n\n5284\n266127\n22 L. Hall\n16\nhttps://cdn.sofifa.net/players/266/127/22_60.png\nEngland\nhttps://cdn.sofifa.net/flags/gb-eng.png\n59\n80\nChelsea\nhttps://cdn.sofifa.net/teams/5/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nSep 8, 2021\nNaN\n2023\n180cm\n72kg\n€2M\n75.0\nNaN\n\n\n5332\n259356\nC. Chukwuemeka\n18\nhttps://cdn.sofifa.net/players/259/356/23_60.png\nEngland\nhttps://cdn.sofifa.net/flags/gb-eng.png\n64\n86\nChelsea\nhttps://cdn.sofifa.net/teams/5/30.png\n...\nYes\n&lt;span class=\"pos pos29\"&gt;RES\nAug 2, 2022\nNaN\n2028\n185cm\n70kg\n€5.4M\n30.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17561\n267855\n22 S. Bumbar\n16\nhttps://cdn.sofifa.net/players/267/855/22_60.png\nRomania\nhttps://cdn.sofifa.net/flags/ro.png\n50\n73\nGaz Metan Mediaş\nhttps://cdn.sofifa.net/teams/112637/30.png\n...\nNo\n&lt;span class=\"pos pos0\"&gt;GK\nFeb 25, 2022\nNaN\n2026\n176cm\n72kg\n€306K\n1.0\nNaN\n\n\n17582\n261519\n21 K. Ersunar\n17\nhttps://cdn.sofifa.net/players/261/519/21_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n50\n71\nGalatasaray SK\nhttps://cdn.sofifa.net/teams/325/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nSep 14, 2020\nNaN\n2023\n190cm\n72kg\n€377K\n56.0\nNaN\n\n\n17599\n271112\nG. Beavers\n17\nhttps://cdn.sofifa.net/players/271/112/23_60.png\nUnited States\nhttps://cdn.sofifa.net/flags/us.png\n52\n76\nReal Salt Lake\nhttps://cdn.sofifa.net/teams/111065/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nJan 12, 2022\nNaN\n2023\n193cm\n83kg\n€564K\n35.0\nNaN\n\n\n17607\n271179\nA. Brînzea\n16\nhttps://cdn.sofifa.net/players/271/179/23_60.png\nRomania\nhttps://cdn.sofifa.net/flags/ro.png\n48\n72\nAFC Chindia Târgoviște\nhttps://cdn.sofifa.net/teams/113387/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJul 1, 2022\nNaN\n2027\n187cm\n76kg\n€306K\n99.0\nNaN\n\n\n17636\n263636\n22 D. Oncescu\n15\nhttps://cdn.sofifa.net/players/263/636/22_60.png\nRomania\nhttps://cdn.sofifa.net/flags/ro.png\n50\n72\nFC Dinamo 1948 Bucureşti\nhttps://cdn.sofifa.net/teams/100757/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 1, 2021\nNaN\n2025\n190cm\n77kg\n€306K\n34.0\nNaN\n\n\n\n\n172 rows × 29 columns\n\n\n\n- 예제3: 한국선수들(=Korea Republic)중 능력치가 높은순서대로 출력하라.\n\ndf.query('Nationality == \"Korea Republic\" ' ).sort_values(by=\"Overall\",ascending=False)\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n135\n200104\nH. Son\n29\nhttps://cdn.sofifa.net/players/200/104/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n89\n89\nTottenham Hotspur\nhttps://cdn.sofifa.net/teams/18/30.png\n...\nYes\n&lt;span class=\"pos pos27\"&gt;LW\nAug 28, 2015\nNaN\n2025\n183cm\n78kg\n€191.9M\n7.0\nNaN\n\n\n3780\n237086\nKim Min Jae\n25\nhttps://cdn.sofifa.net/players/237/086/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n79\n84\nNapoli\nhttps://cdn.sofifa.net/teams/48/30.png\n...\nNo\n&lt;span class=\"pos pos6\"&gt;LCB\nJul 28, 2022\nNaN\n2025\n190cm\n81kg\n€40.8M\n3.0\nNaN\n\n\n1442\n39943\n14 J. Park\n32\nhttps://cdn.sofifa.net/players/039/943/14_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n78\n78\nPSV\nhttps://cdn.sofifa.net/teams/247/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nNaN\n&lt;a href=\"/team/15/queens-park-rangers/\"&gt;Queens...\nJun 30, 2014\n178cm\n73kg\nNaN\n33.0\nNaN\n\n\n1749\n226380\nHwang Hee Chan\n26\nhttps://cdn.sofifa.net/players/226/380/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n77\n78\nWolverhampton Wanderers\nhttps://cdn.sofifa.net/teams/110/30.png\n...\nYes\n&lt;span class=\"pos pos27\"&gt;LW\nJul 1, 2022\nNaN\n2026\n177cm\n77kg\n€24.7M\n11.0\nNaN\n\n\n5084\n211005\nJang Hyeon Soo\n30\nhttps://cdn.sofifa.net/players/211/005/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n75\n75\nAl Hilal\nhttps://cdn.sofifa.net/teams/605/30.png\n...\nNo\n&lt;span class=\"pos pos4\"&gt;RCB\nJul 13, 2019\nNaN\n2023\n183cm\n83kg\n€7.8M\n20.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n14478\n255277\n20 Kim Jun Hyeok\n18\nhttps://cdn.sofifa.net/players/255/277/20_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n47\n62\nGyeongnam FC\nhttps://cdn.sofifa.net/teams/111588/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 6, 2020\nNaN\n2020\n179cm\n70kg\n€113K\n29.0\nNaN\n\n\n15630\n255279\n20 Kim Ho Su\n21\nhttps://cdn.sofifa.net/players/255/279/20_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n47\n54\nGyeongnam FC\nhttps://cdn.sofifa.net/teams/111588/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 7, 2020\nNaN\n2020\n181cm\n77kg\n€58K\n42.0\nNaN\n\n\n15834\n266315\n22 Bae Jae Ik\n20\nhttps://cdn.sofifa.net/players/266/315/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n47\n54\nJeonbuk Hyundai Motors\nhttps://cdn.sofifa.net/teams/1477/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2022\nNaN\n2026\n175cm\n70kg\n€135K\n32.0\nNaN\n\n\n15513\n266751\n22 Jung Ho Yeon\n20\nhttps://cdn.sofifa.net/players/266/751/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n45\n53\nGwangJu FC\nhttps://cdn.sofifa.net/teams/112258/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 20, 2022\nNaN\n2026\n180cm\n73kg\n€145K\n23.0\nNaN\n\n\n16042\n255283\n20 Kim Yeong Geun\n22\nhttps://cdn.sofifa.net/players/255/283/20_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n44\n49\nGyeongnam FC\nhttps://cdn.sofifa.net/teams/111588/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 9, 2020\nNaN\n2020\n174cm\n71kg\n€53K\n43.0\nNaN\n\n\n\n\n284 rows × 29 columns\n\n\n\n\n\nG. 외부변수를 이용\n- 예제: 한국선수들(=Korea Republic)중 능력치가 세계평균 이상인 선수들을 출력하라.\n\nm= df.Overall.mean()\nm\n\nnp.float64(63.36959229898075)\n\n\n\n#df.query(\"Overall &gt; 63.36959229898075 and Nationality == 'Korea Republic'\")\n#df.query(\"Overall &gt; Overall.mean() and Nationality == 'Korea Republic'\")\ndf.query(\"Overall &gt; @m and Nationality == 'Korea Republic'\")\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n135\n200104\nH. Son\n29\nhttps://cdn.sofifa.net/players/200/104/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n89\n89\nTottenham Hotspur\nhttps://cdn.sofifa.net/teams/18/30.png\n...\nYes\n&lt;span class=\"pos pos27\"&gt;LW\nAug 28, 2015\nNaN\n2025\n183cm\n78kg\n€191.9M\n7.0\nNaN\n\n\n1120\n221467\nLee Chang Min\n28\nhttps://cdn.sofifa.net/players/221/467/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n72\n72\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nNo\n&lt;span class=\"pos pos13\"&gt;RCM\nJan 1, 2016\nNaN\n2022\n179cm\n77kg\n€2.9M\n8.0\nNaN\n\n\n1322\n212260\nHwang Ui Jo\n29\nhttps://cdn.sofifa.net/players/212/260/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n75\n75\nFC Girondins de Bordeaux\nhttps://cdn.sofifa.net/teams/59/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 18, 2019\nNaN\n2023\n185cm\n82kg\n€9.9M\n18.0\nNaN\n\n\n1395\n199231\nKim Tae Hwan\n32\nhttps://cdn.sofifa.net/players/199/231/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n72\n72\nUlsan Hyundai FC\nhttps://cdn.sofifa.net/teams/1473/30.png\n...\nNo\n&lt;span class=\"pos pos3\"&gt;RB\nFeb 2, 2015\nNaN\n2022\n177cm\n72kg\n€2.1M\n23.0\nNaN\n\n\n1442\n39943\n14 J. Park\n32\nhttps://cdn.sofifa.net/players/039/943/14_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n78\n78\nPSV\nhttps://cdn.sofifa.net/teams/247/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nNaN\n&lt;a href=\"/team/15/queens-park-rangers/\"&gt;Queens...\nJun 30, 2014\n178cm\n73kg\nNaN\n33.0\nNaN\n\n\n1508\n205156\nChoi Young Joon\n30\nhttps://cdn.sofifa.net/players/205/156/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n72\n72\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nNo\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 5, 2022\nNaN\n2026\n181cm\n76kg\n€2.5M\n6.0\nNaN\n\n\n1597\n199236\nHong Chul\n31\nhttps://cdn.sofifa.net/players/199/236/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n71\n71\nDaegu FC\nhttps://cdn.sofifa.net/teams/2056/30.png\n...\nNo\n&lt;span class=\"pos pos8\"&gt;LWB\nJan 5, 2022\nNaN\n2022\n176cm\n70kg\n€1.8M\n33.0\nNaN\n\n\n1749\n226380\nHwang Hee Chan\n26\nhttps://cdn.sofifa.net/players/226/380/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n77\n78\nWolverhampton Wanderers\nhttps://cdn.sofifa.net/teams/110/30.png\n...\nYes\n&lt;span class=\"pos pos27\"&gt;LW\nJul 1, 2022\nNaN\n2026\n177cm\n77kg\n€24.7M\n11.0\nNaN\n\n\n1863\n228010\n22 Hwang In beom\n24\nhttps://cdn.sofifa.net/players/228/010/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n72\n77\nFC Seoul\nhttps://cdn.sofifa.net/teams/982/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nApr 7, 2022\nNaN\n2022\n177cm\n70kg\n€4.6M\n96.0\nNaN\n\n\n2491\n182152\nKoo Ja Cheol\n33\nhttps://cdn.sofifa.net/players/182/152/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n66\n66\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nMar 4, 2022\nNaN\n2025\n183cm\n79kg\n€656K\n42.0\nNaN\n\n\n2754\n243780\nLee Kang In\n21\nhttps://cdn.sofifa.net/players/243/780/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n73\n81\nRCD Mallorca\nhttps://cdn.sofifa.net/teams/453/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nAug 30, 2021\nNaN\n2025\n173cm\n68kg\n€16.8M\n19.0\nNaN\n\n\n2773\n155355\nLee Chung Yong\n33\nhttps://cdn.sofifa.net/players/155/355/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n70\n70\nUlsan Hyundai FC\nhttps://cdn.sofifa.net/teams/1473/30.png\n...\nYes\n&lt;span class=\"pos pos12\"&gt;RM\nMar 4, 2020\nNaN\n2022\n180cm\n70kg\n€1.3M\n72.0\nNaN\n\n\n2850\n246937\nUm Won Sang\n23\nhttps://cdn.sofifa.net/players/246/937/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n72\n80\nUlsan Hyundai FC\nhttps://cdn.sofifa.net/teams/1473/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nFeb 20, 2022\nNaN\n2025\n171cm\n63kg\n€7.5M\n11.0\nNaN\n\n\n3036\n236586\nKim Jin Ya\n24\nhttps://cdn.sofifa.net/players/236/586/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n66\n72\nFC Seoul\nhttps://cdn.sofifa.net/teams/982/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nDec 14, 2019\nNaN\n2023\n177cm\n63kg\n€1.9M\n17.0\nNaN\n\n\n3215\n211927\nKwon Chang Hoon\n28\nhttps://cdn.sofifa.net/players/211/927/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n66\n66\nSangju Sangmu FC\nhttps://cdn.sofifa.net/teams/2055/30.png\n...\nNo\n&lt;span class=\"pos pos23\"&gt;RW\nNaN\n&lt;a href=\"/team/983/suwon-samsung-bluewings/\"&gt;S...\nJun 26, 2023\n173cm\n72kg\nNaN\n26.0\nNaN\n\n\n3372\n201528\nKim Young Gwon\n32\nhttps://cdn.sofifa.net/players/201/528/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n71\n71\nUlsan Hyundai FC\nhttps://cdn.sofifa.net/teams/1473/30.png\n...\nNo\n&lt;span class=\"pos pos6\"&gt;LCB\nDec 19, 2021\nNaN\n2026\n186cm\n74kg\n€1.6M\n19.0\nNaN\n\n\n3780\n237086\nKim Min Jae\n25\nhttps://cdn.sofifa.net/players/237/086/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n79\n84\nNapoli\nhttps://cdn.sofifa.net/teams/48/30.png\n...\nNo\n&lt;span class=\"pos pos6\"&gt;LCB\nJul 28, 2022\nNaN\n2025\n190cm\n81kg\n€40.8M\n3.0\nNaN\n\n\n3788\n239138\nJeong Woo Yeong\n22\nhttps://cdn.sofifa.net/players/239/138/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n72\n77\nSport-Club Freiburg\nhttps://cdn.sofifa.net/teams/25/30.png\n...\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2019\nNaN\n2025\n179cm\n69kg\n€6.4M\n29.0\nNaN\n\n\n3951\n212778\n22 Kwon Kyung Won\n29\nhttps://cdn.sofifa.net/players/212/778/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n72\n72\nGamba Osaka\nhttps://cdn.sofifa.net/teams/112093/30.png\n...\nNo\n&lt;span class=\"pos pos6\"&gt;LCB\nJan 5, 2022\nNaN\n2024\n188cm\n81kg\n€2.5M\n20.0\nNaN\n\n\n3993\n248188\nSong Min Kyu\n22\nhttps://cdn.sofifa.net/players/248/188/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n68\n78\nJeonbuk Hyundai Motors\nhttps://cdn.sofifa.net/teams/1477/30.png\n...\nNo\n&lt;span class=\"pos pos23\"&gt;RW\nJul 20, 2021\nNaN\n2025\n179cm\n72kg\n€4.1M\n21.0\nNaN\n\n\n4007\n243061\nLee Dong Jun\n25\nhttps://cdn.sofifa.net/players/243/061/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n70\n73\nHertha BSC\nhttps://cdn.sofifa.net/teams/166/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nJan 29, 2022\nNaN\n2025\n173cm\n64kg\n€3.7M\n30.0\nNaN\n\n\n4233\n254980\nSeol Young Woo\n23\nhttps://cdn.sofifa.net/players/254/980/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n68\n77\nUlsan Hyundai FC\nhttps://cdn.sofifa.net/teams/1473/30.png\n...\nNo\n&lt;span class=\"pos pos7\"&gt;LB\nJan 8, 2020\nNaN\n2022\n180cm\n72kg\n€3.9M\n66.0\nNaN\n\n\n4744\n212912\nPark Ji Soo\n28\nhttps://cdn.sofifa.net/players/212/912/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n69\n71\nSangju Sangmu FC\nhttps://cdn.sofifa.net/teams/2055/30.png\n...\nNo\n&lt;span class=\"pos pos4\"&gt;RCB\nNaN\n&lt;a href=\"/team/111839/guangzhou-fc/\"&gt;Guangzhou...\nDec 31, 2022\n187cm\n83kg\nNaN\n23.0\nNaN\n\n\n4823\n254814\nWon Du Jae\n24\nhttps://cdn.sofifa.net/players/254/814/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n68\n72\nUlsan Hyundai FC\nhttps://cdn.sofifa.net/teams/1473/30.png\n...\nNo\n&lt;span class=\"pos pos9\"&gt;RDM\nDec 30, 2019\nNaN\n2022\n187cm\n80kg\n€2.2M\n16.0\nNaN\n\n\n4874\n247686\nCho Gue Sung\n24\nhttps://cdn.sofifa.net/players/247/686/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n69\n76\nSangju Sangmu FC\nhttps://cdn.sofifa.net/teams/2055/30.png\n...\nNo\n&lt;span class=\"pos pos25\"&gt;ST\nNaN\n&lt;a href=\"/team/1477/jeonbuk-hyundai-motors/\"&gt;J...\nSep 6, 2022\n188cm\n77kg\nNaN\n9.0\nNaN\n\n\n5084\n211005\nJang Hyeon Soo\n30\nhttps://cdn.sofifa.net/players/211/005/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n75\n75\nAl Hilal\nhttps://cdn.sofifa.net/teams/605/30.png\n...\nNo\n&lt;span class=\"pos pos4\"&gt;RCB\nJul 13, 2019\nNaN\n2023\n183cm\n83kg\n€7.8M\n20.0\nNaN\n\n\n5191\n233581\nSong Si Woo\n28\nhttps://cdn.sofifa.net/players/233/581/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n65\n65\nIncheon United FC\nhttps://cdn.sofifa.net/teams/110765/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nJan 1, 2016\nNaN\n2024\n174cm\n72kg\n€906K\n19.0\nNaN\n\n\n5532\n263845\nPark Seung Wook\n25\nhttps://cdn.sofifa.net/players/263/845/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n67\n69\nPohang Steelers\nhttps://cdn.sofifa.net/teams/1474/30.png\n...\nNo\n&lt;span class=\"pos pos4\"&gt;RCB\nJul 29, 2021\nNaN\n2024\n184cm\n78kg\n€1.6M\n14.0\nNaN\n\n\n5838\n221756\nLee Gwang Hyeok\n26\nhttps://cdn.sofifa.net/players/221/756/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n65\n66\nPohang Steelers\nhttps://cdn.sofifa.net/teams/1474/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nJan 1, 2014\nNaN\n2022\n169cm\n60kg\n€1.1M\n22.0\nNaN\n\n\n6592\n255500\nSeo Min Woo\n24\nhttps://cdn.sofifa.net/players/255/500/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n65\n72\nGangwon FC\nhttps://cdn.sofifa.net/teams/112115/30.png\n...\nNo\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 6, 2020\nNaN\n2022\n184cm\n75kg\n€1.9M\n4.0\nNaN\n\n\n7148\n255917\nGoh Young Jun\n20\nhttps://cdn.sofifa.net/players/255/917/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n64\n78\nPohang Steelers\nhttps://cdn.sofifa.net/teams/1474/30.png\n...\nNo\n&lt;span class=\"pos pos18\"&gt;CAM\nJan 1, 2020\nNaN\n2024\n168cm\n69kg\n€2.6M\n11.0\nNaN\n\n\n7623\n231947\n22 Oh Se Hun\n22\nhttps://cdn.sofifa.net/players/231/947/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n67\n75\nShimizu S-Pulse\nhttps://cdn.sofifa.net/teams/101149/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nFeb 24, 2022\nNaN\n2024\n193cm\n85kg\n€3.3M\n20.0\nNaN\n\n\n9097\n227790\nJeong Seung Hyun\n28\nhttps://cdn.sofifa.net/players/227/790/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n72\n74\nSangju Sangmu FC\nhttps://cdn.sofifa.net/teams/2055/30.png\n...\nNo\n&lt;span class=\"pos pos6\"&gt;LCB\nNaN\n&lt;a href=\"/team/1473/ulsan-hyundai-fc/\"&gt;Ulsan H...\nSep 6, 2022\n188cm\n74kg\nNaN\n15.0\nNaN\n\n\n12940\n260498\nKwak Yoon Ho\n26\nhttps://cdn.sofifa.net/players/260/498/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n64\n67\nSuwon FC\nhttps://cdn.sofifa.net/teams/112558/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nJan 13, 2021\nNaN\n2022\n185cm\n83kg\n€894K\n4.0\nNaN\n\n\n16002\n221912\nKang Hyeon Mu\n27\nhttps://cdn.sofifa.net/players/221/912/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n70\n72\nPohang Steelers\nhttps://cdn.sofifa.net/teams/1474/30.png\n...\nNo\n&lt;span class=\"pos pos0\"&gt;GK\nJan 1, 2014\nNaN\n2026\n185cm\n78kg\n€2M\n31.0\nNaN\n\n\n16011\n212432\nJo Hyeon Woo\n30\nhttps://cdn.sofifa.net/players/212/432/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n73\n73\nUlsan Hyundai FC\nhttps://cdn.sofifa.net/teams/1473/30.png\n...\nNo\n&lt;span class=\"pos pos0\"&gt;GK\nJan 20, 2020\nNaN\n2022\n189cm\n75kg\n€2.6M\n21.0\nNaN\n\n\n16417\n238570\nSong Bum Keun\n24\nhttps://cdn.sofifa.net/players/238/570/23_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n70\n78\nJeonbuk Hyundai Motors\nhttps://cdn.sofifa.net/teams/1477/30.png\n...\nNo\n&lt;span class=\"pos pos0\"&gt;GK\nJan 5, 2018\nNaN\n2022\n194cm\n88kg\n€4.7M\n31.0\nNaN\n\n\n\n\n37 rows × 29 columns\n\n\n\n\n\nH. 열의 이름에 공백이 있을 경우\n- 예제: Skill Moves &gt; 4 인 선수를 구하라.\n\ndf.query('`Skill Moves` &gt; 4').head(5)\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n19\n193082\nJ. Cuadrado\n34\nhttps://cdn.sofifa.net/players/193/082/23_60.png\nColombia\nhttps://cdn.sofifa.net/flags/co.png\n83\n83\nJuventus\nhttps://cdn.sofifa.net/teams/45/30.png\n...\nYes\n&lt;span class=\"pos pos3\"&gt;RB\nJul 1, 2017\nNaN\n2023\n179cm\n72kg\n€23M\n11.0\nNaN\n\n\n27\n189509\nThiago\n31\nhttps://cdn.sofifa.net/players/189/509/23_60.png\nSpain\nhttps://cdn.sofifa.net/flags/es.png\n86\n86\nLiverpool\nhttps://cdn.sofifa.net/teams/9/30.png\n...\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nSep 18, 2020\nNaN\n2024\n174cm\n70kg\n€102.7M\n6.0\nNaN\n\n\n44\n232411\nC. Nkunku\n24\nhttps://cdn.sofifa.net/players/232/411/23_60.png\nFrance\nhttps://cdn.sofifa.net/flags/fr.png\n86\n89\nRB Leipzig\nhttps://cdn.sofifa.net/teams/112172/30.png\n...\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nNaN\nNaN\nNaN\n175cm\n73kg\n€166.9M\n12.0\nNaN\n\n\n62\n233927\nLucas Paquetá\n24\nhttps://cdn.sofifa.net/players/233/927/23_60.png\nBrazil\nhttps://cdn.sofifa.net/flags/br.png\n82\n87\nOlympique Lyonnais\nhttps://cdn.sofifa.net/teams/66/30.png\n...\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nOct 1, 2020\nNaN\n2025\n180cm\n72kg\n€90.9M\n10.0\nNaN\n\n\n75\n231747\nK. Mbappé\n23\nhttps://cdn.sofifa.net/players/231/747/23_60.png\nFrance\nhttps://cdn.sofifa.net/flags/fr.png\n91\n95\nParis Saint-Germain\nhttps://cdn.sofifa.net/teams/73/30.png\n...\nYes\n&lt;span class=\"pos pos25\"&gt;ST\nJul 1, 2018\nNaN\n2025\n182cm\n73kg\n€366.7M\n7.0\nNaN\n\n\n\n\n5 rows × 29 columns\n\n\n\n\n\nI. 열의 이름 변경\n# 예제: 열의 이름 출력하고, 열의 이름중 공백()이 있을 경우 언더바(_) 로 바꾸자.\n컬럼출력\n\ndf.columns\n\nIndex(['ID', 'Name', 'Age', 'Photo', 'Nationality', 'Flag', 'Overall',\n       'Potential', 'Club', 'Club Logo', 'Value', 'Wage', 'Special',\n       'Preferred Foot', 'International Reputation', 'Weak Foot',\n       'Skill Moves', 'Work Rate', 'Body Type', 'Real Face', 'Position',\n       'Joined', 'Loaned From', 'Contract Valid Until', 'Height', 'Weight',\n       'Release Clause', 'Kit Number', 'Best Overall Rating'],\n      dtype='object')\n\n\ndf.columns에 직접대입\n\ndf.columns = [l.replace(' ', '_') for l in df.columns]\n\n\ndf.columns\n\nIndex(['ID', 'Name', 'Age', 'Photo', 'Nationality', 'Flag', 'Overall',\n       'Potential', 'Club', 'Club_Logo', 'Value', 'Wage', 'Special',\n       'Preferred_Foot', 'International_Reputation', 'Weak_Foot',\n       'Skill_Moves', 'Work_Rate', 'Body_Type', 'Real_Face', 'Position',\n       'Joined', 'Loaned_From', 'Contract_Valid_Until', 'Height', 'Weight',\n       'Release_Clause', 'Kit_Number', 'Best_Overall_Rating'],\n      dtype='object')\n\n\n#\n\n\nJ. transform column\n# 예제df.Height`열 변환하기 + 변환된 열 할당하기\n\ndf.assign(Height = [int(l.replace(\"cm\",\"\")) for l in df.Height])\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n0\n209658\nL. Goretzka\n27\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2018\nNaN\n2026\n189\n82kg\n€157M\n8.0\nNaN\n\n\n1\n212198\nBruno Fernandes\n27\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 30, 2020\nNaN\n2026\n179\n69kg\n€155M\n8.0\nNaN\n\n\n2\n224334\nM. Acuña\n30\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n...\nNo\n&lt;span class=\"pos pos7\"&gt;LB\nSep 14, 2020\nNaN\n2024\n172\n69kg\n€97.7M\n19.0\nNaN\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\nNaN\n2025\n181\n70kg\n€198.9M\n17.0\nNaN\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\nNaN\n2026\n172\n68kg\n€154.4M\n23.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nApr 11, 2022\nNaN\n2027\n190\n78kg\n€218K\n35.0\nNaN\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2022\nNaN\n2026\n195\n84kg\n€188K\n21.0\nNaN\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 6, 2021\nNaN\n2023\n190\n82kg\n€142K\n12.0\nNaN\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2020\nNaN\n2021\n187\n79kg\n€214K\n40.0\nNaN\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 8, 2020\nNaN\n2021\n186\n78kg\n€131K\n30.0\nNaN\n\n\n\n\n17660 rows × 29 columns"
  },
  {
    "objectID": "content/12wk-2.html#숙제",
    "href": "content/12wk-2.html#숙제",
    "title": "12wk-2: [DataFrame] – FIFA23 데이터 // 숙제",
    "section": "2. 숙제",
    "text": "2. 숙제\n- 아래의 자료에서 선수들의 몸무게의 평균을 구하여라.\n\ndf = pd.read_csv('FIFA23_official_data.csv')\ndf\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n0\n209658\nL. Goretzka\n27\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2018\nNaN\n2026\n189cm\n82kg\n€157M\n8.0\nNaN\n\n\n1\n212198\nBruno Fernandes\n27\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 30, 2020\nNaN\n2026\n179cm\n69kg\n€155M\n8.0\nNaN\n\n\n2\n224334\nM. Acuña\n30\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n...\nNo\n&lt;span class=\"pos pos7\"&gt;LB\nSep 14, 2020\nNaN\n2024\n172cm\n69kg\n€97.7M\n19.0\nNaN\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\nNaN\n2025\n181cm\n70kg\n€198.9M\n17.0\nNaN\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\nNaN\n2026\n172cm\n68kg\n€154.4M\n23.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nApr 11, 2022\nNaN\n2027\n190cm\n78kg\n€218K\n35.0\nNaN\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2022\nNaN\n2026\n195cm\n84kg\n€188K\n21.0\nNaN\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 6, 2021\nNaN\n2023\n190cm\n82kg\n€142K\n12.0\nNaN\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2020\nNaN\n2021\n187cm\n79kg\n€214K\n40.0\nNaN\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 8, 2020\nNaN\n2021\n186cm\n78kg\n€131K\n30.0\nNaN\n\n\n\n\n17660 rows × 29 columns\n\n\n\n(풀이)\n\n# df['Weight'] = [int(l.replace(\"kg\",\"\")) for l in df.Weight] # 몸무게가 숫자화된것 \n# df.Weight.mean()\n\n\ndf.assign(Weight=  [int(l.replace(\"kg\",\"\")) for l in df.Weight])['Weight'].mean()\n\nnp.float64(74.32616081540203)"
  },
  {
    "objectID": "content/fin-python.html",
    "href": "content/fin-python.html",
    "title": "기말고사 - Python // 예상문제",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np"
  },
  {
    "objectID": "content/fin-python.html#타이타닉",
    "href": "content/fin-python.html#타이타닉",
    "title": "기말고사 - Python // 예상문제",
    "section": "1. 타이타닉",
    "text": "1. 타이타닉\n\ndf = pd.read_csv(\"titanic.csv\")\ndf\n\n\n\n\n\n\n\n\nPassengerId\nSurvived\nPclass\nName\nSex\nAge\nSibSp\nParch\nTicket\nFare\nCabin\nEmbarked\n\n\n\n\n0\n1\n0\n3\nBraund, Mr. Owen Harris\nmale\n22.0\n1\n0\nA/5 21171\n7.2500\nNaN\nS\n\n\n1\n2\n1\n1\nCumings, Mrs. John Bradley (Florence Briggs Th...\nfemale\n38.0\n1\n0\nPC 17599\n71.2833\nC85\nC\n\n\n2\n3\n1\n3\nHeikkinen, Miss. Laina\nfemale\n26.0\n0\n0\nSTON/O2. 3101282\n7.9250\nNaN\nS\n\n\n3\n4\n1\n1\nFutrelle, Mrs. Jacques Heath (Lily May Peel)\nfemale\n35.0\n1\n0\n113803\n53.1000\nC123\nS\n\n\n4\n5\n0\n3\nAllen, Mr. William Henry\nmale\n35.0\n0\n0\n373450\n8.0500\nNaN\nS\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n886\n887\n0\n2\nMontvila, Rev. Juozas\nmale\n27.0\n0\n0\n211536\n13.0000\nNaN\nS\n\n\n887\n888\n1\n1\nGraham, Miss. Margaret Edith\nfemale\n19.0\n0\n0\n112053\n30.0000\nB42\nS\n\n\n888\n889\n0\n3\nJohnston, Miss. Catherine Helen \"Carrie\"\nfemale\nNaN\n1\n2\nW./C. 6607\n23.4500\nNaN\nS\n\n\n889\n890\n1\n1\nBehr, Mr. Karl Howell\nmale\n26.0\n0\n0\n111369\n30.0000\nC148\nC\n\n\n890\n891\n0\n3\nDooley, Mr. Patrick\nmale\n32.0\n0\n0\n370376\n7.7500\nNaN\nQ\n\n\n\n\n891 rows × 12 columns\n\n\n\n(1) Fare의 평균을 구하여라.\n(풀이)\n\ndf['Fare'].mean()\n\nnp.float64(32.204207968574636)\n\n\n(2) 아래의 그룹중 가장 생존률이 높은 그룹은?\n\n여성, Fare &gt;= 32\n여성, Fare &lt; 32\n남성, Fare &gt;= 32\n남성, Fare &lt; 32\n\n(풀이)\n\ndf = pd.read_csv(\"titanic.csv\")\ndf['Fare&gt;=32']  = df['Fare'] &gt;= 32\ndf.groupby(['Sex','Fare&gt;=32'])[['Survived']].mean()\n\n\n\n\n\n\n\n\n\nSurvived\n\n\nSex\nFare&gt;=32\n\n\n\n\n\nfemale\nFalse\n0.666667\n\n\nTrue\n0.894231\n\n\nmale\nFalse\n0.161702\n\n\nTrue\n0.308411\n\n\n\n\n\n\n\n(3) 아래를 잘 읽고 데이터를 올바르게 분석한 이를 모두 고르라. (단, 분석시 Fare=0인 데이터는 제외한다)\n\n다호: Pclass 숫자가 작을수록 평균 요금(Fare)이 더 높은 경향이 있어.\n소윤: 맞아. 예를 들어 Pclass=1과 Pclass=3 집단 사이에는 평균 요금이 70 이상 차이 나.\n수호: 그런데 흥미로운 건, Pclass=2와 Pclass=3 사이보다 Pclass=1과 Pclass=2 사이의 평균 요금 차이가 더 크다는 거야. 즉, Pclass가 한 단계 올라갈 때 요금이 균등하게 증가하는 게 아니라, 1등급으로 올라갈 때 요금이 훨씬 더 급격히 증가한다는 뜻이야. 이건 1등석이 단순히 한 단계 높은 수준이 아니라, 완전히 다른 가격대를 가진 특별한 계층이라는 걸 보여주는 것 같아.\n사라: Pclass=3이라도 여유 있는 사람이 있었던 걸까? max Fare가 꽤 높더라고. 실제로 3등석 승객 중에서 2등급 평균 요금을 넘는 요금을 낸 사람도 12명이나 있었어. 대략 10명 정도는 2등석의 평균요금보다 비싼 요금을 내고도 3등석을 이용한 셈이지.\n줄리: 슬픈 사실은, 이 Pclass가 단순히 요금만이 아니라 생존률에도 큰 영향을 줬다는 점이야. 실제로 Pclass=1 승객의 생존률은 63%나 되는데, Pclass=3 승객은 겨우 24%밖에 안 돼. 1등석은 절반 이상이 살아남았고, 3등석은 4명 중 1명만 살아남은 거야. 즉, 배 안에서도 ’돈이 많을수록 더 많이 살아남았다’는 사실이 숫자로도 뚜렷하게 드러나는 거지.\n\n(풀이)\n\ndf = pd.read_csv(\"titanic.csv\")\ndf = df[df['Fare'] != 0]\ndf.groupby('Pclass').agg({\"Fare\":[np.mean, np.max], \"Survived\":[np.mean]})\n\n/tmp/ipykernel_846463/575476726.py:3: FutureWarning: The provided callable &lt;function mean at 0x790ba80d4e00&gt; is currently using SeriesGroupBy.mean. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"mean\" instead.\n  df.groupby('Pclass').agg({\"Fare\":[np.mean, np.max], \"Survived\":[np.mean]})\n/tmp/ipykernel_846463/575476726.py:3: FutureWarning: The provided callable &lt;function max at 0x790ba80d4400&gt; is currently using SeriesGroupBy.max. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"max\" instead.\n  df.groupby('Pclass').agg({\"Fare\":[np.mean, np.max], \"Survived\":[np.mean]})\n\n\n\n\n\n\n\n\n\nFare\nSurvived\n\n\n\nmean\nmax\nmean\n\n\nPclass\n\n\n\n\n\n\n\n1\n86.148874\n512.3292\n0.644550\n\n\n2\n21.358661\n73.5000\n0.488764\n\n\n3\n13.787875\n69.5500\n0.242300\n\n\n\n\n\n\n\n\n다호, 소윤, 수호, 줄리가 맞음\n\n\ndf.query(\"Fare &gt; 21.358661 & Pclass ==3\")\n\n\n\n\n\n\n\n\nPassengerId\nSurvived\nPclass\nName\nSex\nAge\nSibSp\nParch\nTicket\nFare\nCabin\nEmbarked\n\n\n\n\n13\n14\n0\n3\nAndersson, Mr. Anders Johan\nmale\n39.0\n1\n5\n347082\n31.2750\nNaN\nS\n\n\n16\n17\n0\n3\nRice, Master. Eugene\nmale\n2.0\n4\n1\n382652\n29.1250\nNaN\nQ\n\n\n25\n26\n1\n3\nAsplund, Mrs. Carl Oscar (Selma Augusta Emilia...\nfemale\n38.0\n1\n5\n347077\n31.3875\nNaN\nS\n\n\n48\n49\n0\n3\nSamaan, Mr. Youssef\nmale\nNaN\n2\n0\n2662\n21.6792\nNaN\nC\n\n\n50\n51\n0\n3\nPanula, Master. Juha Niilo\nmale\n7.0\n4\n1\n3101295\n39.6875\nNaN\nS\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n846\n847\n0\n3\nSage, Mr. Douglas Bullen\nmale\nNaN\n8\n2\nCA. 2343\n69.5500\nNaN\nS\n\n\n850\n851\n0\n3\nAndersson, Master. Sigvard Harald Elias\nmale\n4.0\n4\n2\n347082\n31.2750\nNaN\nS\n\n\n863\n864\n0\n3\nSage, Miss. Dorothy Edith \"Dolly\"\nfemale\nNaN\n8\n2\nCA. 2343\n69.5500\nNaN\nS\n\n\n885\n886\n0\n3\nRice, Mrs. William (Margaret Norton)\nfemale\n39.0\n0\n5\n382652\n29.1250\nNaN\nQ\n\n\n888\n889\n0\n3\nJohnston, Miss. Catherine Helen \"Carrie\"\nfemale\nNaN\n1\n2\nW./C. 6607\n23.4500\nNaN\nS\n\n\n\n\n73 rows × 12 columns\n\n\n\n\n사라도 맞음\n\n\n모두 맞음"
  },
  {
    "objectID": "content/fin-python.html#fifa",
    "href": "content/fin-python.html#fifa",
    "title": "기말고사 - Python // 예상문제",
    "section": "2. FIFA",
    "text": "2. FIFA"
  },
  {
    "objectID": "content/06wk-2.html#잡기술-하지만-유용해",
    "href": "content/06wk-2.html#잡기술-하지만-유용해",
    "title": "06wk-2: [Python] – 잡기술, 집합, 연습문제 // 숙제",
    "section": "1. 잡기술 (하지만 유용해)",
    "text": "1. 잡기술 (하지만 유용해)\n\nA. 인덱싱고급 (스트라이딩)\n- 스트라이딩 [start:end:step]\n\nlst = list('abcdefghijk')\nlst\n\n['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k']\n\n\n\nlst[0:9]\n\n['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i']\n\n\n\nlst[0:9:3]\n\n['a', 'd', 'g']\n\n\n- 생략\n\n#lst[0:9]\n#lst[0:9:]\nlst[0:9:1]\n\n['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i']\n\n\n\nlst[1::3]\n\n['b', 'e', 'h', 'k']\n\n\n\nlst[:8:3]\n\n['a', 'd', 'g']\n\n\n# 예제1: 짝수/홀수 원소 추출\n아래와 같은 문자열이 있다고 하자.\n\nlst = list('abcdefghijk')\nlst\n\n['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k']\n\n\nindex = 0,2,4, ... 에 해당하는 원소를 출력하라.\n\nlst[::2]\n\n['a', 'c', 'e', 'g', 'i', 'k']\n\n\nindex = 1,4,7 ... 에 해당하는 원소를 출력하라.\n\nlst[1::3]\n\n['b', 'e', 'h', 'k']\n\n\n#\n# 예제2 – 세로로..\n\n(예제2를 위한 예비학습) 문자열에서 \\n을 출력하면 출력시 줄바꿈이 일어난다.\n\nprint('1행\\n2행\\n3행')\n\n1행\n2행\n3행\n\n\n예비학습 끝\n\n아래와 같은 문자열이 있다고 하자.\n\ntxt = '너같이사랑스럽고\\n또예쁘고도멋지고\\n속훤히보이는너알\\n았어그동안고마웠\\n지정말정말사랑해'\nprint(txt)\n\n너같이사랑스럽고\n또예쁘고도멋지고\n속훤히보이는너알\n았어그동안고마웠\n지정말정말사랑해\n\n\n위 문자열을 세로로 읽는 코드를 작성하라. (9칸씩 점프하면서 읽으면 된다)\n(풀이)\n\ntxt[::9]\n\n'너또속았지'\n\n\n#\n- step = -1 이면?\n\nlst\n\n['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k']\n\n\n\nlst[::-1]\n\n['k', 'j', 'i', 'h', 'g', 'f', 'e', 'd', 'c', 'b', 'a']\n\n\n- 스트라이딩으로 step = -1 옵션 주기 vs 리스트의 .reverse() 메소드 이용하기\n관찰1: reverse 메소드는 리스트 자체를 변화시킴\n\nlst = list('abcdefgh')\nlst\n\n['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']\n\n\n\nlst.reverse()  \nlst\n\n['h', 'g', 'f', 'e', 'd', 'c', 'b', 'a']\n\n\n관찰2: [::-1]는 리스트는 변화시키지 않음\n\nlst = list('abcdefgh')\nlst\n\n['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']\n\n\n\nlst[::-1]\n\n['h', 'g', 'f', 'e', 'd', 'c', 'b', 'a']\n\n\n\nlst\n\n['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']\n\n\n- -step 은 쓰기 까다롭다.\n(예제) 처음과 끝을 생략하지 않고 아래와 동일한 효과를 주는 코드를 만들어 보자.\n\nlst[::-1]\n\n['h', 'g', 'f', 'e', 'd', 'c', 'b', 'a']\n\n\n(풀이)\n결국 lst[?:?:-1]의 꼴에서 적당히 ?의 값을 채우면 된다.\n\n\n\nNone\na\nb\nc\nd\ne\nf\ng\nh\nNone\n\n\n\n\n?\n0\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n-9\n-8\n-7\n-6\n-5\n-4\n-3\n-2\n-1\n?\n\n\n\n\nlst[-1:-9:-1]\n\n['h', 'g', 'f', 'e', 'd', 'c', 'b', 'a']\n\n\n\n\nC. 컴프리헨션 고급 (if문이 포함된 컴프리헨션)\n- 예제: 제곱수중에서 12로 나누어 떨어지는 수만 원소로 가지는 리스트를 만들고 싶다.\n\n제곱수: 1,4,9,16,25,36, …\n12로 나누어 떨어지는 수: 36, …\n\n(예비학습1)\n\n12 % 4 # %는 나머지를 계산하는 연산자, 12를 4로 나누면 나머지가 0\n\n0\n\n\n\n12 % 5 # %는 나머지를 계산하는 연산자, 12를 5로 나누면 나머지가 2\n\n2\n\n\n(예비학습2)\n\na = 2 ## a에 2를 \"대입\" 하라. \n\n\na == 2 # a에 들어있는 값이 2인지 \"test\"하라.\n\nTrue\n\n\n\na == 3 # a에 들어있는 값이 3인지 \"test\"하라.\n\nFalse\n\n\n(예비학습3) if문\n\na = 4\nif a%2 == 0: \n    a_is='even' ## a%2==0 이 true일 경우만 실행된다. \nelif a%2 != 0:\n    a_is='odd' ## a%2==0 이 false일 경우만 실행된다. \nelse:\n    a_is=\"홀짝모두아님\"\n\n\na_is\n\n'even'\n\n\n(풀이1) - 비어있는 리스트를 만들고 \\(\\to\\) for문 + if문\n\nlst = [] \nfor i in range(1,101):\n    if i**2 % 12 ==0:\n        lst = lst + [i**2]\n\n\nlst\n\n[36,\n 144,\n 324,\n 576,\n 900,\n 1296,\n 1764,\n 2304,\n 2916,\n 3600,\n 4356,\n 5184,\n 6084,\n 7056,\n 8100,\n 9216]\n\n\n(풀이2) - if문이 포함된 리스트컴프리헨션\n\n[i**2 for i in range(1,101) if i**2 % 12 ==0]\n\n[36,\n 144,\n 324,\n 576,\n 900,\n 1296,\n 1764,\n 2304,\n 2916,\n 3600,\n 4356,\n 5184,\n 6084,\n 7056,\n 8100,\n 9216]\n\n\n\n\nD. 함수고급 (if문이 포함된 리턴)\n- 홀수/짝수를 판별하는 함수 만들기 1 – 기본형\n\ndef test(x): \n    if x % 2 == 0: \n        return 'even'\n    else:\n        return 'odd'\n\n\ntest(5)\n\n'odd'\n\n\n(사용)\n\n[test(l) for l in list(range(1,11))]\n\n['odd', 'even', 'odd', 'even', 'odd', 'even', 'odd', 'even', 'odd', 'even']\n\n\n- 홀수/짝수를 판별하는 함수 만들기 2 – 응용\n\ndef test(x): \n    return \"even\" if x%2 ==0 else \"odd\"\n\n(사용)\n\n[test(l) for l in list(range(1,11))]\n\n['odd', 'even', 'odd', 'even', 'odd', 'even', 'odd', 'even', 'odd', 'even']\n\n\n\n\nE. len함수\n- 0차원 자료형은 len함수가 동작하지 않음\n\na=1 \nlen(a)\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[172], line 2\n      1 a=1 \n----&gt; 2 len(a)\n\nTypeError: object of type 'int' has no len()\n\n\n\n\na=True\nlen(a)\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[173], line 2\n      1 a=True\n----&gt; 2 len(a)\n\nTypeError: object of type 'bool' has no len()\n\n\n\n\na=3.14\nlen(a)\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[174], line 2\n      1 a=3.14\n----&gt; 2 len(a)\n\nTypeError: object of type 'float' has no len()\n\n\n\n\nnote: 이것이 어떠한 수학적인 의미를 가지거나 0차원의 본질적진리를 뜻하는 것은 아님. R에서는 1,3.14,TRUE의 길이가 1로 존재함.\n\n- 1차원 자료형은 len함수가 동작\n\na='guebin'\nlen(a)\n\n6\n\n\n\na=[1,2,3,4,5,6]\nlen(a)\n\n6\n\n\n\na=1,2,3,4,5,6 \nlen(a)\n\n6\n\n\n\na=range(10)\nlen(a)\n\n10\n\n\n- 길이가 1인 1차원 자료형과 0차원 자료형은 다른것임\n\na='g'\nlen(a)\n\n1\n\n\n\na=[1]\nlen(a)\n\n1\n\n\n\na=(1,)\nlen(a)\n\n1\n\n\n\na=range(1)\nlen(a)\n\n1\n\n\n- 길이가 0인 1차원 자료형도 존재함\n\na=''\nlen(a)\n\n0\n\n\n\na=[]\nlen(a)\n\n0\n\n\n\na=()\nlen(a)\n\n0\n\n\n\na=range(0)\nlen(a)\n\n0"
  },
  {
    "objectID": "content/06wk-2.html#집합-기본내용",
    "href": "content/06wk-2.html#집합-기본내용",
    "title": "06wk-2: [Python] – 잡기술, 집합, 연습문제 // 숙제",
    "section": "2. 집합 기본내용",
    "text": "2. 집합 기본내용\n\nA. 선언\n\nwishlist={'notebook','desktop'}\nwishlist\n\n{'desktop', 'notebook'}\n\n\n\n\nB. 연산\n- in 연산자\n\nwishlist={'desktop', 'ipad', 'notebook'}\nwishlist\n\n{'desktop', 'ipad', 'notebook'}\n\n\n\n'notebook' in wishlist\n\nTrue\n\n\n- 합집합, 교집합, 차집합\n\nday1 = {'notebook','desktop'}\nday2 = {'notebook','ipad'}\n\n\nday1 | day2 # 합집합\n\n{'desktop', 'ipad', 'notebook'}\n\n\n\nday1 & day2 # 교집합\n\n{'notebook'}\n\n\n\nday1 - day2 # 차집합 \n\n{'desktop'}\n\n\n\nday2 - day1 # 차집합\n\n{'ipad'}\n\n\n- 부분집합\n\nday1 = {'notebook', 'desktop'}\nday2 = day1 | {'ipad'} \n\n\nday1 &lt; day2  # day1는 day2의 부분집합인가? \n\nTrue\n\n\n\nday2 &lt; day1\n\nFalse\n\n\n\n\nC. for문과 set\n\nday1 = {'notebook', 'desktop'}\nday2 = {'notebook', 'ipad'}\n\n\nfor i in day1|day2: \n    print(i)\n\ndesktop\nnotebook\nipad\n\n\n\n\nD. set 컴프리헨션\n- 예시1\n\nlst = [1,2,1,1,3,4,5]\n{l for l in lst}\n\n{1, 2, 3, 4, 5}\n\n\n\n\nE. 유니크한 원소\n- 예제1: 아래의 list는 모두 몇 종류의 문자로 이루어져 있는가?\n\nlst=list('asdfasssdfdsasdfasdfasdfasdf')\n\n(풀이)\n\nset(lst)\n\n{'a', 'd', 'f', 's'}\n\n\n\nlen(set(lst))\n\n4\n\n\n- 예제2: 아래의 txt에서 어떠한 종류의 문자가 각각 몇번씩 사용되었는지 빈도를 구하는 코드를 작성하라.\n\ntxt = 'asdkflkjahsdlkjfhlaksglkjdhflkgjhlskdfjhglkajhsdlkfjhalsdkf'\ntxt\n\n'asdkflkjahsdlkjfhlaksglkjdhflkgjhlskdfjhglkajhsdlkfjhalsdkf'\n\n\n(풀이)\n\n[(s,list(txt).count(s)) for s in set(txt)]\n\n[('f', 6),\n ('d', 6),\n ('g', 3),\n ('h', 7),\n ('j', 7),\n ('k', 10),\n ('l', 9),\n ('s', 6),\n ('a', 5)]"
  },
  {
    "objectID": "content/06wk-2.html#연습문제",
    "href": "content/06wk-2.html#연습문제",
    "title": "06wk-2: [Python] – 잡기술, 집합, 연습문제 // 숙제",
    "section": "3. 연습문제",
    "text": "3. 연습문제\n# 우영우\n앞으로 읽어도 뒤로 읽어도 동일한 단어이면 true 그렇지 않으면 false를 리턴하는 함수 solution를 구현하라. 아래는 이러한 함수 solution를 사용한 예시이다.\n\nlst1 = ['기러기', '토마토', '스위스', '인도인', '별똥별', '우영우', '파이썬']\nlst2 = ['level', 'radar', 'noon', 'deified', 'rotor', 'python']\n\n\n[solution(l) for l in lst1]\n\n[True, True, True, True, True, True, False]\n\n\n\n[solution(l) for l in lst2]\n\n[True, True, True, True, True, False]\n\n\n(풀이)\n\ndef solution(x):\n    return x == x[::-1] \n\n\n[solution(l) for l in lst1]\n\n[True, True, True, True, True, True, False]\n\n\n\n[solution(l) for l in lst2]\n\n[True, True, True, True, True, False]\n\n\n# 피보나치수열 – (1)-(4)\n(1) for 문을 사용하여 아래와 같은 수열을 정의하라. (\\(a_1,\\dots,a_{100}\\) 까지 선언할 것)\n\n\\(a_1=a_2=1\\)\n\\(a_{n} = a_{n-1} + a_{n-2}\\) where \\(n\\geq 3\\)\n\n## 정답은 아래와 같음\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987,\n 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393,\n 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887,\n 9227465, 14930352, 24157817, 39088169, 63245986, 102334155,\n 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903,\n 2971215073, 4807526976, 7778742049, 12586269025, 20365011074,\n 32951280099, 53316291173, 86267571272, 139583862445, 225851433717,\n 365435296162, 591286729879, 956722026041, 1548008755920,\n 2504730781961, 4052739537881, 6557470319842, 10610209857723,\n 17167680177565, 27777890035288, 44945570212853, 72723460248141,\n 117669030460994, 190392490709135, 308061521170129, 498454011879264,\n 806515533049393, 1304969544928657, 2111485077978050,\n 3416454622906707, 5527939700884757, 8944394323791464,\n 14472334024676221, 23416728348467685, 37889062373143906,\n 61305790721611591, 99194853094755497, 160500643816367088,\n 259695496911122585, 420196140727489673, 679891637638612258,\n 1100087778366101931, 1779979416004714189, 2880067194370816120,\n 4660046610375530309, 7540113804746346429, 12200160415121876738,\n 19740274219868223167, 31940434634990099905, 51680708854858323072,\n 83621143489848422977, 135301852344706746049, 218922995834555169026,\n 354224848179261915075]\n(풀이)\n\nlst = [1,1] \nfor i in range(98):\n    lst.append(sum(lst[-2:]))\n\n(2) (1)의 결과로 나온 숫자들의 자리수를 카운트하는 파이썬코드를 리스트 컴프리헨션을 이용하여 구현하라.\n## 답은 아래와 같다. \n[ 1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,\n  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6,  7,  7,  7,  7,\n  7,  8,  8,  8,  8,  9,  9,  9,  9,  9, 10, 10, 10, 10, 10, 11, 11,\n  11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 14,\n  15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 18, 18,\n  18, 18, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 21, 21, 21 ]\nhint 아래의 코드를 이용할 것\n\nlen(str(2584)), len(str(354224848179261915075))\n\n(풀이)\n\ncnt = [len(str(i)) for i in lst] \n#cnt \n\n(3) (1)의 결과로 나온 값의 유일한 숫자의 수를 카운트하는 파이썬코드를 리스트 컴프리헨션을 이용하여 구현하라. (여기에서 17711 은 유일한 숫자가 “1,7” 2개이며, 10946은 유일한 숫자가 “1,0,9,4,6” 5개 이다.\nhint 아래의 코드를 활용할 것\n\nlen(set(str(9227465)))\n\n6\n\n\n## 답은 아래와 같다. \n[ 1,  1,  1,  1,  1,  1,  2,  2,  2,  1,  2,  2,  2,  2,  3,  3,  4,\n  4,  3,  3,  5,  2,  5,  4,  4,  4,  5,  4,  5,  5,  6,  7,  6,  5,\n  6,  7,  6,  6,  7,  6,  6,  6,  4,  6,  6,  6,  7,  8,  6,  7,  8,\n  7,  7,  6,  8,  7,  7,  7,  8,  8, 10,  9, 10,  9,  6,  7,  9,  8,\n  7,  8,  9,  9,  8, 10,  8,  9,  8,  8,  7,  8,  9,  8,  8,  8,  7,\n  9,  8,  7,  7,  9,  8, 10,  9,  9,  7,  9,  8, 10,  9, 10 ]\n(풀이)\n\ncnt = [len(set(str(l))) for l in lst]\n#cnt \n\n(4) (1)의 결과로 나온 숫자들 중 짝수에 해당하는 숫자가 몇개인지 카운트하는 코드를 작성하라. 코드 작성시 if가 포함된 리스트컴프리헨션을 이용하라.\n(풀이)\n\nlen([l for l in lst if l%2  == 0])\n\n33"
  },
  {
    "objectID": "content/06wk-2.html#숙제",
    "href": "content/06wk-2.html#숙제",
    "title": "06wk-2: [Python] – 잡기술, 집합, 연습문제 // 숙제",
    "section": "4. 숙제",
    "text": "4. 숙제\n\\([1^2,2^2,\\dots,100^2]\\) 중에서 32으로 나누어 떨어지는 수를 모두 구하여라.\n\n# hint: 답은 아래와 같이 나옴\n[64, 256, 576, 1024, 1600, 2304, 3136, 4096, 5184, 6400, 7744, 9216]\n\n[64, 256, 576, 1024, 1600, 2304, 3136, 4096, 5184, 6400, 7744, 9216]\n\n\n\n[i**2 for i in range(1,101) if (i**2 % 32 ) ==0 ]\n\n[64, 256, 576, 1024, 1600, 2304, 3136, 4096, 5184, 6400, 7744, 9216]"
  },
  {
    "objectID": "content/05wk-2.html#str-고급",
    "href": "content/05wk-2.html#str-고급",
    "title": "05wk-2: [Python] – str, list // 숙제",
    "section": "1. str – 고급",
    "text": "1. str – 고급\n\nA. fstring\n- 예제1\n\na=1\nb=2\nprint(f'a+b = {a+b}')\n\na+b = 3\n\n\n- 예제2\n\na=2\nb=3.141592\nprint(f'a*b = {a*b:.4f}')\n\na*b = 6.2832\n\n\n- 예제3\n\na=3.141592\nprint(f'2a = {2*a:.2f}\\t3a = {3*a:.2f}')\n\n2a = 6.28   3a = 9.42\n\n\n\n\nB. string과 for문\n- 예제1\n\nfor s in 'jbnu':\n    print(2*s)\n\njj\nbb\nnn\nuu\n\n\n- 예제2\n\nfor s in 'jbnu':\n    print(s.upper())\n\nJ\nB\nN\nU\n\n\n\n\nC. in 연산자\n\ns = 'jbnu'\n\n\n'b' in s\n\nTrue\n\n\n\n'c' in s\n\nFalse\n\n\n\n'jb' in s\n\nTrue\n\n\n\n'jn' in s\n\nFalse\n\n\n\n\nD. split과 join\n- 예제1\n\n'2021.08.14'.split('.')\n\n['2021', '08', '14']\n\n\n- 예제2\n\n'asdf'*2\n\n'asdfasdf'\n\n\n\n('asdf'*2).split('f')\n\n['asd', 'asd', '']\n\n\n- 예제3\n\n'-'.join('asdf')\n\n'a-s-d-f'\n\n\n- 예제4\n\n'-'.join(['a','s','d','f'])\n\n'a-s-d-f'"
  },
  {
    "objectID": "content/05wk-2.html#list",
    "href": "content/05wk-2.html#list",
    "title": "05wk-2: [Python] – str, list // 숙제",
    "section": "2. list",
    "text": "2. list\n\nA. 선언\n- 리스트의 선언\n\na = [1,2,3,4]\na\n\n[1, 2, 3, 4]\n\n\n- 비어있는 리스트의 선언\n\na= []\na\n\n[]\n\n\n\na= list()\na\n\n[]\n\n\n\n\nB. 연산\n- 더하기연산\n\n[1,2,3] + [-3,4,5]\n\n[1, 2, 3, -3, 4, 5]\n\n\n\n우리의 예상과 다른 결과가 나옴 \\(\\to\\) 파이썬은 R처럼 자체적으로 좋은 계산기능을 내장하고 있지 않음.\n\n- 브로드캐스팅과 같이 R에서는 당연히 가능했던 기능을 사용할 수 없음.\n\n[1,2,3,4,5] + 1\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[284], line 1\n----&gt; 1 [1,2,3,4,5] + 1\n\nTypeError: can only concatenate list (not \"int\") to list\n\n\n\n- 뺄셈은 정의되지 않음\n\na= [1,2,1,2]\na-[1,2]\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[291], line 2\n      1 a= [1,2,1,2]\n----&gt; 2 a-[1,2]\n\nTypeError: unsupported operand type(s) for -: 'list' and 'list'\n\n\n\n- 곱하기는 정의가능\n\n[1,2]*3\n\n[1, 2, 1, 2, 1, 2]\n\n\n- 나눗셈은 정의되지 않음\n\n[1,2,1,2,1,2] /3\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[294], line 1\n----&gt; 1 [1,2,1,2,1,2] /3\n\nTypeError: unsupported operand type(s) for /: 'list' and 'int'\n\n\n\n- 더하기와 곱하기는 원소의 추가와 반복추가를 의미하지만 그렇다고 해서 뺄셈과 나눗셈이 원소의 삭제를 의미하는것은 아님\n- 더하기와 곱하기가 원소의 추가와 반복추가를 의미하여 편리할때도 있긴하지만, 우리는 산술적인 +, * 를 원하는 경우도 있다. 이럴 경우는 어떻게 할 수 있을까?\n(예제)\n\na=[1,2]\nb=[3,4]\n\na+b = [4,6] 이 되도록 하려면?\n(풀이1)\n\n[a[0]+b[0], a[1]+b[1]]\n\n[4, 6]\n\n\n풀이가 가능한 이유? a,b는 리스트이지만 a[0], a[1], b[0], b[1] 은 각각 인트형임. 인트형은 + 연산이 가능했음.\n(풀이2)\n\nimport numpy \n\n\na=[1,2]\nb=[3,4]\n\n\naa = numpy.array(a)\nbb = numpy.array(b)\n\n\na\n\n[1, 2]\n\n\n\naa+bb\n\narray([4, 6])\n\n\n여러가지 연산 가능 (마치 R처럼 쓸 수 있음)\n\n2*aa\n\narray([2, 4])\n\n\n\n2*aa+1\n\narray([3, 5])\n\n\n\n2*aa+1+bb\n\narray([6, 9])\n\n\n(풀이3)\n\nimport numpy as np ## 설치가 되어있는 numpy라는 패키지를 쓰겠음. 그런데 numpy말고 np라는 이름으로 쓰겠음\n\n\nnp.array(a)\n\narray([1, 2])\n\n\n\nnp.array(a)+np.array(b)\n\narray([4, 6])\n\n\n\n\nC. 인덱싱\n- str형과 동일한 방식\n\na=[11,22,33,44,55]\n\n\na[-2:] # 끝의 2개의 원소를 뽑음 \n\n[44, 55]\n\n\n\n\nD. 콘테이너형 객체로서의 리스트\n- 리스트의 원소는 int, float 따위만 가능한 것이 아니다. (리스트는 컨테이너형 객체이므로)\n\nx = [True, False, True, 2]\nx\n\n[True, False, True, 2]\n\n\n\nlst = [1,3.14,True,'a',[1,2], \n       (1,2),{'name':'iu','age':27},{1,2,3}]\nlst\n\n[1, 3.14, True, 'a', [1, 2], (1, 2), {'name': 'iu', 'age': 27}, {1, 2, 3}]\n\n\n- str은 컨테이너형이 아니다.\n\n'asdf'\n\n'asdf'\n\n\n\nstr의 모든 원소는 문자임\n\n\n\nE. 가변객체\n- 리스트는 원소를 수정할 수 있다. (리스트는 가변객체이므로)\n\na = [11,22,33]\na\n\n[11, 22, 33]\n\n\n\na[0] = -77\n\n\na\n\n[-77, 22, 33]\n\n\n- 원소수정은 당연한 기능같은데 이것이 불가능한 경우도 있다.\n(가능한경우)\n\na=['g','u','e','b','i','n']\na\n\n['g', 'u', 'e', 'b', 'i', 'n']\n\n\n\na[0] = 'G'\n\n\na\n\n['G', 'u', 'e', 'b', 'i', 'n']\n\n\n(불가능한경우)\n\na='guebin'\na\n\n'guebin'\n\n\n\na[0]\n\n'g'\n\n\n\na[0]='G'\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[384], line 1\n----&gt; 1 a[0]='G'\n\nTypeError: 'str' object does not support item assignment\n\n\n\n만약에 억지로 바꾸고 싶다면?\n\nl = list(a)\nl[0] = 'G'\n''.join(l)\n\n'Guebin'\n\n\n\n\nF. 리스트의 원소 삭제\n(예제1) del을 이용한 원소삭제\n아래와 같이 문자로 된 리스트를 선언하자.\n\na = ['g','u','e','b','i','n']\na\n\n['g', 'u', 'e', 'b', 'i', 'n']\n\n\n사실 더 쉽게 선언할 수 있음\n\nlist('guebin')\n\n['g', 'u', 'e', 'b', 'i', 'n']\n\n\n첫번째 원소를 삭제하고 싶다면?\n\ndel a[0]\n\n\na\n\n['u', 'e', 'b', 'i', 'n']\n\n\n이 상태에서 다시 첫번째 원소를 삭제한다면?\n\ndel a[0]\n\n\na\n\n['e', 'b', 'i', 'n']\n\n\n(예제2) pop을 이용한 원소삭제\n\na=list('guebin')\na\n\n['g', 'u', 'e', 'b', 'i', 'n']\n\n\n\na.pop(0)\n\n'g'\n\n\n\na\n\n['u', 'e', 'b', 'i', 'n']\n\n\n\na.pop(0)\n\n'u'\n\n\n\na\n\n['e', 'b', 'i', 'n']\n\n\n(예제3) remove를 이용한 원소삭제\n\na=list('guebin')\na\n\n['g', 'u', 'e', 'b', 'i', 'n']\n\n\n\na.remove('b')\na\n\n['g', 'u', 'e', 'i', 'n']\n\n\n\n\nG. 리스트 원소 추가\n(예제) 비어있는 리스트를 만들고 원소 0,1,2를 차례로 추가하여 보자.\n(풀이1) + 연산이용\n\na=[]\na\n\n[]\n\n\n\na= a+[0]\na\n\n[0]\n\n\n\na= a+[1] # a = [0]+[1]\na\n\n[0, 1]\n\n\n\na= a+[2] # a = [0,1] + [2]\na\n\n[0, 1, 2]\n\n\n(풀이2) += 이용\n\na = []\na += [0]\na += [1] \na += [2] \na\n\n[0, 1, 2]\n\n\n\n반복되는 문자를 제거하고 연산의 순서를 바꾼다.\n\n(풀이3) 리스트 특수기능 .append()를 이용\n\na=[] \n\n\na.append(0)\na.append(1)\na.append(2)\na\n\n[0, 1, 2, 0, 1, 2]\n\n\n\n\nH. a+[4]와 a.append(4)의 차이점은?\n(관찰1)\n\na=[1,2,3]\na+[4] ## 리스트 a와 리스트 [4]의 연산결과를 알려줘 \n\n[1, 2, 3, 4]\n\n\n\na ## a는 그대로임. 변화없음 \n\n[1, 2, 3]\n\n\n(관찰2)\n\na=[1,2,3]\na.append(4)\n\n\na ## a자체가 변화함 \n\n[1, 2, 3, 4]\n\n\n비슷해보이지만 굉장히 미묘한 차이가 있음\na.append(4): a에 4를 append하라 \\(\\to\\) a가 변함\na+[4]: a와 [4]를 연산하라\n\n\nI. 리스트 특수기능\n(append)\n\na=[1,2,3,4]\na.append?\n\n\nSignature: a.append(object, /)\nDocstring: Append object to the end of the list.\nType:      builtin_function_or_method\n\n\n\n\na.append(5)\na\n\n[1, 2, 3, 4, 5]\n\n\n(clear)\n\na=[1,2,3,4]\na.clear?\n\n\nSignature: a.clear()\nDocstring: Remove all items from list.\nType:      builtin_function_or_method\n\n\n\n\na.clear()\na\n\n[]\n\n\n(copy)\n\na=[1,2,3,4]\na.copy?\n\n\nSignature: a.copy()\nDocstring: Return a shallow copy of the list.\nType:      builtin_function_or_method\n\n\n\n\nb=a.copy()\nb\n\n[1, 2, 3, 4]\n\n\n(count)\n\na=['a','a','b','b','b','c']\na.count?\n\n\nSignature: a.count(value, /)\nDocstring: Return number of occurrences of value.\nType:      builtin_function_or_method\n\n\n\n\na.count('a')\n\n2\n\n\n\na.count('b')\n\n3\n\n\n\na.count('c')\n\n1\n\n\n(extend)\n\na=[1,2,3,4]\nb=[-1,-2,-3,-4]\n\n\na.extend(b)\na\n\n[1, 2, 3, 4, -1, -2, -3, -4]\n\n\n\na=[1,2,3,4]\nb=[-1,-2,-3,-4]\n\n\na.append(b)\n\n\na\n\n[1, 2, 3, 4, [-1, -2, -3, -4]]\n\n\n(index)\n\na=[11,22,'a',True, 22,'a']\na.index?\n\n\nSignature: a.index(value, start=0, stop=9223372036854775807, /)\nDocstring:\nReturn first index of value.\nRaises ValueError if the value is not present.\nType:      builtin_function_or_method\n\n\n\n\na.index(11)\n\n0\n\n\n\na.index(22)\n\n1\n\n\n\na.index('a')\n\n2\n\n\n\na.index(True)\n\n3\n\n\n(insert)\n\na=[11,22,33]\na.insert?\n\n\nSignature: a.insert(index, object, /)\nDocstring: Insert object before index.\nType:      builtin_function_or_method\n\n\n\n\na.insert(2,88) \na\n\n[11, 22, 88, 88, 33]\n\n\n(pop)\n\na=['a',1,2,'d']\na.pop?\n\n\nSignature: a.pop(index=-1, /)\nDocstring:\nRemove and return item at index (default last).\nRaises IndexError if list is empty or index is out of range.\nType:      builtin_function_or_method\n\n\n\n\na.pop() # index=-1 이므로 마지막원소가 나타남\n\n'd'\n\n\n\na # a는 마지막 원소가 사라진 상태\n\n['a', 1, 2]\n\n\n\na.pop(0) # index=0 이므로 첫번쨰 원소가 나타남\n\n'a'\n\n\n\na # a에는 첫번째 원소가 사라진 상태\n\n[1, 2]\n\n\n(remove)\n\na=['a',2,3,'d']\na.remove?\n\n\nSignature: a.remove(value, /)\nDocstring:\nRemove first occurrence of value.\nRaises ValueError if the value is not present.\nType:      builtin_function_or_method\n\n\n\n\na.remove('d')\n\n\na\n\n['a', 2, 3]\n\n\n\na.remove('a')\n\n\na\n\n[2, 3]\n\n\n(reverse)\n\na=[1,2,3,4]\na.reverse?\n\n\nSignature: a.reverse()\nDocstring: Reverse *IN PLACE*.\nType:      builtin_function_or_method\n\n\n\n\na.reverse()\na\n\n[4, 3, 2, 1]\n\n\n(sort)\n\na=[1,3,2,4]\na.sort?\n\n\nSignature: a.sort(*, key=None, reverse=False)\nDocstring:\nSort the list in ascending order and return None.\nThe sort is in-place (i.e. the list itself is modified) and stable (i.e. the\norder of two equal elements is maintained).\nIf a key function is given, apply it once to each list item and sort them,\nascending or descending, according to their function values.\nThe reverse flag can be set to sort in descending order.\nType:      builtin_function_or_method\n\n\n\n\na.sort()\na\n\n[1, 2, 3, 4]\n\n\n\na.sort(reverse=True)\na\n\n[4, 3, 2, 1]\n\n\n(다른예제들)\n\na=list('guebin')\na\n\n['g', 'u', 'e', 'b', 'i', 'n']\n\n\n\na.sort()\na\n\n['b', 'e', 'g', 'i', 'n', 'u']\n\n\n\na.sort(reverse=True)\na\n\n['u', 'n', 'i', 'g', 'e', 'b']\n\n\n\n\nJ. 중첩리스트\n- 리스트는 리스트를 원소로 받을 수 있으므로 아래와 같이 중첩된 리스트를 만들 수 있다.\n\nA = [[1,2,3],\n     [4,5,6],\n     [7,8,9]]\nA\n\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n\n\n- A는 1차원인 벡터가 아니라 2차원인 매트릭스로 이해할 수 있다. 구체적으로는 아래와 같은 매트릭스로 이해할 수 있다\n\\[\\bf{A}=\\begin{bmatrix}\n1 & 2 & 3 \\\\\n4 & 5 & 6 \\\\\n7 & 8 & 9\n\\end{bmatrix}\\]\n- A에서 (2,1)의 원소를 뽑고싶다 = 4를 뽑고싶다\n\nA[1,0] # R에서는 이게 가능했죠\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[532], line 1\n----&gt; 1 A[1,0] # R에서는 이게 가능했죠\n\nTypeError: list indices must be integers or slices, not tuple\n\n\n\n\n실패\n\n\nA[1][0]\n\n4\n\n\n\n성공\n\n- 성공의 이유를 분석해보자.\n\nA\n\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n\n\n\nA[1]\n\n[4, 5, 6]\n\n\n\nA[1][0]\n\n4\n\n\n- 매트릭스는 아니지만 매트릭스 같음!\n\n1차원 배열을 다차원 배열로 확장할 수 있는 기본 아이디어를 제공함\n\n\n\nK. 리스트 컴프리헨션\n- 개념: 집합에서 \\(\\{10,20,30,40\\}=\\{10i: i=1,2,3,4\\}=\\big\\{10i: \\text{ for } i \\in \\{1,2,3,4\\}\\big\\}\\) 임을 떠올리자.\n\n[10,20,30,40]\n\n[10, 20, 30, 40]\n\n\n\n[10*i for i in [1,2,3,4]]\n\n[10, 20, 30, 40]\n\n\n- 예제1: 리스트 컴프리헨션을 이용하여 아래와 같은 리스트를 만들어라.\n\n['SSSS','PPPP','AAAA','MMMM']\n\n['SSSS', 'PPPP', 'AAAA', 'MMMM']\n\n\n(풀이)\n\n[s*4 for s in 'SPAM']\n\n['SSSS', 'PPPP', 'AAAA', 'MMMM']\n\n\n- 예제2: 리스트컴프리헨션을 이용하여 아래와 같은 리스트를 만들어라.\n\n['X1','X2','X3','Y1','Y2','Y3']\n\n['X1', 'X2', 'X3', 'Y1', 'Y2', 'Y3']\n\n\n(풀이)\n\n[i+j for i in 'XY' for j in '123']\n\n['X1', 'X2', 'X3', 'Y1', 'Y2', 'Y3']\n\n\n- 예제: 리스트컴프리헨션을 이용하여 아래와 같은 리스트를 만들어라.\n\n['stat1', 'stat2', 'stat3', 'math1', 'math2', 'math3']\n\n['stat1', 'stat2', 'stat3', 'math1', 'math2', 'math3']\n\n\n(풀이)\n\n[i+j for i in ['stat','math'] for j in '123']\n\n['stat1', 'stat2', 'stat3', 'math1', 'math2', 'math3']\n\n\n(다른풀이) 비어있는 리스트를 만들고 for문을 쓰면 좀 복잡해진다.\n\nlst = [] \nfor x in ['stat','math']: \n    for y in '123': \n        lst.append(x+y)\nlst\n\n['stat1', 'stat2', 'stat3', 'math1', 'math2', 'math3']\n\n\n- 예제: 리스트컴프리헨션과 문자열 'jbnu'를 이용하여 아래와 같은 리스트를 만들어라.\n\n['j','b','n','u']\n\n['j', 'b', 'n', 'u']\n\n\n(풀이)\n\n[s for s in 'jbnu']\n\n['j', 'b', 'n', 'u']\n\n\n(다른풀이) 아래와 같이 풀면 된다는것은 알고 있음\n\nlist('jbnu')\n\n['j', 'b', 'n', 'u']\n\n\n- 예제: 리스트컴프리헨션을 이용하여 아래와 같은 리스트를 만들어라.\n\n['X1', 'X2', 'X3', 'X4', 'X5', 'X6', 'X7', 'X8', 'X9', 'X10', 'X11', 'X12']\n\n['X1', 'X2', 'X3', 'X4', 'X5', 'X6', 'X7', 'X8', 'X9', 'X10', 'X11', 'X12']\n\n\n(풀이)\n\n['X'+str(i) for i in range(1,13)]\n\n['X1', 'X2', 'X3', 'X4', 'X5', 'X6', 'X7', 'X8', 'X9', 'X10', 'X11', 'X12']\n\n\n\n\nL. 리스트 컴프리헨션과 for문의 미묘한 차이\n(경우1)\n\nx=777 \nlst = [] \nfor x in 'jbnu': \n    lst = lst + [x]\nlst    \n\n['j', 'b', 'n', 'u']\n\n\n\nx\n\n'u'\n\n\n(경우2)\n\nx=777\nlst = [x for x in 'jbnu'] \nlst \n\n['j', 'b', 'n', 'u']\n\n\n\nx\n\n777\n\n\n\n진짜 미묘하게 다르죠?\n\n\n\nM. 연습문제들\n# 문제. 길이가 0인 리스트를 만들어라. (비어있는 리스트를 만들어라)\n(풀이)\n\na = []\n\n\nlen(a)\n\n0\n\n\n# 문제. 다음의 실행값 중 가장 큰 숫자가 나오는 보기를 골라라. (에러가 나는 코드는 정답에서 제외함)\n(a) len(3.14) \n(b) len([3.14]) \n(c) len('3.14') \n(풀이)\n\nlen('3.14') # c가 제일큼\n\n4\n\n\n# 문제. 리스트자료형의 +와 * 연산을 이용하여 아래와 같은 list를 생성하라.\n\n[1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5]\n\n[1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5]\n\n\nhint: 아래의 코드를 관찰해보세요\n\n[1]*1+[2]*2 \n\n[1, 2, 2]\n\n\n(풀이)\n\nlst =[]\nfor i in range(1,6):\n    lst.extend([i]*i)\nlst\n\n[1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5]\n\n\n# 문제. 다음과 같은 리스트를 고려하자.\n\nlst = ['A','B','C','D','A','A','B','A','F','C','C','C','A']\n\n이 리스트에서 ‘A’ 혹은 ’B’의 숫자는 모두 몇개인가?\n(풀이)\n\nlst.count(\"A\")\n\n5\n\n\n\nlst.count(\"B\")\n\n2\n\n\n# 문제. 아래와 같은 문자열이 있다고 하자.\n\ntest_arr = 'ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAklOUpkDHrfHY17SbrmTIpNLTGK9Tjom/BWDSUGPl+nafzlHDTYW7hdI4yZ5ew18JH4JW9jbhUFrviQzM7xlELEVf4h9lFX5QVkbPppSwg0cda3Pbv7kOdJ/MTyBlWXFCR+HAo3FXRitBqxiX1nKhXpHAZsMciLq8V6RjsNAQwdsdMFvSlVK/7XAt3FaoJoAsncM1Q9x5+3V0Ww68/eIFmb1zuUFljQJKprrX88XypNDvjYNby6vw/Pb0rwert/EnmZ+AW4OZPnTPI89ZPmVMLuayrD2cE86Z/il8b+gw3r3+1nKatmIkjn2so1d01QraTlMqVSsbxNrRFi9wrf+M7Q== schacon@mylaptop.local'\n\n이 문자열에서 대문자의 수를 count하라.\nhint: str 자료형의 특수기능 .isupper() 를 이용할 것\n(풀이)\n\nsum([s.isupper() for s in test_arr])\n\n155\n\n\n# 문제. 리스트컴프리헨션을 이용하여 아래와 같은 리스트를 생성하라.\n['a',\n 'aa',\n 'aaa',\n 'aaaa',\n 'aaaaa',\n 'aaaaaa',\n 'aaaaaaa',\n 'aaaaaaaa',\n 'aaaaaaaaa',\n 'aaaaaaaaaa'] &lt;- a가 10개있음\n(풀이)\n\nlst = ['a'*i for i in range(1,11)]\nlst\n\n['a',\n 'aa',\n 'aaa',\n 'aaaa',\n 'aaaaa',\n 'aaaaaa',\n 'aaaaaaa',\n 'aaaaaaaa',\n 'aaaaaaaaa',\n 'aaaaaaaaaa']\n\n\n# 문제. 아래와 같은 리스트를 관찰하라.\n\nlst = ['2022/09/21','2022/10/30','2022/12/25','2023/01/01','2023/01/31','2023/03/20']\nlst\n\n['2022/09/21',\n '2022/10/30',\n '2022/12/25',\n '2023/01/01',\n '2023/01/31',\n '2023/03/20']\n\n\n이러한 리스트를 아래와 같은 리스트로 변환하는 코드를 작성하라.\n\n['2022-09-21', '2022-10-30', '2022-12-25', '2023-01-01', '2023-01-31', '2023-03-20']\n\n['2022-09-21',\n '2022-10-30',\n '2022-12-25',\n '2023-01-01',\n '2023-01-31',\n '2023-03-20']\n\n\nhint: string의 .replace()기능과 리스트 컴프리헨션의 응용\n(풀이)\n\n[l.replace('/','-') for l in lst]\n\n['2022-09-21',\n '2022-10-30',\n '2022-12-25',\n '2023-01-01',\n '2023-01-31',\n '2023-03-20']\n\n\n# 문제. 아래와 같이 하나의 특수문자로 이루어진 리스트를 고려하자.\n\nblock = ['■'] \n\n이를 이용하여 아래와 같은 결과를 출력하라.\n\n'■-■-■-■-■-■-■-■-■-■' # 여기에서 '■'는 모두 10개 있음\n\n'■-■-■-■-■-■-■-■-■-■'\n\n\n(풀이1)\n\n'-'.join(block*10)\n\n'■-■-■-■-■-■-■-■-■-■'\n\n\n(풀이2)\n\n((block[0]+'-')*10)[:-1]\n\n'■-■-■-■-■-■-■-■-■-■'"
  },
  {
    "objectID": "content/05wk-2.html#hw",
    "href": "content/05wk-2.html#hw",
    "title": "05wk-2: [Python] – str, list // 숙제",
    "section": "3. HW",
    "text": "3. HW\n1. 아래를 출력하는 코드를 작성하라.\n11x1=11\n11x2=22\n11x3=33\n...\n19x17=323\n19x18=342\n19x19=361\n(풀이)\n\n# for j in range(11,20):\n#     for i in range(1,20):\n#         print(f\"{j}x{i}={j*i}\")\n\n2. 아래와 같은 리스트를 관찰하라.\n\nlst = ['2022/09/21','2022/10/30','2022/12/25','2023/01/01','2023/01/31','2023/03/20']\nlst\n\n['2022/09/21',\n '2022/10/30',\n '2022/12/25',\n '2023/01/01',\n '2023/01/31',\n '2023/03/20']\n\n\n이러한 리스트를 아래와 같은 리스트로 변환하는 코드를 작성하라.\n\n['22-09-21.','22-10-30.','22-12-25.','23-01-01.','23-01-31.','23-03-20.']\n\n['22-09-21.', '22-10-30.', '22-12-25.', '23-01-01.', '23-01-31.', '23-03-20.']\n\n\n(풀이)\n\n[l[2:].replace(\"/\",\"-\")+\".\" for l in lst]\n\n['22-09-21.', '22-10-30.', '22-12-25.', '23-01-01.', '23-01-31.', '23-03-20.']"
  },
  {
    "objectID": "content/02wk-2.html#문제풀이",
    "href": "content/02wk-2.html#문제풀이",
    "title": "02wk-2: [R] – 문제풀이 (벡터인덱싱, if, for 연습) // 숙제",
    "section": "1. 문제풀이",
    "text": "1. 문제풀이\n# 예제 – 아래의 벡터를 고려하자.\n\nset.seed(43052)\nx = rnorm(100)\n\n(1) x의 원소중 그 값이 양수인 것은 모두 몇개인가?\n\nsum(x&gt;0)\n\n[1] 59\n\n\n(2) x의 평균을 구하여라.\n\nmean(x)\n\n[1] 0.1044026\n\n\n(3) x의 원소중 평균과 가장 가까운 값을 구하여라.\n(풀이1)\n\ndist = abs(x - mean(x)) \n# dist는 x와 x의 평균간의 차이를 나타내는 벡터\n\n\ntf_array &lt;- (dist == min(dist))\n# tf_array 는 길이가 100이고 true, false로만 구성된 array \n# 그런데 이 tf_array는 하나의 true값만 있고, 그 true값은 dist가 가장 작은 지점에서 true를 가짐\n\n\nx[tf_array]\n\n[1] 0.102093\n\n\n(풀이2)\n\nidx = which.min(dist)\n# idx 는 dist의 최소값이 존재하는 위치(index)가 저장되어 있음\n\n\nx[idx]\n\n[1] 0.102093\n\n\n새로운 문제 – dist에서 which.min을 쓰지 않고 위에서 구한 idx를 얻는 방법?\n\nwhich.min(dist)\n\n[1] 47\n\n\n\n(1:100)[dist==min(dist)]\n\n[1] 47\n\n\n#\n# 예제 – 아래의 벡터를 고려하자.\n\nset.seed(43052)\nx = sample(1:100,50)\nx\n\n [1]  8 55 56 41 88 39 59 65 51 87 49 14 98 78  4 11 64  9 16 33 60 22 53 76 45\n[26] 63 13 95 80 81 21 38 12 28  3 73 93 97 96 90  7 84 10 32 18 79 57 89 68 31\n\n\n(1) x의 원소중 짝수는 몇개 있는가?\n\n50 - sum(x %% 2)\n\n[1] 23\n\n\n\nsum((x %% 2) == 0)\n\n[1] 23\n\n\n(2) x의 원소중 가장 작은 홀수는 무엇인가?\n\nmin(x[(x %% 2) == 1])\n\n[1] 3\n\n\n#\n2010(나)6월평가원-4. 실수 \\(a\\) 가\n\\[\n\\frac{2^a + 2^{-a}}{2^a - 2^{-a}} = -2\n\\] 를 만족시킬 때, \\(4^a + 4^{-a}\\) 의 값은?\n\n$ $\n\n$ $\n\n$ $\n\n$ $\n\n$ $\n\n(풀이)\n\na = seq(from=-2, to =-0.1, 0.0001)\nf&lt;- function(a){\n    up = 2^(a) + 2^(-a)\n    down = 2^(a) - 2^(-a) \n    up/down \n}\nplot(a,f(a))\nabline(h=-2,col=2)\n#( 2^(a) + 2^(-a) ) / (2^(a) - 2^(-a))\n\n\n\n\n\n\n\n\n\na[which.min(abs(f(a)+2))]\n\n[1] -0.7925\n\n\n\nf(-0.7925)\n\n[1] -1.999961\n\n\n\n4^(-0.7925) + 4^(0.7925)\n\n[1] 3.333403\n\n\n\nc(5/2,10/3,17/4, 26/5, 37/6)\n\n[1] 2.500000 3.333333 4.250000 5.200000 6.166667\n\n\n2024수능-16. 방정식 \\(3^{x-8} = \\left(\\frac{1}{27}\\right)^x\\) 을 만족시키는 실수 \\(x\\)의 값을 구하시오. [3점]\n(풀이)\n\nx = seq(from = -5, to=5, by =0.1)\nl = 3^(x-8) - (1/27)^x\nx[which.min(abs(l))]\n\n[1] 2\n\n\n2021(가)9월평가원-10. 수열 \\(\\{a_n\\}\\)은 \\(a_1 = 12\\)이고, 모든 자연수 \\(n\\)에 대하여\n\\[\na_{n+1} + a_n = (-1)^{n+1} \\times n\n\\] 을 만족시킨다. \\(a_k &gt; a_1\\)인 자연수 \\(k\\)의 최소값은?\n\n2\n\n4\n\n6\n\n8\n10\n\n(풀이)\n\na = c()\na\n\nNULL\n\n\n\na = c() \na[1] = 12\nfor(n in 1:100){\n    a[n+1] = - a[n] + (-1)^(n+1) * n \n}\n(1:100)[a&gt;a[1]]\n\n [1]   8  10  12  14  16  18  20  22  24  26  28  30  32  34  36  38  40  42  44\n[20]  46  48  50  52  54  56  58  60  62  64  66  68  70  72  74  76  78  80  82\n[39]  84  86  88  90  92  94  96  98 100\n\n\n답은 8\n2007(나)6월평가원-14. 다음은 어느 회사의 연봉에 대한 규정이다.\n(가) 입사 첫째 해 연봉은 \\(a\\)원이고, 입사 19년째 해까지의 연봉은 해마다 직전 연봉에서 8%씩 인상된다.\n(나) 입사 20년째 해부터의 연봉은 입사 19년째 해 연봉의 \\(2/3\\)로 한다.\n이 회사에 입사한 사람이 28년 동안 근무하여 받는 연봉의 총합은? (단, \\(1.08^{18} = 4\\)로 계산한다.)\n\n\\(\\frac{101}{2} a\\)\n\n\\(\\frac{111}{2} a\\)\n\n\\(\\frac{121}{2} a\\)\n\n\\(\\frac{131}{2} a\\)\n\\(\\frac{141}{2} a\\)\n\n(풀이)\n\na = 1\nsal = c()\nsal[1] = a\nfor(y in 2:19){\n    sal[y] &lt;- sal[y-1] * 1.08 \n}\nfor(y in 20:28){\n    sal[y] &lt;- sal[19] * 2/3 \n}\nsum(sal)\n\n[1] 65.42238"
  },
  {
    "objectID": "content/02wk-2.html#숙제",
    "href": "content/02wk-2.html#숙제",
    "title": "02wk-2: [R] – 문제풀이 (벡터인덱싱, if, for 연습) // 숙제",
    "section": "2. 숙제",
    "text": "2. 숙제\n1. \\(\\frac{3}{2}&lt; \\theta &lt; 2\\pi\\) 인 \\(\\theta\\) 에 대하여 \\(\\cos(\\theta)= \\frac{\\sqrt{6}}{3}\\) 을 만족하는 \\(\\theta\\) 값을 구하라.\n(풀이)\n\ntheta = seq(from=3/2,to=2*pi,length=100)\n\n\n# plot(theta, cos(theta), type='l')\n# abline(h=sqrt(6)/3,col=2)\n# 5~6사이에 답이 있는듯 \n\nNULL\n\n\n\ntheta[abs(cos(theta)-sqrt(6)/3) == min(abs(cos(theta)-sqrt(6)/3))]\n\n[1] 5.65509\n\n\n2. 어떤 회사에서는 연봉이 매년 일정한 규칙에 따라 인상된다.\n\n입사 첫해 연봉은 4000만 원이다.\n\n다음 해부터는 전년도 연봉의 8%를 인상한 후, 추가로 100만 원을 더해 결정한다.\n\n즉, 연봉을 \\(a_n\\)이라 하면 다음과 같은 관계식을 따른다. (단위는 만원)\n\\[\n\\begin{cases}\na_1 = 4000 & \\\\\na_n = a_{n-1} \\times 1.08 + 100 & n=2,3,\\dots\n\\end{cases}\n\\]\n이 회사에서 20년 동안 근무했을 때, 받는 총 연봉의 합은 얼마인가?\n(풀이)\n\na = c()\na[1] = 4000 \nfor(n in 2:20){\n    a[n] = a[n-1] * 1.08 + 100 \n}\nsum(a)\n\n[1] 215250.3"
  },
  {
    "objectID": "content/11wk-1.html#수열생성-15점",
    "href": "content/11wk-1.html#수열생성-15점",
    "title": "11wk-1: 중간고사 해설",
    "section": "1. 수열생성 – 15점",
    "text": "1. 수열생성 – 15점\n\n문항당 3점\n\n문제의 조건에 맞는 수열을 100개 생성하라. 즉 \\(a_1,a_2,\\dots,a_{100}\\)을 생성하라.\n(1) \\(a_n = 2n-1\\)\n(풀이)\n\nn = 1:100\nan = 2*n -1 \n\n(2) \\(a_n=\\frac{1}{n}\\)\n(풀이)\n\nn = 1:100\nan = 1/n\n\n(3) \\(a_n = (1/2)^{n}\\)\n(풀이)\n\nn = 1:100\nan = (1/2)^n\n\n(4) \\(a_n = \\begin{cases} 0 &  n=2,4,6,...,100 \\\\ (1/2)^n & n=1,3,5,7,\\dots,99 \\end{cases}\\)\n(풀이)\n\nan = c()\nfor(n in 1:100){\n    if(n%%2 ==0){\n        an[n] =0\n    }else{\n        an[n] = (1/2)^n\n    }\n}\n\n\nan[1:5]\n\n[1] 0.50000 0.00000 0.12500 0.00000 0.03125\n\n\n(5) \\(a_1=1, a_2=2\\); \\(a_n = a_{n-1} + a_{n-2} , n \\geq 3\\)\n(풀이)\n\nan = c(1,2)\nfor(n in 3:100){\n    an[n] = an[n-1] + an[n-2]\n}\nan[1:5]\n\n[1] 1 2 3 5 8"
  },
  {
    "objectID": "content/11wk-1.html#인덱싱-15점",
    "href": "content/11wk-1.html#인덱싱-15점",
    "title": "11wk-1: 중간고사 해설",
    "section": "2. 인덱싱 – 15점",
    "text": "2. 인덱싱 – 15점\n\n문항당 3점\n\n아래의 벡터를 고려하자.\n\nset.seed(43052)\nx = rnorm(100)\nx\n\n  [1] -0.724154332 -0.786807067  0.322143867  1.245215545  0.541298135\n  [6]  1.644425736  1.010839968 -0.041093855  0.566219689  0.322589945\n [11]  0.744257098  1.318771443  1.741644032 -0.481877777 -0.212304360\n [16] -0.038340064 -0.670476111  1.116346318 -1.017367268 -2.764108407\n [21] -1.691021535 -0.286386675 -0.293329723 -0.439574695  1.187215542\n [26]  0.619075484  1.725469680  0.387946245  2.014429677 -1.858183602\n [31]  0.475627218 -1.522483833 -1.221104431  0.526176114  0.300794693\n [36]  0.419955219  0.774111400  1.118417590 -0.003518173 -1.339826327\n [41]  0.689804767  1.241655279  0.540903204 -0.090689478  0.899004061\n [46]  0.277964244  0.102093035  0.026743749 -1.366798404  1.725945031\n [51]  0.016568963  2.435175155  0.660768741  0.586336164  0.915387917\n [56]  1.032858015  0.487488367  0.983191955 -1.672555500 -2.391719134\n [61] -0.653742759  1.169355804  1.187078729 -1.099769071  0.175000573\n [66] -1.806541369  1.137909229 -0.041377066  1.669815049  1.063072588\n [71]  1.590954249 -1.385275254  1.108154509  1.154914467 -2.167338566\n [76] -0.174894345  1.213979381  0.722172855 -1.839824680  1.565277416\n [81]  0.883058660 -0.193202697 -0.805387640  0.115174290 -1.419227107\n [86] -1.347685370  0.338432430 -1.511701575 -0.969561843  1.854438960\n [91] -0.376556809  1.228923415 -1.326004497 -0.608823772  0.424967512\n [96]  1.027977993  0.143027357  1.539912811 -2.705749561 -2.271813360\n\n\n(1) 양수인 원소의 갯수를 count하라.\n(풀이)\n\nsum(x&gt;0)\n\n[1] 59\n\n\n(2) 양수인 원소의 합과 음수인 원소의 합을 구하라. 두 값의 절대값은 어느쪽이 더 큰가?\n(풀이)\n\nsum(x[x&gt;0])\n\n[1] 54.05846\n\n\n\nsum(x[x&lt;0])\n\n[1] -43.6182\n\n\n(3) \\(-0.2 &lt;x &lt;0.1\\)의 범위에 있는 원소의 수를 count 하라.\n(풀이)\n\ny = x[x &gt; -0.2]\n\n\nsum(y&lt;0.1)\n\n[1] 9\n\n\n(4) 0.5와 가장 가까운 원소를 출력하라 .\n(풀이)\n\nwhich.min(abs(x- 0.5))\n\n[1] 57\n\n\n\nx[57]\n\n[1] 0.4874884\n\n\n(5) 평균과 가장 멀리있는 원소를 출력하라.\n(풀이)\n\nwhich.max(abs(x- mean(x)))\n\n[1] 20\n\n\n\nx[20]\n\n[1] -2.764108"
  },
  {
    "objectID": "content/11wk-1.html#matrix-20점",
    "href": "content/11wk-1.html#matrix-20점",
    "title": "11wk-1: 중간고사 해설",
    "section": "3. Matrix – 20점",
    "text": "3. Matrix – 20점\n\n문항당 5점\n\n아래의 matrix를 고려하자.\n\nX = rnorm(200); \ndim(X) = c(20,10)\n\n(1) 열별로 양수를 count하라.\n(풀이)\n\na = c()\nfor(j in 1:10){\n    a[j] = sum(X[,j] &gt; 0)    \n}\na\n\n [1] 12 12  7 13 11  8  8 11  9 10\n\n\n(2) 가장 많은 숫자의 양수를 보유한 열은?\n\nwhich.max(a)\n\n[1] 4\n\n\n(3) 행별로 최대값과 최소값을 구하라.\n(풀이)\n\na = c()\nb = c()\nfor(i in 1:20){\n    a[i] = max(X[i,])\n    b[i] = min(X[i,])\n}\n\n\na\n\n [1] 2.0782276 0.9765560 1.4556490 1.5831809 0.7072966 2.0459338 1.2332443\n [8] 1.5590517 1.0431770 1.7608914 1.8330603 1.0409267 2.3305497 2.2062090\n[15] 0.7724140 2.4259680 1.1632968 1.4911815 0.9195254 1.1524438\n\n\n\nb\n\n [1] -0.9063185 -2.2019410 -1.2226595 -2.1306331 -2.0470883 -1.7249115\n [7] -0.8926343 -2.7928363 -1.2140910 -1.7602147 -1.0219255 -1.6810861\n[13] -1.8325957 -1.3256536 -2.2049965 -1.4324366 -2.0865996 -0.8459714\n[19] -1.2273253 -1.3226180\n\n\n(4) 최대값과 최소값이 차이가 가장 큰 행은?\n(풀이)\n\nwhich.max(a-b)\n\n[1] 8"
  },
  {
    "objectID": "content/11wk-1.html#기본문법-10점",
    "href": "content/11wk-1.html#기본문법-10점",
    "title": "11wk-1: 중간고사 해설",
    "section": "1. 기본문법 – 10점",
    "text": "1. 기본문법 – 10점\n(1) 아래와 같이 두 변수 a,b에 값이 저장되어있다. 두 값을 임시변수 없이 교환하라. – 2점\n\na = 1 \nb = 2\n\n(풀이)\n\nb,a = a,b \n\n\na,b\n\n(2, 1)\n\n\n(2) 컴프리헨션을 이용하여 아래와 같은 수열을 생성하라. – 2점\n\\[x_n = [3,6,9,\\dots,30]\\]\n(풀이)\n\nx = [3*n for n in range(1,11)]\nx\n\n[3, 6, 9, 12, 15, 18, 21, 24, 27, 30]\n\n\n(3) 짝수가 입력으로오면 “짝수” 를 리턴하고 홀수가 입력으로 오면 “홀수”를 리턴하는 함수를 구현하라. 아래는 구현된 함수를 사용한 예시이다. – 2점\n(풀이)\n\nfunc = lambda x: \"짝수\" if x%2==0 else \"홀수\"\n\n\ndef func(x):\n    return \"짝수\" if x%2==0 else \"홀수\"\n\n\ndef func(x):\n    if x%2 ==0:\n        return \"짝수\"\n    else:\n        return \"홀수\"\n\n\nfunc(2)\n\n'짝수'\n\n\n\nfunc(3)\n\n'홀수'\n\n\n(4) (2)에서 만든 \\(x_n\\)에 (3)의 함수를 적용하여 각 원소가 짝수인지 홀수인지 판단한뒤 그 결과를 아래와 같은 리스트로 만들어라. – 2점\n\n['홀수', '짝수', '홀수', '짝수', '홀수', '짝수', '홀수', '짝수', '홀수', '짝수']\n\n['홀수', '짝수', '홀수', '짝수', '홀수', '짝수', '홀수', '짝수', '홀수', '짝수']\n\n\n(풀이)\n\n[func(xi) for xi in x]\n\n['홀수', '짝수', '홀수', '짝수', '홀수', '짝수', '홀수', '짝수', '홀수', '짝수']\n\n\n(5) 아래와 같은 array가 있다고 하자. – 2점\n\nx = np.random.randn(100)\ny = np.random.randn(100)\n\n\\(x_i &gt; y_i\\) 를 만족하는 원소는 몇개있는가?\n(풀이)\n\nsum(x &gt; y)\n\nnp.int32(56)\n\n\n\n(x&gt;y).sum()\n\nnp.int32(56)\n\n\n\nnp.sum(x&gt;y)\n\nnp.int32(56)"
  },
  {
    "objectID": "content/11wk-1.html#겹쳐서-그리기-10점",
    "href": "content/11wk-1.html#겹쳐서-그리기-10점",
    "title": "11wk-1: 중간고사 해설",
    "section": "2. 겹쳐서 그리기 – 10점",
    "text": "2. 겹쳐서 그리기 – 10점\n(1) \\(-2&lt;x&lt;2\\) 에서 \\(\\cos(2x)\\) 의 그래프와 \\(\\frac{1}{20}x+0.5\\)의 그래프를 겹쳐 그려라. 교점의 수가 몇개인가? – 2점\n(풀이)\n\nx = np.linspace(-2,2,1001)\nplt.plot(x,np.cos(2*x))\nplt.plot(x,1/20*x + 0.5)\n\n\n\n\n\n\n\n\n(2) \\(-2&lt;x&lt;2\\) 에서 \\(\\cos(2x)\\) 의 그래프와 \\(\\frac{1}{20}x+k\\)의 그래프를 겹쳐 그렸을때 두 그래프가 많은 교점을 같도록 상수 \\(k\\)의 값을 적절히 선택하라. (“교점의 수$$2” 를 점수로 인정, 최대 8점까지 획득가능) – 8점\n(풀이)\n\nx = np.linspace(-2,2,1001)\nplt.plot(x,np.cos(2*x))\nplt.plot(x,1/20*x - 0.85)\n\n\n\n\n\n\n\n\n#"
  },
  {
    "objectID": "content/11wk-1.html#oxford-iii-30점",
    "href": "content/11wk-1.html#oxford-iii-30점",
    "title": "11wk-1: 중간고사 해설",
    "section": "3. Oxford-III – 30점",
    "text": "3. Oxford-III – 30점\n\n(1), (2) 를 풀지않고 바로 (3)만 풀어도 정답으로 인정함\n\nOxford-III: // reference\n아래는 이미지 파일명을 불러오는 코드이다.\n\nimport requests\nurl = 'https://raw.githubusercontent.com/guebin/PP2023/main/posts/01_PythonBasic/Oxford-IIIT.txt'\ntxt = requests.get(url).content.decode()\nflist = txt.split()\n\n\nflist[:10]\n\n['Abyssinian_1.jpg',\n 'Abyssinian_10.jpg',\n 'Abyssinian_100.jpg',\n 'Abyssinian_100.mat',\n 'Abyssinian_101.jpg',\n 'Abyssinian_101.mat',\n 'Abyssinian_102.jpg',\n 'Abyssinian_102.mat',\n 'Abyssinian_103.jpg',\n 'Abyssinian_104.jpg']\n\n\n(1) 각 이미지파일명은 아래와 같은 규칙으로 저장되어 있다. – 10점\n\n파일명의 첫글자가 대문자이면 고양이를 의미하고 첫글자가 소문자이면 강아지를 의미한다.\n\n이와 같은 규칙을 명확하게 하기 위하여 고양이일 경우 앞에 파일명의 앞에 “고양이_” 를 붙이고 강아지일 경우 “강아지_”를 붙이고 싶다. 이를 구현하는 코드를 작성하라.\n(풀이)\n\ndef func(fname):\n    if fname[0].isupper():\n        return \"고양이_\"+fname\n    else:\n        return \"강아지_\"+fname\nflist = [func(fname) for fname in flist]\nflist[:5]\n\n['고양이_Abyssinian_1.jpg',\n '고양이_Abyssinian_10.jpg',\n '고양이_Abyssinian_100.jpg',\n '고양이_Abyssinian_100.mat',\n '고양이_Abyssinian_101.jpg']\n\n\n(2) 아래의 딕셔너리를 이용하여 (1)에서 얻은 리스트의 각 원소에 해당하는 종의 이름을 한글로 바꾸는 함수를 구현하라. – 10점\n\nbreed_ko_dict = {\n    'Abyssinian': '아비시니안',\n    'Bengal': '벵갈',\n    'Birman': '버만',\n    'Bombay': '봄베이',\n    'British_Shorthair': '브리티시쇼트헤어',\n    'Egyptian_Mau': '이집션마우',\n    'Maine_Coon': '메인쿤',\n    'Persian': '페르시안',\n    'Ragdoll': '랙돌',\n    'Russian_Blue': '러시안블루',\n    'Siamese': '샴',\n    'Sphynx': '스핑크스',\n    'american_bulldog': '아메리칸불도그',\n    'american_pit_bull_terrier': '아메리칸핏불테리어',\n    'basset_hound': '바셋하운드',\n    'beagle': '비글',\n    'boxer': '복서',\n    'chihuahua': '치와와',\n    'english_cocker_spaniel': '잉글리시코커스패니얼',\n    'english_setter': '잉글리시세터',\n    'german_shorthaired': '저먼쇼트헤어드포인터',\n    'great_pyrenees': '그레이트피레니즈',\n    'havanese': '하바니즈',\n    'japanese_chin': '재패니즈친',\n    'keeshond': '키스혼드',\n    'leonberger': '레온버거',\n    'miniature_pinscher': '미니어처핀셔',\n    'newfoundland': '뉴펀들랜드',\n    'pomeranian': '포메라니안',\n    'pug': '퍼그',\n    'saint_bernard': '세인트버나드',\n    'samoyed': '사모예드',\n    'scottish_terrier': '스코티시테리어',\n    'shiba_inu': '시바이누',\n    'staffordshire_bull_terrier': '스태퍼드셔불테리어',\n    'wheaten_terrier': '휘튼테리어',\n    'yorkshire_terrier': '요크셔테리어'\n}\n\n구현예시는 아래와 같다.\n\n# 출력예시1\nfunc('강아지_scottish_terrier_98.jpg')\n\n'강아지_스코티시테리어_98.jpg'\n\n\n\n# 출력예시2\nfunc('고양이_British_Shorthair_97.jpg')\n\n'고양이_브리티시쇼트헤어_97.jpg'\n\n\n(풀이)\n\ndef func(fname):\n    fname_list = fname.split(\"_\")\n    head = fname_list[0]\n    tail = fname_list[-1]\n    body = \"_\".join(fname_list[1:][:-1])\n    body_kor = breed_ko_dict[body]\n    return head + \"_\" + body_kor + \"_\" + tail\n\n\nfunc('강아지_scottish_terrier_98.jpg')\n\n'강아지_스코티시테리어_98.jpg'\n\n\n(3) (2)에서 구현한 함수를 이용하여 flist의 모든 원소를 바꾸어라.\n(풀이)\n\n[func(fname) for fname in flist][:5]\n\n['고양이_아비시니안_1.jpg',\n '고양이_아비시니안_10.jpg',\n '고양이_아비시니안_100.jpg',\n '고양이_아비시니안_100.mat',\n '고양이_아비시니안_101.jpg']"
  },
  {
    "objectID": "content/11wk-2.html",
    "href": "content/11wk-2.html",
    "title": "11wk-2: [DataFrame] – 타이타닉, Pandas 행과 열의 선택 (1) // 숙제",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt"
  },
  {
    "objectID": "content/11wk-2.html#타이타닉",
    "href": "content/11wk-2.html#타이타닉",
    "title": "11wk-2: [DataFrame] – 타이타닉, Pandas 행과 열의 선택 (1) // 숙제",
    "section": "1. 타이타닉",
    "text": "1. 타이타닉\n\nA. 영화\n\nref: https://namu.wiki/w/타이타닉(영화)\n\n\nB. 데이터\n- 데이터 불러오기\n\ndf = pd.read_csv(\"titanic.csv\")\ndf\n\n\n\n\n\n\n\n\nPassengerId\nSurvived\nPclass\nName\nSex\nAge\nSibSp\nParch\nTicket\nFare\nCabin\nEmbarked\n\n\n\n\n0\n1\n0\n3\nBraund, Mr. Owen Harris\nmale\n22.0\n1\n0\nA/5 21171\n7.2500\nNaN\nS\n\n\n1\n2\n1\n1\nCumings, Mrs. John Bradley (Florence Briggs Th...\nfemale\n38.0\n1\n0\nPC 17599\n71.2833\nC85\nC\n\n\n2\n3\n1\n3\nHeikkinen, Miss. Laina\nfemale\n26.0\n0\n0\nSTON/O2. 3101282\n7.9250\nNaN\nS\n\n\n3\n4\n1\n1\nFutrelle, Mrs. Jacques Heath (Lily May Peel)\nfemale\n35.0\n1\n0\n113803\n53.1000\nC123\nS\n\n\n4\n5\n0\n3\nAllen, Mr. William Henry\nmale\n35.0\n0\n0\n373450\n8.0500\nNaN\nS\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n886\n887\n0\n2\nMontvila, Rev. Juozas\nmale\n27.0\n0\n0\n211536\n13.0000\nNaN\nS\n\n\n887\n888\n1\n1\nGraham, Miss. Margaret Edith\nfemale\n19.0\n0\n0\n112053\n30.0000\nB42\nS\n\n\n888\n889\n0\n3\nJohnston, Miss. Catherine Helen \"Carrie\"\nfemale\nNaN\n1\n2\nW./C. 6607\n23.4500\nNaN\nS\n\n\n889\n890\n1\n1\nBehr, Mr. Karl Howell\nmale\n26.0\n0\n0\n111369\n30.0000\nC148\nC\n\n\n890\n891\n0\n3\nDooley, Mr. Patrick\nmale\n32.0\n0\n0\n370376\n7.7500\nNaN\nQ\n\n\n\n\n891 rows × 12 columns\n\n\n\n# 예제1 – 단순계산\n(1) 전체 탑승객은 몇명인가?\n\nlen(df)\n\n891\n\n\n(2) 전체 탐승객중 몇명이 생존하였는가?\n\nsum(list(df.Survived))\n\n342\n\n\n\nsum(df.Survived)\n\n342\n\n\n(3) 생존률을 구하라.\n\ndf.Survived.mean()\n\nnp.float64(0.3838383838383838)\n\n\n(4) 탑승객중 남자는 몇명, 여자는 몇명인가?\n\nlist(df.Sex).count(\"male\"), list(df.Sex).count(\"female\")\n\n(577, 314)\n\n\n(5) 남자와 여자의 비율은?\n\nlist(df.Sex).count(\"male\")/len(df), list(df.Sex).count(\"female\")/len(df)\n\n(0.6475869809203143, 0.35241301907968575)\n\n\n(6) 탑승객이 탑승한 항구는 몇 종류인가? 종류별로 몇명의 승객이 탑승했는가?\n\nset(df.Embarked)\n\n{'C', 'Q', 'S', nan}\n\n\n\nlist(df.Embarked).count(\"C\"), list(df.Embarked).count(\"Q\"), list(df.Embarked).count(\"S\")\n\n(168, 77, 644)\n\n\n\ndf.Embarked.value_counts()\n\nEmbarked\nS    644\nC    168\nQ     77\nName: count, dtype: int64\n\n\n#\n# 예제2 – 그룹별 생존률\n(1) 남녀의 생존률을 각각 구하고 비교하라.\n\ndf\n\n\n\n\n\n\n\n\nPassengerId\nSurvived\nPclass\nName\nSex\nAge\nSibSp\nParch\nTicket\nFare\nCabin\nEmbarked\n\n\n\n\n0\n1\n0\n3\nBraund, Mr. Owen Harris\nmale\n22.0\n1\n0\nA/5 21171\n7.2500\nNaN\nS\n\n\n1\n2\n1\n1\nCumings, Mrs. John Bradley (Florence Briggs Th...\nfemale\n38.0\n1\n0\nPC 17599\n71.2833\nC85\nC\n\n\n2\n3\n1\n3\nHeikkinen, Miss. Laina\nfemale\n26.0\n0\n0\nSTON/O2. 3101282\n7.9250\nNaN\nS\n\n\n3\n4\n1\n1\nFutrelle, Mrs. Jacques Heath (Lily May Peel)\nfemale\n35.0\n1\n0\n113803\n53.1000\nC123\nS\n\n\n4\n5\n0\n3\nAllen, Mr. William Henry\nmale\n35.0\n0\n0\n373450\n8.0500\nNaN\nS\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n886\n887\n0\n2\nMontvila, Rev. Juozas\nmale\n27.0\n0\n0\n211536\n13.0000\nNaN\nS\n\n\n887\n888\n1\n1\nGraham, Miss. Margaret Edith\nfemale\n19.0\n0\n0\n112053\n30.0000\nB42\nS\n\n\n888\n889\n0\n3\nJohnston, Miss. Catherine Helen \"Carrie\"\nfemale\nNaN\n1\n2\nW./C. 6607\n23.4500\nNaN\nS\n\n\n889\n890\n1\n1\nBehr, Mr. Karl Howell\nmale\n26.0\n0\n0\n111369\n30.0000\nC148\nC\n\n\n890\n891\n0\n3\nDooley, Mr. Patrick\nmale\n32.0\n0\n0\n370376\n7.7500\nNaN\nQ\n\n\n\n\n891 rows × 12 columns\n\n\n\n(풀이1)\n\nsex = list(df.Sex)\nsurv = np.array(list(df.Survived))\n\n\nsurv[[l == \"male\" for l in sex]].mean()\n\nnp.float64(0.18890814558058924)\n\n\n\nsurv[[l == \"female\" for l in sex]].mean()\n\nnp.float64(0.7420382165605095)\n\n\n(풀이2)\n\ndf.Survived[df.Sex == \"male\"].mean()\n\nnp.float64(0.18890814558058924)\n\n\n\ndf.Survived[df.Sex == \"female\"].mean()\n\nnp.float64(0.7420382165605095)\n\n\n(2) 항구별 생존률을 각각 구하고 비교하라.\n\ndf.Survived[df.Embarked == \"C\"].mean()\n\nnp.float64(0.5535714285714286)\n\n\n\ndf.Survived[df.Embarked == \"Q\"].mean()\n\nnp.float64(0.38961038961038963)\n\n\n\ndf.Survived[df.Embarked == \"S\"].mean()\n#df[df.Embarked == \"S\"].Survived.mean()\n\nnp.float64(0.33695652173913043)\n\n\n(3) 항구별 Fare를 각각 구하고 비교하라.\n\ndf.Fare[df.Embarked == \"C\"].mean()\n\nnp.float64(59.95414404761905)\n\n\n\ndf.Fare[df.Embarked == \"Q\"].mean()\n\nnp.float64(13.276029870129872)\n\n\n\ndf.Fare[df.Embarked == \"S\"].mean()\n\nnp.float64(27.079811801242233)\n\n\n#\n# 예제3 – 시각화\n(1) Age에 대한 히스토그램을 그려라.\n\nplt.hist(df.Age);\n\n\n\n\n\n\n\n\n(2) 성별로 Age에 대한 히스토그램을 그려라.\n\nplt.hist(df[df.Sex == \"male\"].Age)\nplt.hist(df[df.Sex == \"female\"].Age)\n\n(array([23., 11., 41., 47., 44., 35., 24., 19.,  9.,  8.]),\n array([ 0.75 ,  6.975, 13.2  , 19.425, 25.65 , 31.875, 38.1  , 44.325,\n        50.55 , 56.775, 63.   ]),\n &lt;BarContainer object of 10 artists&gt;)\n\n\n\n\n\n\n\n\n\n(3) 항구별/성별로 Age에 대한 히스토그램을 그려라.\n\nplt.hist(df[(df.Sex == \"male\") & (df.Embarked == \"C\")].Age)\nplt.hist(df[(df.Sex == \"female\") & (df.Embarked == \"C\")].Age)\n\n(array([ 6.,  1., 13., 11.,  6.,  4.,  7.,  4.,  6.,  3.]),\n array([ 0.75 ,  6.675, 12.6  , 18.525, 24.45 , 30.375, 36.3  , 42.225,\n        48.15 , 54.075, 60.   ]),\n &lt;BarContainer object of 10 artists&gt;)\n\n\n\n\n\n\n\n\n\n\nplt.hist(df[(df.Sex == \"male\") & (df.Embarked == \"S\")].Age)\nplt.hist(df[(df.Sex == \"female\") & (df.Embarked == \"S\")].Age)\n\n(array([18.,  8., 23., 35., 35., 27., 16., 14.,  5.,  5.]),\n array([ 1. ,  7.2, 13.4, 19.6, 25.8, 32. , 38.2, 44.4, 50.6, 56.8, 63. ]),\n &lt;BarContainer object of 10 artists&gt;)\n\n\n\n\n\n\n\n\n\n\nplt.hist(df[(df.Sex == \"male\") & (df.Embarked == \"Q\")].Age)\nplt.hist(df[(df.Sex == \"female\") & (df.Embarked == \"Q\")].Age)\n\n(array([3., 2., 2., 0., 0., 0., 2., 2., 0., 1.]),\n array([15. , 17.4, 19.8, 22.2, 24.6, 27. , 29.4, 31.8, 34.2, 36.6, 39. ]),\n &lt;BarContainer object of 10 artists&gt;)\n\n\n\n\n\n\n\n\n\n#\n# 예제4 – 그룹별 생존률\n(1) 10세 미만 승객의 생존률을 구하라.\n\ndf[df.Age &lt; 10].Survived.mean()\n\nnp.float64(0.6129032258064516)\n\n\n(2) 20대 남자의 생존률을 구하라.\n\ndf[(df.Age &gt; 20) & (df.Age &lt; 30) & (df.Sex == \"male\")].Survived.mean()\n\nnp.float64(0.16296296296296298)"
  },
  {
    "objectID": "content/11wk-2.html#pandas-행과-열의-선택",
    "href": "content/11wk-2.html#pandas-행과-열의-선택",
    "title": "11wk-2: [DataFrame] – 타이타닉, Pandas 행과 열의 선택 (1) // 숙제",
    "section": "2. Pandas 행과 열의 선택",
    "text": "2. Pandas 행과 열의 선택\n\nA. df 만들기\n\ndct = {'date': ['12/30','12/31','01/01','01/02','01/03'], 'X1': [65,95,65,55,80], 'X2': [55,100,90,80,30], 'X3': [50,50,60,75,30], 'X4': [40,80,30,80,100]}\ndf = pd.DataFrame(dct)\ndf \n\n\n\n\n\n\n\n\ndate\nX1\nX2\nX3\nX4\n\n\n\n\n0\n12/30\n65\n55\n50\n40\n\n\n1\n12/31\n95\n100\n50\n80\n\n\n2\n01/01\n65\n90\n60\n30\n\n\n3\n01/02\n55\n80\n75\n80\n\n\n4\n01/03\n80\n30\n30\n100\n\n\n\n\n\n\n\n\n\nB. 열의 선택\n- 방법1 – df.\n\n# df.X1 \n\n- 방법2 – df[]\n\n# df['X1'] # str \n# df[['X1']] # [str]\n# df[['X1','X3']] # [str,str]\n\n- 방법3 – df.iloc\n\n# df.iloc[:,0] # int\n# df.iloc[:,-2:] # int:int - 슬라이싱\n# df.iloc[:,1::2] # int:int - 스트라이딩\n# df.iloc[:,[0]] # [int]\n# df.iloc[:,[0,1]] # [int,int]\n# df.iloc[:,[True,True,False,False]] # bool의 list \n# df.iloc[:,range(2)] # range\n\n- 방법4 – df.loc\n\n# df.loc[:,'X1'] # str\n# df.loc[:,'X1':'X3'] # 'str':'str' -- 칼럼이름으로 슬라이싱 **\n# df.loc[:,'X1'::2] # 'str':'str' -- 칼럼이름으로 스트라이딩 ** \n# df.loc[:,['X1']] # [str]\n# df.loc[:,['X1','X4']] # [str,str]\n# df.loc[:,[True,False,False,True,True]] # bool의 list\n\n수업때 헤맨 내용 재 설명 – 다음시간에 다시 설명할게요\n자료형이 pandas.core.series.Series 인 경우와 pandas.core.frame.DataFrame 인 경우는 사용가능한 메소드가 다른 경우도 있으므로 조심해야함.\n\ndf = pd.read_csv(\"https://raw.githubusercontent.com/guebin/IAB2025-Play/refs/heads/main/content/titanic.csv\")[:5]\ndf\n\n\n\n\n\n\n\n\nPassengerId\nSurvived\nPclass\nName\nSex\nAge\nSibSp\nParch\nTicket\nFare\nCabin\nEmbarked\n\n\n\n\n0\n1\n0\n3\nBraund, Mr. Owen Harris\nmale\n22.0\n1\n0\nA/5 21171\n7.2500\nNaN\nS\n\n\n1\n2\n1\n1\nCumings, Mrs. John Bradley (Florence Briggs Th...\nfemale\n38.0\n1\n0\nPC 17599\n71.2833\nC85\nC\n\n\n2\n3\n1\n3\nHeikkinen, Miss. Laina\nfemale\n26.0\n0\n0\nSTON/O2. 3101282\n7.9250\nNaN\nS\n\n\n3\n4\n1\n1\nFutrelle, Mrs. Jacques Heath (Lily May Peel)\nfemale\n35.0\n1\n0\n113803\n53.1000\nC123\nS\n\n\n4\n5\n0\n3\nAllen, Mr. William Henry\nmale\n35.0\n0\n0\n373450\n8.0500\nNaN\nS\n\n\n\n\n\n\n\n아래의 2개는 비슷해보이지만 약간 다를수 있음\n\ndf['Survived']\n\n0    0\n1    1\n2    1\n3    1\n4    0\nName: Survived, dtype: int64\n\n\n\ndf[['Survived']]\n\n\n\n\n\n\n\n\nSurvived\n\n\n\n\n0\n0\n\n\n1\n1\n\n\n2\n1\n\n\n3\n1\n\n\n4\n0\n\n\n\n\n\n\n\n# 예시1 – 비슷하게 동작하는 경우\n\ndf['Survived'].mean()\n\nnp.float64(0.6)\n\n\n\ndf[['Survived']].mean()\n\nSurvived    0.6\ndtype: float64\n\n\n#\n# 예시2 – 비슷하게 동작하지 않는 경우\n\ndf[['Survived']].to_list()\n\n\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n/tmp/ipykernel_498206/2135151720.py in ?()\n----&gt; 1 df[['Survived']].to_list()\n\n~/anaconda3/envs/iab2025/lib/python3.13/site-packages/pandas/core/generic.py in ?(self, name)\n   6295             and name not in self._accessors\n   6296             and self._info_axis._can_hold_identifiers_and_holds_name(name)\n   6297         ):\n   6298             return self[name]\n-&gt; 6299         return object.__getattribute__(self, name)\n\nAttributeError: 'DataFrame' object has no attribute 'to_list'\n\n\n\n\ndf['Survived'].to_list()\n\n[0, 1, 1, 1, 0]\n\n\n#"
  },
  {
    "objectID": "content/11wk-2.html#숙제",
    "href": "content/11wk-2.html#숙제",
    "title": "11wk-2: [DataFrame] – 타이타닉, Pandas 행과 열의 선택 (1) // 숙제",
    "section": "3. 숙제",
    "text": "3. 숙제\n\ndf = pd.read_csv(\"titanic.csv\")[:5]\ndf\n\n\n\n\n\n\n\n\nPassengerId\nSurvived\nPclass\nName\nSex\nAge\nSibSp\nParch\nTicket\nFare\nCabin\nEmbarked\n\n\n\n\n0\n1\n0\n3\nBraund, Mr. Owen Harris\nmale\n22.0\n1\n0\nA/5 21171\n7.2500\nNaN\nS\n\n\n1\n2\n1\n1\nCumings, Mrs. John Bradley (Florence Briggs Th...\nfemale\n38.0\n1\n0\nPC 17599\n71.2833\nC85\nC\n\n\n2\n3\n1\n3\nHeikkinen, Miss. Laina\nfemale\n26.0\n0\n0\nSTON/O2. 3101282\n7.9250\nNaN\nS\n\n\n3\n4\n1\n1\nFutrelle, Mrs. Jacques Heath (Lily May Peel)\nfemale\n35.0\n1\n0\n113803\n53.1000\nC123\nS\n\n\n4\n5\n0\n3\nAllen, Mr. William Henry\nmale\n35.0\n0\n0\n373450\n8.0500\nNaN\nS\n\n\n\n\n\n\n\nSurvived, Sex, Age열을 출력하라.\n\ndf[['Survived', 'Sex', 'Age']]\n\n\n\n\n\n\n\n\nSurvived\nSex\nAge\n\n\n\n\n0\n0\nmale\n22.0\n\n\n1\n1\nfemale\n38.0\n\n\n2\n1\nfemale\n26.0\n\n\n3\n1\nfemale\n35.0\n\n\n4\n0\nmale\n35.0"
  },
  {
    "objectID": "content/07wk-1.html#oxford-iii",
    "href": "content/07wk-1.html#oxford-iii",
    "title": "07wk-1: [Python] – Oxford-III // 숙제",
    "section": "1. Oxford-III",
    "text": "1. Oxford-III\nOxford-III: // reference\n아래는 이미지 파일명들이 저장된 string을 불러오는 코드이다.\n\nimport requests\nurl = 'https://raw.githubusercontent.com/guebin/PP2023/main/posts/01_PythonBasic/Oxford-IIIT.txt'\ntxt = requests.get(url).content.decode()\n\ntxt의 출력 일부를 나타내면 아래와 같다.\n'Abyssinian_1.jpg\\nAbyssinian_10.jpg\\nAbyssinian_100.jpg\\nAbyssinian_100.mat\\nAbyssinian_101.jpg\\nAbyssinian_101.mat\\nAbyssinian_102.jpg\\nAbyssinian_102.mat\\nAbyssinian_103.jpg\\nAbyssinian_104.jpg\\nAbyssinian_105.jpg\\nAbyssinian_106.jpg\\nAbyssinian_107.jpg\\nAbyssinian_108.jpg\\nAbyssinian_109.jpg\\nAbyssinian_11.jpg\\nAbyssinian_110.jpg\\nAbyssinian_111.jpg\\nAbyssinian_112.jpg\\nAbyssinian_113.jpg\\nAbyssinian_114.jpg\\nAbyssinian_115.jpg\\nAbyssinian_116.jpg\\nAbyssinian_117.jpg\\nAbyssinian_118.jpg\\nAbyssinian_119.jpg\\nAbyssinian_12.jpg\\nAbyssinian_120.jpg\\nAbyssinian_121.jpg\\nAbyssinian_122.jpg\\nAbyssinian_123.jpg\\nAbyssinian_124.jpg\\nAbyssinian_125.jpg\\nAbyssinian_126.jpg\\nAbyssinian_127.jpg\\nAbyssinian_128.jpg\\nAbyssinian_129.jpg\\nAbyssinian_13.jpg\\nAbyssinian_130.jpg\\nAbyssinian_131.jpg\\nAbyssinian_132.jpg\\n ....... \n(1) 각 파일명은 \\n으로 구분되어있다. 위의 스트링을 분해하여 아래와 같은 리스트를 생성하고 fname_list에 저장하라.\n# fname_list 의 출력결과는 아래와 같아야 한다. \n['Abyssinian_1.jpg','Abyssinian_10.jpg', ... ,'yorkshire_terrier_98.jpg', 'yorkshire_terrier_99.jpg']\n(풀이)\n\nfname_txt = txt.split()\n#fname_txt\n\n(2) fname_list 에는 총 몇개의 이미지파일명이 있는가?\n(풀이)\n\nlen(fname_list)\n\n7393\n\n\n(3) 각 이미지파일명은 아래와 같은 규칙으로 저장되어 있다.\n\n파일명의 첫글자가 대문자이면 고양이를 의미하고 첫글자가 소문자이면 강아지를 의미한다.\n\n이미지 파일명이 입력으로 오면 강아지인지 고양이인지 판단하여 ‘cat’ or ’dog’를 리턴하는 함수 f를 구현하라.\n(함수사용예시)\n\nf('yorkshire_terrier_99.jpg')\n\n'dog'\n\n\n\nf('Abyssinian_1.jpg')\n\n'cat'\n\n\n(풀이)\n\ndef f(fname):\n        return \"cat\" if fname[0].isupper() else \"dog\"\n\n\nf('yorkshire_terrier_99.jpg'),f('Abyssinian_1.jpg')\n\n('dog', 'cat')\n\n\n(4) 위의 결과로 나온 fname_list를 입력으로 하고 리스트의 각 원소가 고양이를 의미하는 그림인지 강아지를 의미하는 그림인지 나타내는 리스트를 만들어라.\n## 입력예시 \n['Abyssinian_1.jpg','Abyssinian_10.jpg',...,'yorkshire_terrier_98.jpg', 'yorkshire_terrier_99.jpg']\n\n## 출력예시\n['cat', 'cat', ... , 'dog', 'dog']\n(풀이1)\n\n# [f(l) for l in fname_list]\n\n(풀이2)\n\n#[(lambda x: \"cat\" if x[0].isupper() else \"dog\")(l) for l in fname_list]\n\n(풀이3)\n\n#[{True:\"고양이\", False:\"개\"}[l[0].isupper()]   for l in fname_list]\n\n(5) 강아지 그림과 고양이 그림이 각각 몇 장씩 포함되어 있는지 파악하는 코드를 구현하라.\n(풀이1)\n\n[f(l) for l in fname_list].count(\"dog\"), [f(l) for l in fname_list].count(\"cat\")\n\n(4990, 2403)\n\n\n(풀이2)\n\nlen(fname_list) - sum([l[0].isupper() for l in fname_list]),  sum([l[0].isupper() for l in fname_list])\n\n(4990, 2403)\n\n\n(6) 고양이 혹은 강아지의 각 종이 몇 장씩 포함되어있는지 구하라.\n# 출력예시\n[('havanese', 200),\n ('Abyssinian', 203),\n ('keeshond', 200),\n ('american_pit_bull_terrier', 200),\n ('pug', 200),\n ('Birman', 200),\n ('saint_bernard', 200),\n ('samoyed', 200),\n ('wheaten_terrier', 200),\n ('Ragdoll', 200),\n ('Bengal', 200),\n ('basset_hound', 200),\n ('beagle', 200),\n ('staffordshire_bull_terrier', 191),\n ('english_cocker_spaniel', 200),\n ('scottish_terrier', 199),\n ('yorkshire_terrier', 200),\n ('British_Shorthair', 200),\n ('boxer', 200),\n ('english_setter', 200),\n ('newfoundland', 200),\n ('Siamese', 200),\n ('miniature_pinscher', 200),\n ('Bombay', 200),\n ('japanese_chin', 200),\n ('Persian', 200),\n ('chihuahua', 200),\n ('Russian_Blue', 200),\n ('Maine_Coon', 200),\n ('american_bulldog', 200),\n ('leonberger', 200),\n ('german_shorthaired', 200),\n ('Sphynx', 200),\n ('shiba_inu', 200),\n ('pomeranian', 200),\n ('great_pyrenees', 200),\n ('Egyptian_Mau', 200)]\n(풀이)\n\nlst = [\"_\".join(l.split(\"_\")[:-1])   for l in fname_list]\n[(s,lst.count(s)) for s in set(lst)]\n\n[('basset_hound', 200),\n ('Birman', 200),\n ('Ragdoll', 200),\n ('american_pit_bull_terrier', 200),\n ('boxer', 200),\n ('keeshond', 200),\n ('Russian_Blue', 200),\n ('wheaten_terrier', 200),\n ('Siamese', 200),\n ('chihuahua', 200),\n ('miniature_pinscher', 200),\n ('leonberger', 200),\n ('Egyptian_Mau', 200),\n ('beagle', 200),\n ('american_bulldog', 200),\n ('Abyssinian', 203),\n ('saint_bernard', 200),\n ('Persian', 200),\n ('yorkshire_terrier', 200),\n ('pomeranian', 200),\n ('english_cocker_spaniel', 200),\n ('scottish_terrier', 199),\n ('staffordshire_bull_terrier', 191),\n ('Bombay', 200),\n ('samoyed', 200),\n ('english_setter', 200),\n ('Sphynx', 200),\n ('german_shorthaired', 200),\n ('pug', 200),\n ('Maine_Coon', 200),\n ('British_Shorthair', 200),\n ('great_pyrenees', 200),\n ('Bengal', 200),\n ('japanese_chin', 200),\n ('shiba_inu', 200),\n ('newfoundland', 200),\n ('havanese', 200)]"
  },
  {
    "objectID": "content/07wk-1.html#숙제",
    "href": "content/07wk-1.html#숙제",
    "title": "07wk-1: [Python] – Oxford-III // 숙제",
    "section": "2. 숙제",
    "text": "2. 숙제\n\nimport requests\nimport random\nurl = 'https://raw.githubusercontent.com/guebin/PP2023/main/posts/01_PythonBasic/Oxford-IIIT.txt'\nfnames = requests.get(url).content.decode().split()\nrandom.shuffle(fnames)\ntxt = \"\\n\".join(fnames[::300])\ntxt\n\n'beagle_185.jpg\\nenglish_cocker_spaniel_58.jpg\\nminiature_pinscher_52.jpg\\nAbyssinian_101.jpg\\nbasset_hound_41.jpg\\nSphynx_103.jpg\\nminiature_pinscher_31.jpg\\nEgyptian_Mau_11.jpg\\nkeeshond_147.jpg\\njapanese_chin_79.jpg\\nminiature_pinscher_18.jpg\\npomeranian_60.jpg\\nscottish_terrier_31.jpg\\nshiba_inu_76.jpg\\nRagdoll_67.jpg\\npomeranian_42.jpg\\nboxer_87.jpg\\nnewfoundland_18.jpg\\nbeagle_13.jpg\\nbasset_hound_122.jpg\\nRussian_Blue_199.jpg\\njapanese_chin_67.jpg\\nwheaten_terrier_14.jpg\\ngreat_pyrenees_93.jpg\\nsaint_bernard_159.jpg'\n\n\n각 이미지파일명은 아래와 같은 규칙으로 저장되어 있다.\n\n각 파일명은 구분되어있다.\n파일명의 첫글자가 대문자이면 고양이를 의미하고 첫글자가 소문자이면 강아지를 의미한다.\n\n이 이미지에서 강아지는 모두 몇마리 있는가?\n(풀이)\n\nsum([l.islower() for l in txt.split()])\n\n20"
  },
  {
    "objectID": "content/mid-python.html",
    "href": "content/mid-python.html",
    "title": "중간고사 - Python",
    "section": "",
    "text": "import numpy as np\nimport matplotlib.pyplot as plt"
  },
  {
    "objectID": "content/mid-python.html#기본문법-10점",
    "href": "content/mid-python.html#기본문법-10점",
    "title": "중간고사 - Python",
    "section": "1. 기본문법 – 10점",
    "text": "1. 기본문법 – 10점\n(1) 아래와 같이 두 변수 a,b에 값이 저장되어있다. 두 값을 임시변수 없이 교환하라. – 2점\n\na = 1 \nb = 2\n\n(2) 컴프리헨션을 이용하여 아래와 같은 수열을 생성하라. – 2점\n\\[x_n = [3,6,9,\\dots,30]\\]\n(3) 짝수가 입력으로오면 “짝수” 를 리턴하고 홀수가 입력으로 오면 “홀수”를 리턴하는 함수를 구현하라. 아래는 구현된 함수를 사용한 예시이다. – 2점\n\nfunc(2)\n\n'짝수'\n\n\n\nfunc(3)\n\n'홀수'\n\n\n(4) (2)에서 만든 \\(x_n\\)에 (3)의 함수를 적용하여 각 원소가 짝수인지 홀수인지 판단한뒤 그 결과를 아래와 같은 리스트로 만들어라. – 2점\n\n['홀수', '짝수', '홀수', '짝수', '홀수', '짝수', '홀수', '짝수', '홀수', '짝수']\n\n['홀수', '짝수', '홀수', '짝수', '홀수', '짝수', '홀수', '짝수', '홀수', '짝수']\n\n\n(5) 아래와 같은 array가 있다고 하자. – 2점\n\nx = np.random.randn(100)\ny = np.random.randn(100)\n\n\\(x_i &gt; y_i\\) 를 만족하는 원소는 몇개있는가?"
  },
  {
    "objectID": "content/mid-python.html#겹쳐서-그리기-10점",
    "href": "content/mid-python.html#겹쳐서-그리기-10점",
    "title": "중간고사 - Python",
    "section": "2. 겹쳐서 그리기 – 10점",
    "text": "2. 겹쳐서 그리기 – 10점\n(1) \\(-2&lt;x&lt;2\\) 에서 \\(\\cos(2x)\\) 의 그래프와 \\(\\frac{1}{20}x+0.5\\)의 그래프를 겹쳐 그려라. 교점의 수가 몇개인가? – 2점\n(2) \\(-2&lt;x&lt;2\\) 에서 \\(\\cos(2x)\\) 의 그래프와 \\(\\frac{1}{20}x+k\\)의 그래프를 겹쳐 그렸을때 두 그래프가 많은 교점을 갖도록 상수 \\(k\\)의 값을 적절히 선택하라. (“교점의 수$$2” 를 점수로 인정, 최대 8점까지 획득가능) – 8점\n#"
  },
  {
    "objectID": "content/mid-python.html#oxford-iii-30점",
    "href": "content/mid-python.html#oxford-iii-30점",
    "title": "중간고사 - Python",
    "section": "3. Oxford-III – 30점",
    "text": "3. Oxford-III – 30점\n\n(1), (2) 를 풀지않고 바로 (3)만 풀어도 정답으로 인정함\n\nOxford-III: // reference\n아래는 이미지 파일명을 불러오는 코드이다.\n\nimport requests\nurl = 'https://raw.githubusercontent.com/guebin/PP2023/main/posts/01_PythonBasic/Oxford-IIIT.txt'\ntxt = requests.get(url).content.decode()\nflist = txt.split()\n\n\nflist[:10]\n\n['Abyssinian_1.jpg',\n 'Abyssinian_10.jpg',\n 'Abyssinian_100.jpg',\n 'Abyssinian_100.mat',\n 'Abyssinian_101.jpg',\n 'Abyssinian_101.mat',\n 'Abyssinian_102.jpg',\n 'Abyssinian_102.mat',\n 'Abyssinian_103.jpg',\n 'Abyssinian_104.jpg']\n\n\n(1) 각 이미지파일명은 아래와 같은 규칙으로 저장되어 있다. – 10점\n\n파일명의 첫글자가 대문자이면 고양이를 의미하고 첫글자가 소문자이면 강아지를 의미한다.\n\n이와 같은 규칙을 명확하게 하기 위하여 고양이일 경우 앞에 파일명의 앞에 “고양이_” 를 붙이고 강아지일 경우 “강아지_”를 붙이고 싶다. 이를 구현하는 코드를 작성하라.\n\n# 출력예시\nflist[:10]\n\n['고양이_Abyssinian_1.jpg',\n '고양이_Abyssinian_10.jpg',\n '고양이_Abyssinian_100.jpg',\n '고양이_Abyssinian_100.mat',\n '고양이_Abyssinian_101.jpg',\n '고양이_Abyssinian_101.mat',\n '고양이_Abyssinian_102.jpg',\n '고양이_Abyssinian_102.mat',\n '고양이_Abyssinian_103.jpg',\n '고양이_Abyssinian_104.jpg']\n\n\n(2) 아래의 딕셔너리를 이용하여 (1)에서 얻은 리스트의 각 원소에 해당하는 종의 이름을 한글로 바꾸는 함수를 구현하라. – 10점\n\nbreed_ko_dict = {\n    'Abyssinian': '아비시니안',\n    'Bengal': '벵갈',\n    'Birman': '버만',\n    'Bombay': '봄베이',\n    'British_Shorthair': '브리티시쇼트헤어',\n    'Egyptian_Mau': '이집션마우',\n    'Maine_Coon': '메인쿤',\n    'Persian': '페르시안',\n    'Ragdoll': '랙돌',\n    'Russian_Blue': '러시안블루',\n    'Siamese': '샴',\n    'Sphynx': '스핑크스',\n    'american_bulldog': '아메리칸불도그',\n    'american_pit_bull_terrier': '아메리칸핏불테리어',\n    'basset_hound': '바셋하운드',\n    'beagle': '비글',\n    'boxer': '복서',\n    'chihuahua': '치와와',\n    'english_cocker_spaniel': '잉글리시코커스패니얼',\n    'english_setter': '잉글리시세터',\n    'german_shorthaired': '저먼쇼트헤어드포인터',\n    'great_pyrenees': '그레이트피레니즈',\n    'havanese': '하바니즈',\n    'japanese_chin': '재패니즈친',\n    'keeshond': '키스혼드',\n    'leonberger': '레온버거',\n    'miniature_pinscher': '미니어처핀셔',\n    'newfoundland': '뉴펀들랜드',\n    'pomeranian': '포메라니안',\n    'pug': '퍼그',\n    'saint_bernard': '세인트버나드',\n    'samoyed': '사모예드',\n    'scottish_terrier': '스코티시테리어',\n    'shiba_inu': '시바이누',\n    'staffordshire_bull_terrier': '스태퍼드셔불테리어',\n    'wheaten_terrier': '휘튼테리어',\n    'yorkshire_terrier': '요크셔테리어'\n}\n\n구현예시는 아래와 같다.\n\n# 출력예시1\nfunc( '강아지_scottish_terrier_98.jpg')\n\n'강아지_스코티시테리어_98.jpg'\n\n\n\n# 출력예시2\nfunc('고양이_British_Shorthair_97.jpg')\n\n'고양이_브리티시쇼트헤어_97.jpg'\n\n\nhint 아래의 코드를 관찰하라.\n\nfname_list = ['강아지', 'english', 'cocker', 'spaniel', '97.jpg']\n\n\nfname_list[1:]\n\n['english', 'cocker', 'spaniel', '97.jpg']\n\n\n\nfname_list[1:][:-1]\n\n['english', 'cocker', 'spaniel']\n\n\n\n\"_\".join(fname_list[1:][:-1])\n\n'english_cocker_spaniel'\n\n\n(3) (2)에서 구현한 함수를 이용하여 flist의 모든 원소를 바꾸어라.\n\n# 출력예시\nflist[::200]\n\n['고양이_아비시니안_1.jpg',\n '고양이_아비시니안_97.jpg',\n '고양이_벵갈_97.jpg',\n '고양이_버만_97.jpg',\n '고양이_봄베이_97.jpg',\n '고양이_브리티시쇼트헤어_97.jpg',\n '고양이_이집션마우_97.jpg',\n '고양이_메인쿤_97.jpg',\n '고양이_페르시안_97.jpg',\n '고양이_랙돌_97.jpg',\n '고양이_러시안블루_97.jpg',\n '고양이_샴_97.jpg',\n '고양이_스핑크스_96.jpg',\n '강아지_아메리칸불도그_97.jpg',\n '강아지_아메리칸핏불테리어_97.jpg',\n '강아지_바셋하운드_97.jpg',\n '강아지_비글_97.jpg',\n '강아지_복서_97.jpg',\n '강아지_치와와_97.jpg',\n '강아지_잉글리시코커스패니얼_97.jpg',\n '강아지_잉글리시세터_97.jpg',\n '강아지_저먼쇼트헤어드포인터_97.jpg',\n '강아지_그레이트피레니즈_97.jpg',\n '강아지_하바니즈_97.jpg',\n '강아지_재패니즈친_97.jpg',\n '강아지_키스혼드_97.jpg',\n '강아지_레온버거_97.jpg',\n '강아지_미니어처핀셔_97.jpg',\n '강아지_뉴펀들랜드_97.jpg',\n '강아지_포메라니안_97.jpg',\n '강아지_퍼그_97.jpg',\n '강아지_세인트버나드_97.jpg',\n '강아지_사모예드_97.jpg',\n '강아지_스코티시테리어_98.jpg',\n '강아지_시바이누_98.jpg',\n '강아지_휘튼테리어_105.jpg',\n '강아지_요크셔테리어_105.jpg']"
  },
  {
    "objectID": "content/02wk-1.html#문제풀이",
    "href": "content/02wk-1.html#문제풀이",
    "title": "02wk-1: [R] – 문제풀이, Bool 자료형과 조건판단, 벡터인덱싱, 조건문과 반복문 // 숙제",
    "section": "1. 문제풀이",
    "text": "1. 문제풀이\n2024수능-19. 함수 \\(f(x) = \\sin \\frac{\\pi}{4} x\\) 할 때, \\(0 &lt; x &lt; 16\\)에서 부등식\n\\[\nf(2+x) f(2-x) &lt; \\frac{1}{4}\n\\]\n을 만족시키는 모든 자연수 \\(x\\)의 값의 합을 구하시오. [3점]\n(풀이1)\n\nf = function(x){\n   sin(pi/4 *x) \n}\n\n\nx=1\nf(2+x)*f(2-x)\n\n[1] 0.5\n\n\n…\n\nx=15\nf(2+x)*f(2-x)\n\n[1] 0.5\n\n\n(풀이2)\n\nf = function(x){\n   sin(pi/4 *x) \n}\n\n\nx = 1:15\nx\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15\n\n\n\nf(2+x) * f(2-x) &lt; 1/4\n\n [1] FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE\n[13] FALSE  TRUE FALSE\n\n\n\nx[f(2+x) * f(2-x) &lt; 1/4]\n\n[1]  2  6 10 14\n\n\n\nsum(x[f(2+x) * f(2-x) &lt; 1/4])\n\n[1] 32\n\n\n(풀이3)\n\ns = 0 \nfor(x in 1:15){\n    if(f(2+x)*f(2-x) &lt; 1/4){\n        s = s+x\n    }\n}\ns\n\n[1] 32"
  },
  {
    "objectID": "content/02wk-1.html#bool-자료형과-조건판단",
    "href": "content/02wk-1.html#bool-자료형과-조건판단",
    "title": "02wk-1: [R] – 문제풀이, Bool 자료형과 조건판단, 벡터인덱싱, 조건문과 반복문 // 숙제",
    "section": "2. Bool 자료형과 조건판단",
    "text": "2. Bool 자료형과 조건판단\n- 예시1\n\n2&gt;3\n\n[1] FALSE\n\n\n- 예시2\n\nx = 1:5\nx\n\n[1] 1 2 3 4 5\n\n\n\nx&gt;3\n\n[1] FALSE FALSE FALSE  TRUE  TRUE\n\n\n\nx&lt;5\n\n[1]  TRUE  TRUE  TRUE  TRUE FALSE\n\n\n\nx&gt;=3\n\n[1] FALSE FALSE  TRUE  TRUE  TRUE\n\n\n\nx&lt;=5\n\n[1] TRUE TRUE TRUE TRUE TRUE\n\n\n\nx==3\n\n[1] FALSE FALSE  TRUE FALSE FALSE"
  },
  {
    "objectID": "content/02wk-1.html#벡터인덱싱",
    "href": "content/02wk-1.html#벡터인덱싱",
    "title": "02wk-1: [R] – 문제풀이, Bool 자료형과 조건판단, 벡터인덱싱, 조건문과 반복문 // 숙제",
    "section": "3. 벡터인덱싱",
    "text": "3. 벡터인덱싱\n\nA. 번호로 뽑는 방법\n\n벡터의 원소에 순서대로 번호를 매겨서 뽑는 방식\n\n# 예제1– 첫 원소를 뽑고싶다.\n\nx&lt;-c(1,2,-2,4,5,-5,6)\nx\n\n[1]  1  2 -2  4  5 -5  6\n\n\n\nx[1]\n\n[1] 1\n\n\n#\n# 예제2 – 세번째 원소를 뽑고싶다.\n\nx&lt;-c(1,2,-2,4,5,-5,6)\nx\n\n[1]  1  2 -2  4  5 -5  6\n\n\n\nx[3]\n\n[1] -2\n\n\n#\n# 예제3 – 첫번째부터 세번째까지의 원소를 뽑고싶다.\n\nx&lt;-c(1,2,-2,4,5,-5,6)\nx\n\n[1]  1  2 -2  4  5 -5  6\n\n\n\nx[1:3]\n\n[1]  1  2 -2\n\n\n\nx[c(1,2,3)]\n\n[1]  1  2 -2\n\n\n#\n# 예제4 – 2,5,6 번째의 원소를 뽑고싶다면?\n\nx&lt;-c(1,2,-2,4,5,-5,6)\nx\n\n[1]  1  2 -2  4  5 -5  6\n\n\n\nx[c(2,5,6)]\n\n[1]  2  5 -5\n\n\n#\n# 예제5 – 3번째 원소를 제외하고 호출\n\nx&lt;-c(1,2,-2,4,5,-5,6)\nx\n\n[1]  1  2 -2  4  5 -5  6\n\n\n\nx[c(1,2,4,5,6,7)]\n\n[1]  1  2  4  5 -5  6\n\n\n\nx[-3]\n\n[1]  1  2  4  5 -5  6\n\n\n# 예제6 – 3,4번째의 원소를 제외하고 호출\n\nx[c(-3,-4)]\n\n[1]  1  2  5 -5  6\n\n\n\nx[-(3:4)]\n\n[1]  1  2  5 -5  6\n\n\n\n\nB. 조건으로 뽑는 방법\n\n어떠한 조건을 주고, 그 조건에 만족하는 원소 (혹은 만족하지 않는 원소)를 뽑는 방식\n\n# 예제1 – 양수의 원소를 뽑는다.\n\nx&lt;-c(1,2,-2,4,5,-5,6)\nx\n\n[1]  1  2 -2  4  5 -5  6\n\n\n\nx&gt;0\n\n[1]  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE\n\n\n\nx[x&gt;0]\n\n[1] 1 2 4 5 6\n\n\n#\n# 예제2 – 3보다 큰 원소를 뽑는 방법\n\nx&lt;-c(1,2,-2,4,5,-5,6)\nx\n\n[1]  1  2 -2  4  5 -5  6\n\n\n\nx[x&gt;3]\n\n[1] 4 5 6\n\n\n#\n# 예제3 – 3번째 원소를 뽑는방법\n\nx&lt;-c(1,2,-2,4,5,-5,6)\nx\n\n[1]  1  2 -2  4  5 -5  6\n\n\n\narr = c(FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE)\narr\n\n[1] FALSE FALSE  TRUE FALSE FALSE FALSE FALSE\n\n\n\nx[arr]\n\n[1] -2\n\n\n#\n# 예제4 – 값이 -2인 원소를 뽑아라.\n\nx&lt;-c(1,2,-2,4,5,-5,6)\nx\n\n[1]  1  2 -2  4  5 -5  6\n\n\n\nx[x == -2]\n\n[1] -2\n\n\n#\n# 예제5 – 값이 -1.5와 가장 가까운 원소를 뽑아라.\n\nx - (-1.5)\n\n[1]  2.5  3.5 -0.5  5.5  6.5 -3.5  7.5\n\n\n\nabs(x - (-1.5))\n\n[1] 2.5 3.5 0.5 5.5 6.5 3.5 7.5\n\n\n\nmin(abs(x - (-1.5)))\n\n[1] 0.5\n\n\n\nabs(x - (-1.5)) == min(abs(x - (-1.5)))\n\n[1] FALSE FALSE  TRUE FALSE FALSE FALSE FALSE\n\n\n\nx[abs(x - (-1.5)) == min(abs(x - (-1.5)))]\n\n[1] -2\n\n\n#\n# 예제6 – 값이 0.5와 가장 가까운 원소를 뽑아라.\n\nx = rnorm(100)\nx\n\n  [1] -0.311304729  0.196110860 -0.191987399  0.632793486  0.407982410\n  [6]  0.864718044 -0.352966617 -1.406632984  0.930323376 -0.211177345\n [11]  0.174489842 -1.038388188 -1.130694552  0.162414718  0.857153460\n [16]  0.405123384  0.026784113 -1.026959835 -0.462168583 -0.375374318\n [21]  1.591985359 -0.064623494  0.478029165 -0.045583822  2.478326033\n [26]  0.331902286  0.499881633  0.119367202  0.007451714  0.725801470\n [31]  0.656933182  0.073287602 -1.415772205 -0.477024858  1.221302265\n [36] -0.398021993  0.546331883 -0.324018146  0.330657882 -0.360152774\n [41]  1.331364124 -0.672527606 -0.437897514  1.105811374 -0.232983468\n [46]  0.793021899 -0.618798438 -0.654156632  1.826482099 -0.409432487\n [51]  1.081860665  0.657260779  0.338851369  0.051188750  0.133293222\n [56] -2.143363730 -0.932413327  1.259017917  0.560828441  0.549731458\n [61]  0.374222028  1.212201517 -0.766937380  0.738233964 -0.213323397\n [66]  0.449868009  0.834543548  1.008085221 -1.548439118 -0.162223345\n [71] -0.294176392 -2.081089322  0.744885524  0.859101047  0.325550519\n [76] -0.504631524 -0.053201153 -2.081642005  0.063341785 -0.032805806\n [81]  0.890016964 -2.011684049  0.615605307  0.611636798 -1.394488649\n [86] -0.665951804 -0.638994227  1.245491526  1.603119132 -1.859557340\n [91] -1.349329167 -0.168900117  1.378241904 -0.663119091  0.016505925\n [96] -0.808047477 -0.008849918 -1.174490950 -0.385805036  0.008856681\n\n\n\nx[abs(x - 0.5) == min(abs(x - 0.5))]\n\n[1] 0.4998816\n\n\n#"
  },
  {
    "objectID": "content/02wk-1.html#조건문과-반복문",
    "href": "content/02wk-1.html#조건문과-반복문",
    "title": "02wk-1: [R] – 문제풀이, Bool 자료형과 조건판단, 벡터인덱싱, 조건문과 반복문 // 숙제",
    "section": "4. 조건문과 반복문",
    "text": "4. 조건문과 반복문\n\nA. 조건문\n- 예시1\n\nx = -3\nif(x&gt;0){\n    print(\"양수\")\n}else if(x&lt;0){\n    print(\"음수\")\n}else{\n    print(\"0\")\n}\n\n[1] \"음수\"\n\n\nx = 0  \n만약, x&gt;0 이면, \n    print(\"양수\")\n그렇지않고, 만약 x&lt;0 이면,\n    print(\"음수\")\n그외의 모든 경우는\n    print(\"0\") \n\n\nB. 반복문\n- 예시1\n\nfor(x in 1:10){\n    print(x)\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n[1] 6\n[1] 7\n[1] 8\n[1] 9\n[1] 10\n\n\n- 예시2\n\nfor(x in 1:10){\n    print(x^2)\n}\n\n[1] 1\n[1] 4\n[1] 9\n[1] 16\n[1] 25\n[1] 36\n[1] 49\n[1] 64\n[1] 81\n[1] 100\n\n\n- 예시3 – \\(1,4,9,\\dots,100\\) 에서 \\(20\\)보다 크고 \\(80\\)보다 작은 수를 출력\n\nfor(x in 1:10){\n    if( (x^2&gt;20)*(x^2&lt;80) ){\n        print(x^2)\n    }\n}\n\n[1] 25\n[1] 36\n[1] 49\n[1] 64"
  },
  {
    "objectID": "content/02wk-1.html#숙제",
    "href": "content/02wk-1.html#숙제",
    "title": "02wk-1: [R] – 문제풀이, Bool 자료형과 조건판단, 벡터인덱싱, 조건문과 반복문 // 숙제",
    "section": "5. 숙제",
    "text": "5. 숙제\n1. 아래와 같은 벡터 x 를 선언하였다고 하자.\n\nset.seed(43053)\nx = rnorm(10)\nx\n\n [1]  0.4553673 -0.7687380  1.1783003  0.4023584 -0.4353551  0.1719379\n [7]  0.7200204 -2.3899837  1.6949456 -0.3216081\n\n\n값이 -0.1 보다 크고 0.5 보다 작은 원소들의 합을 구하여라.\n2. for를 이용하여 1부터 100까지 더하는 코드를 작성하여라."
  },
  {
    "objectID": "content/04wk-1.html#개의-라커",
    "href": "content/04wk-1.html#개의-라커",
    "title": "04wk-1: [R] – 10개의 라커, 매트릭스, 파이프연산자 // 숙제",
    "section": "1. 10개의 라커",
    "text": "1. 10개의 라커\n1. 복도에 10개의 라커가 있다. 복도를 어떤 남자가 10개의 라커 문을 전부 연다. 그리고 나서 짝수 번호의 라커를 전부 닫는다. 그 다음에는 번호가 3의 배수인 라커를 순서대로 찾아다니며 열려 있으면 닫고, 닫혀 있으면 연다. 그 다음에는 번호가 4의 배수인 라커를 순서대로 찾아다니며 열려있으면 닫고, 닫혀있으면 연다. 이러한 방식으로 6회차까지 진행한다. 열린 라커의 문은 몇개가 되겠는가?\n(풀이1)\n\ndoors = rep(TRUE,60)\ndim(doors) = c(10,6)\ndoors\n\n      [,1] [,2] [,3] [,4] [,5] [,6]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE\n\n\n\nfor(n in 2:6){\n    doors[,n] = doors[,n-1]\n    doors[,n][seq(n,10,n)] = !doors[,n-1][seq(n,10,n)]\n}\n\n\ndoors\n\n      [,1]  [,2]  [,3]  [,4]  [,5]  [,6]\n [1,] TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [2,] TRUE FALSE FALSE FALSE FALSE FALSE\n [3,] TRUE  TRUE FALSE FALSE FALSE FALSE\n [4,] TRUE FALSE FALSE  TRUE  TRUE  TRUE\n [5,] TRUE  TRUE  TRUE  TRUE FALSE FALSE\n [6,] TRUE FALSE  TRUE  TRUE  TRUE FALSE\n [7,] TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [8,] TRUE FALSE FALSE  TRUE  TRUE  TRUE\n [9,] TRUE  TRUE FALSE FALSE FALSE FALSE\n[10,] TRUE FALSE FALSE FALSE  TRUE  TRUE\n\n\n\nsum(doors[,6])\n\n[1] 5\n\n\n(풀이2)\n\ndoors = rep(TRUE,10*6)\ndoors\n\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[46] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n\n\ndim(doors) = c(10,6)\ndoors\n\n      [,1] [,2] [,3] [,4] [,5] [,6]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE\n\n\n\nflip &lt;- function(doors, n){\n    doors[seq(n,10,n)] = !doors[seq(n,10,n)]\n    return(doors)\n}\n\n\nfor(n in 2:6){\n    doors[,n] = flip(doors[,n-1],n)\n}\n\n\ndoors\n\n      [,1]  [,2]  [,3]  [,4]  [,5]  [,6]\n [1,] TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [2,] TRUE FALSE FALSE FALSE FALSE FALSE\n [3,] TRUE  TRUE FALSE FALSE FALSE FALSE\n [4,] TRUE FALSE FALSE  TRUE  TRUE  TRUE\n [5,] TRUE  TRUE  TRUE  TRUE FALSE FALSE\n [6,] TRUE FALSE  TRUE  TRUE  TRUE FALSE\n [7,] TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [8,] TRUE FALSE FALSE  TRUE  TRUE  TRUE\n [9,] TRUE  TRUE FALSE FALSE FALSE FALSE\n[10,] TRUE FALSE FALSE FALSE  TRUE  TRUE\n\n\n\nsum(doors[,6])\n\n[1] 5\n\n\n2. 6번라커는 3회차에서 열려있는가 닫혀있는가?\n(풀이)\n\ndoors[6,3]\n\n[1] TRUE\n\n\n3. 8번라커는 6회차가 진행되는 동안 몇번이나 열림상태로 있는가?\n(풀이)\n\ndoors[8,]\n\n[1]  TRUE FALSE FALSE  TRUE  TRUE  TRUE\n\n\n\nsum(doors[8,])\n\n[1] 4\n\n\n4. 열고 닫힘이 가장 빈번한 라커는 몇번인가?\n(풀이1)\n\ndoors[6,]\n\n[1]  TRUE FALSE  TRUE  TRUE  TRUE FALSE\n\n\n\ndoors[6,]*1\n\n[1] 1 0 1 1 1 0\n\n\n\ndiff(doors[6,])\n\n[1] -1  1  0  0 -1\n\n\n\nabs(diff(doors[6,]))\n\n[1] 1 1 0 0 1\n\n\n\nsum(abs(diff(doors[6,])))\n\n[1] 3\n\n\n\ncount = rep(0,10)\nfor(n in 1:10){\n    count[n] &lt;- sum(abs(diff(doors[n,])))\n}\ncount\n\n [1] 0 1 1 2 1 3 0 2 1 2\n\n\n\nwhich.max(count)\n\n[1] 6\n\n\n(풀이2)\n\nlibrary(tidyverse)\n\n\ncount = rep(0,10)\nfor(n in 1:10){\n    count[n] &lt;- doors[n,] %&gt;% diff %&gt;% abs %&gt;% sum \n}\nwhich.max(count)\n\n[1] 6"
  },
  {
    "objectID": "content/04wk-1.html#matrix",
    "href": "content/04wk-1.html#matrix",
    "title": "04wk-1: [R] – 10개의 라커, 매트릭스, 파이프연산자 // 숙제",
    "section": "2. matrix",
    "text": "2. matrix\n\nA. 매트릭스를 선언하는 방법\n- 방법1: 벡터를 만들고, 그것을 row-vector로 해석한뒤 \\(\\to\\) bind\n\nrbind(c(1,2,3,4),c(2,3,4,5))\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    2    3    4    5\n\n\n- 방법2: 벡터를 만들고, 그것을 col-vector로 해석한뒤 \\(\\to\\) bind\n\ncbind(c(1,2,3,4),c(2,3,4,5))\n\n     [,1] [,2]\n[1,]    1    2\n[2,]    2    3\n[3,]    3    4\n[4,]    4    5\n\n\n참고: 만들어진 매트릭스의 차원을 살펴보는 방법\n\nA=rbind(c(1,2,3,4),c(2,3,4,5))\nA\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    2    3    4    5\n\n\n\ndim(A)\n\n[1] 2 4\n\n\n\nA=cbind(c(1,2,3,4),c(2,2,3,4))\nA\n\n     [,1] [,2]\n[1,]    1    2\n[2,]    2    2\n[3,]    3    3\n[4,]    4    4\n\n\n\ndim(A)\n\n[1] 4 2\n\n\n- 방법3: 벡터를 선언하고 dim()을 이용하여 차원을 강제셋팅\n\nA = 1:8\n\n\nA\n\n[1] 1 2 3 4 5 6 7 8\n\n\n\ndim(A)\n\nNULL\n\n\n\ndim(A) &lt;- c(2,4) \n\n\ndim(A)\n\n[1] 2 4\n\n\n\nA\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    3    5    7\n[2,]    2    4    6    8\n\n\n\ndim(A) &lt;- c(4,2)\n\n\nA\n\n     [,1] [,2]\n[1,]    1    5\n[2,]    2    6\n[3,]    3    7\n[4,]    4    8\n\n\n\ndim(A) &lt;- c(3,3)\n\nError: Error in dim(A) &lt;- c(3, 3): dims [product 9] do not match the length of object [8]\n\n\n\n\nB. 매트릭스의 원소를 뽑는 방법\n- 아래와 같은 매트릭스가 있다고 하자.\n\nA=rbind(c(1,2,3,4),c(5,6,7,8),c(9,10,11,12))\nA\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    5    6    7    8\n[3,]    9   10   11   12\n\n\n- 1열을 뽑고싶다.\n\nA[,1] \n\n[1] 1 5 9\n\n\n- 1열,4열을 뽑고싶다.\n\nA[,c(1,4)]\n\n     [,1] [,2]\n[1,]    1    4\n[2,]    5    8\n[3,]    9   12\n\n\n- 2행을 뽑고싶다.\n\nA[2,]\n\n[1] 5 6 7 8\n\n\n- 1행과 2행을 뽑고싶다.\n\nA[c(1,2),]\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    5    6    7    8\n\n\n\nA[1:2,]\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    5    6    7    8\n\n\n- 2행3열의 원소를 뽑고싶다. 즉 (2,3)의 위치에 있는 원소를 뽑고싶다.\n\nA[2,3]\n\n[1] 7\n\n\n- 2열을 제외하고 뽑고 싶다.\n\nA[,-2]\n\n     [,1] [,2] [,3]\n[1,]    1    3    4\n[2,]    5    7    8\n[3,]    9   11   12\n\n\n\n\nC. 매트릭스를 왜 써야하는가?\n- 바둑판구조의 자료형을 표현하기 위해서 = 자료를 바둑판 구조로 저장하기 위해서\n- 자료를 바둑판(2d-array), 나아가 큐브형태(3d-array)로 저장하면 어떠한 이점이 있는가?\n- 자료를 벡터(1d-array)로 저장하면 어떠한 이점이 있는가? 와 같은 질문 - 프로그래밍 구조상의 이점 - 계산상의 이점\n- 자료를 벡터로 관리하면 어떠한 이점이 생기듯이 자료를 매트릭스로 관리해도 이점이 생긴다."
  },
  {
    "objectID": "content/04wk-1.html#파이프연산자",
    "href": "content/04wk-1.html#파이프연산자",
    "title": "04wk-1: [R] – 10개의 라커, 매트릭스, 파이프연산자 // 숙제",
    "section": "3. 파이프연산자",
    "text": "3. 파이프연산자\n\n%&gt;% 연산자 (\\(\\star\\star\\star\\))\n\nnote: 진짜 중요한 문법입니다. 너무편해요.\n\n- 아래는 같은코드이다.\n\nsum(1:10)\n\n[1] 55\n\n\n\n1:10 %&gt;% sum()\n\n[1] 55\n\n\n\n1:10 %&gt;% sum\n\n[1] 55\n\n\n- 아래와 같이 2개의 입력을 받는 함수를 생각하자.\n\nmyfun = function(x,y){\n    x**2+y\n}\n\n- 아래는 같은코드이다.\n\nmyfun(2,3)\n\n[1] 7\n\n\n\n2 %&gt;% myfun(3)\n\n[1] 7\n\n\n- 동일한 논리로 아래도 같은코드이다.\n\nmyfun(3,2) \n\n[1] 11\n\n\n\n3 %&gt;% myfun(2)\n\n[1] 11\n\n\n- 입력이 3개인 함수를 만들자.\n\nmyfun2= function(x,y,z){\n    x**2 + y*z\n}\n\n- 아래는 같은코드이다.\n\nmyfun2(2,1,1)\n\n[1] 5\n\n\n\n2 %&gt;% myfun2(1,1)\n\n[1] 5\n\n\n- 왜 이러한 일을 해야하는가? (합성함수 처리에 유리)\n\nx = c(1,100,2,3,4)\nx\n\n[1]   1 100   2   3   4\n\n\n\nx %&gt;% diff \n\n[1]  99 -98   1   1\n\n\n\nx %&gt;% diff %&gt;% abs %&gt;% sum %&gt;% log %&gt;% sqrt\n\n[1] 2.300718\n\n\n- 개념: x %&gt;% f %&gt;% h %&gt;% g 는 아래가 연산되는것\n\n\\(x \\overset{f}{\\to} f(x) \\overset{h}{\\to} h(f(x)) \\overset{g}{\\to} g(h(f(x)))\\)"
  },
  {
    "objectID": "content/04wk-1.html#hw",
    "href": "content/04wk-1.html#hw",
    "title": "04wk-1: [R] – 10개의 라커, 매트릭스, 파이프연산자 // 숙제",
    "section": "4. HW",
    "text": "4. HW\n복도에 100개의 라커가 있다. 복도를 어떤 남자가 100개의 라커 문을 전부 연다. 그리고 나서 짝수 번호의 라커를 전부 닫는다. 그 다음에는 번호가 3의 배수인 라커를 순서대로 찾아다니며 열려 있으면 닫고, 닫혀 있으면 연다. 그 다음에는 번호가 4의 배수인 라커를 순서대로 찾아다니며 열려있으면 닫고, 닫혀있으면 연다. 이러한 방식으로 50회차까지 진행한다. 48번 라커는 몇번의 열고 닫힘이 있는가?"
  },
  {
    "objectID": "content/13wk-2.html",
    "href": "content/13wk-2.html",
    "title": "13wk-2: [DataFrame] – FIFA22 데이터 // 숙제",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np"
  },
  {
    "objectID": "content/13wk-2.html#fifa22데이터",
    "href": "content/13wk-2.html#fifa22데이터",
    "title": "13wk-2: [DataFrame] – FIFA22 데이터 // 숙제",
    "section": "1. FIFA22데이터",
    "text": "1. FIFA22데이터\n\nA. Data\n- 데이터 load\n\ndf = pd.read_csv('FIFA22_official_data.csv')\ndf\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nSlidingTackle\nGKDiving\nGKHandling\nGKKicking\nGKPositioning\nGKReflexes\nBest Position\nBest Overall Rating\nRelease Clause\nDefensiveAwareness\n\n\n\n\n0\n212198\nBruno Fernandes\n26\nhttps://cdn.sofifa.com/players/212/198/22_60.png\nPortugal\nhttps://cdn.sofifa.com/flags/pt.png\n88\n89\nManchester United\nhttps://cdn.sofifa.com/teams/11/30.png\n...\n65.0\n12.0\n14.0\n15.0\n8.0\n14.0\nCAM\n88.0\n€206.9M\n72.0\n\n\n1\n209658\nL. Goretzka\n26\nhttps://cdn.sofifa.com/players/209/658/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.com/teams/21/30.png\n...\n77.0\n13.0\n8.0\n15.0\n11.0\n9.0\nCM\n87.0\n€160.4M\n74.0\n\n\n2\n176580\nL. Suárez\n34\nhttps://cdn.sofifa.com/players/176/580/22_60.png\nUruguay\nhttps://cdn.sofifa.com/flags/uy.png\n88\n88\nAtlético de Madrid\nhttps://cdn.sofifa.com/teams/240/30.png\n...\n38.0\n27.0\n25.0\n31.0\n33.0\n37.0\nST\n88.0\n€91.2M\n42.0\n\n\n3\n192985\nK. De Bruyne\n30\nhttps://cdn.sofifa.com/players/192/985/22_60.png\nBelgium\nhttps://cdn.sofifa.com/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.com/teams/10/30.png\n...\n53.0\n15.0\n13.0\n5.0\n10.0\n13.0\nCM\n91.0\n€232.2M\n68.0\n\n\n4\n224334\nM. Acuña\n29\nhttps://cdn.sofifa.com/players/224/334/22_60.png\nArgentina\nhttps://cdn.sofifa.com/flags/ar.png\n84\n84\nSevilla FC\nhttps://cdn.sofifa.com/teams/481/30.png\n...\n82.0\n8.0\n14.0\n13.0\n13.0\n14.0\nLB\n84.0\n€77.7M\n80.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n16705\n240558\n18 L. Clayton\n17\nhttps://cdn.sofifa.com/players/240/558/18_60.png\nEngland\nhttps://cdn.sofifa.com/flags/gb-eng.png\n53\n70\nCheltenham Town\nhttps://cdn.sofifa.com/teams/1936/30.png\n...\n12.0\n55.0\n54.0\n52.0\n50.0\n59.0\nGK\n52.0\n€238K\nNaN\n\n\n16706\n262846\n�. Dobre\n20\nhttps://cdn.sofifa.com/players/262/846/22_60.png\nRomania\nhttps://cdn.sofifa.com/flags/ro.png\n53\n63\nFC Academica Clinceni\nhttps://cdn.sofifa.com/teams/113391/30.png\n...\n12.0\n57.0\n52.0\n53.0\n48.0\n58.0\nGK\n53.0\n€279K\n5.0\n\n\n16707\n241317\n21 Xue Qinghao\n19\nhttps://cdn.sofifa.com/players/241/317/21_60.png\nChina PR\nhttps://cdn.sofifa.com/flags/cn.png\n47\n60\nShanghai Shenhua FC\nhttps://cdn.sofifa.com/teams/110955/30.png\n...\n9.0\n49.0\n48.0\n45.0\n38.0\n52.0\nGK\n47.0\n€223K\n21.0\n\n\n16708\n259646\nA. Shaikh\n18\nhttps://cdn.sofifa.com/players/259/646/22_60.png\nIndia\nhttps://cdn.sofifa.com/flags/in.png\n47\n67\nATK Mohun Bagan FC\nhttps://cdn.sofifa.com/teams/113146/30.png\n...\n13.0\n49.0\n41.0\n39.0\n45.0\n49.0\nGK\n47.0\n€259K\n7.0\n\n\n16709\n178453\n07 A. Censori\n17\nhttps://cdn.sofifa.com/players/178/453/07_60.png\nItaly\nhttps://cdn.sofifa.com/flags/it.png\n28\n38\nArezzo\nhttps://cdn.sofifa.com/teams/110907/30.png\n...\nNaN\n7.0\n1.0\n36.0\n6.0\n9.0\nST\n36.0\nNaN\nNaN\n\n\n\n\n16710 rows × 65 columns\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n기본정보\n\n\n\n컬럼명\n설명\n\n\n\n\nID\n선수 고유 식별 번호\n\n\nName\n선수 이름\n\n\nAge\n나이\n\n\nPhoto\n선수 얼굴 사진 (URL 또는 이미지 경로)\n\n\nNationality\n국적\n\n\nFlag\n국가의 국기 이미지 (URL 또는 이미지 경로)\n\n\nClub\n소속 클럽\n\n\nClub Logo\n클럽 로고 이미지 (URL 또는 경로)\n\n\nValue\n시장 가치 (예: €50M 등)\n\n\nWage\n주급 (예: €200K 등)\n\n\nRelease Clause\n바이아웃 금액, 계약 해지에 필요한 금액\n\n\n\n전체능력치 및 잠재력\n\n\n\n\n\n\n\n컬럼명\n설명\n\n\n\n\nOverall\n현재 종합 능력치 (게임 내 평점 기준)\n\n\nPotential\n향후 성장 가능성이 반영된 잠재 평점\n\n\nSpecial\n특수 능력치 총합 (비공식)\n\n\nBest Overall Rating\n가장 높은 능력을 발휘할 수 있는 포지션에서의 최고 평점\n\n\nBest Position\n가장 잘하는 포지션\n\n\n\n플레이관련\n\n\n\n컬럼명\n설명\n\n\n\n\nPreferred Foot\n선호하는 발 (Left/Right)\n\n\nInternational Reputation\n국제적인 명성 (1~5점)\n\n\nWeak Foot\n약발 능력치 (1~5점, 높을수록 양발잡이)\n\n\nSkill Moves\n개인기 기술 수준 (1~5점)\n\n\nWork Rate\n공격/수비 성향 (예: High/Medium)\n\n\nBody Type\n체형 (예: Lean, Normal, Stocky)\n\n\nReal Face\n실제 얼굴 스캔 여부 (Yes/No)\n\n\nPosition\n주 포지션 (예: ST, CM, GK 등)\n\n\nJersey Number\n등번호\n\n\nJoined\n클럽에 입단한 날짜\n\n\nLoaned From\n임대 중인 경우 원 소속 클럽\n\n\nContract Valid Until\n계약 만료 연도\n\n\n\n신체 정보\n\n\n\n컬럼명\n설명\n\n\n\n\nHeight\n키 (cm 또는 ft/in)\n\n\nWeight\n몸무게 (kg 또는 lbs)\n\n\n\n세부능력치\n\n\n\n컬럼명\n설명\n\n\n\n\nCrossing\n크로스 정확도\n\n\nFinishing\n골 결정력\n\n\nHeadingAccuracy\n헤딩 정확도\n\n\nShortPassing\n짧은 패스 정확도\n\n\nVolleys\n발리 슛 능력\n\n\nDribbling\n드리블 능력\n\n\nCurve\n감아차기 능력\n\n\nFKAccuracy\n프리킥 정확도\n\n\nLongPassing\n롱패스 능력\n\n\nBallControl\n볼 컨트롤 능력\n\n\nAcceleration\n가속력\n\n\nSprintSpeed\n최고 속도\n\n\nAgility\n민첩성\n\n\nReactions\n반응 속도\n\n\nBalance\n균형 감각\n\n\nShotPower\n슛 파워\n\n\nJumping\n점프력\n\n\nStamina\n체력\n\n\nStrength\n몸싸움 능력\n\n\nLongShots\n중거리 슛 능력\n\n\nAggression\n공격성\n\n\nInterceptions\n공 차단 능력\n\n\nPositioning\n위치 선정\n\n\nVision\n시야\n\n\nPenalties\n페널티킥 능력\n\n\nComposure\n침착성\n\n\nMarking\n마크 능력\n\n\nStandingTackle\n서서 태클 능력\n\n\nSlidingTackle\n슬라이딩 태클 능력\n\n\nDefensiveAwareness\n수비 인식 (FIFA 22 이후 명시됨)\n\n\nGKDiving\n다이빙\n\n\nGKHandling\n캐치 능력\n\n\nGKKicking\n킥 정확도\n\n\nGKPositioning\n골키퍼 위치 선정\n\n\nGKReflexes\n반사 신경\n\n\n\n\n\n\n\nB. 결측치정리\n\ndf.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 16710 entries, 0 to 16709\nData columns (total 65 columns):\n #   Column                    Non-Null Count  Dtype  \n---  ------                    --------------  -----  \n 0   ID                        16710 non-null  int64  \n 1   Name                      16710 non-null  object \n 2   Age                       16710 non-null  int64  \n 3   Photo                     16710 non-null  object \n 4   Nationality               16710 non-null  object \n 5   Flag                      16710 non-null  object \n 6   Overall                   16710 non-null  int64  \n 7   Potential                 16710 non-null  int64  \n 8   Club                      16446 non-null  object \n 9   Club Logo                 16710 non-null  object \n 10  Value                     16710 non-null  object \n 11  Wage                      16710 non-null  object \n 12  Special                   16710 non-null  int64  \n 13  Preferred Foot            16710 non-null  object \n 14  International Reputation  16710 non-null  float64\n 15  Weak Foot                 16710 non-null  float64\n 16  Skill Moves               16710 non-null  float64\n 17  Work Rate                 16710 non-null  object \n 18  Body Type                 16681 non-null  object \n 19  Real Face                 16681 non-null  object \n 20  Position                  16684 non-null  object \n 21  Jersey Number             16684 non-null  float64\n 22  Joined                    15198 non-null  object \n 23  Loaned From               1132 non-null   object \n 24  Contract Valid Until      16359 non-null  object \n 25  Height                    16710 non-null  object \n 26  Weight                    16710 non-null  object \n 27  Crossing                  16710 non-null  float64\n 28  Finishing                 16710 non-null  float64\n 29  HeadingAccuracy           16710 non-null  float64\n 30  ShortPassing              16710 non-null  float64\n 31  Volleys                   16673 non-null  float64\n 32  Dribbling                 16710 non-null  float64\n 33  Curve                     16673 non-null  float64\n 34  FKAccuracy                16710 non-null  float64\n 35  LongPassing               16710 non-null  float64\n 36  BallControl               16710 non-null  float64\n 37  Acceleration              16710 non-null  float64\n 38  SprintSpeed               16710 non-null  float64\n 39  Agility                   16673 non-null  float64\n 40  Reactions                 16710 non-null  float64\n 41  Balance                   16673 non-null  float64\n 42  ShotPower                 16710 non-null  float64\n 43  Jumping                   16673 non-null  float64\n 44  Stamina                   16710 non-null  float64\n 45  Strength                  16710 non-null  float64\n 46  LongShots                 16710 non-null  float64\n 47  Aggression                16710 non-null  float64\n 48  Interceptions             16702 non-null  float64\n 49  Positioning               16702 non-null  float64\n 50  Vision                    16673 non-null  float64\n 51  Penalties                 16710 non-null  float64\n 52  Composure                 16459 non-null  float64\n 53  Marking                   892 non-null    float64\n 54  StandingTackle            16710 non-null  float64\n 55  SlidingTackle             16673 non-null  float64\n 56  GKDiving                  16710 non-null  float64\n 57  GKHandling                16710 non-null  float64\n 58  GKKicking                 16710 non-null  float64\n 59  GKPositioning             16710 non-null  float64\n 60  GKReflexes                16710 non-null  float64\n 61  Best Position             16710 non-null  object \n 62  Best Overall Rating       16710 non-null  float64\n 63  Release Clause            14961 non-null  object \n 64  DefensiveAwareness        15818 non-null  float64\ndtypes: float64(40), int64(5), object(20)\nmemory usage: 8.3+ MB\n\n\n\ndf.isna().sum().sort_values()\n\nID                        0\nName                      0\nAge                       0\nPhoto                     0\nNationality               0\n                      ...  \nDefensiveAwareness      892\nJoined                 1512\nRelease Clause         1749\nLoaned From           15578\nMarking               15818\nLength: 65, dtype: int64\n\n\n\ndf2 = df.drop([\"Loaned From\", \"Marking\"], axis=1).dropna()\ndf2\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nSlidingTackle\nGKDiving\nGKHandling\nGKKicking\nGKPositioning\nGKReflexes\nBest Position\nBest Overall Rating\nRelease Clause\nDefensiveAwareness\n\n\n\n\n0\n212198\nBruno Fernandes\n26\nhttps://cdn.sofifa.com/players/212/198/22_60.png\nPortugal\nhttps://cdn.sofifa.com/flags/pt.png\n88\n89\nManchester United\nhttps://cdn.sofifa.com/teams/11/30.png\n...\n65.0\n12.0\n14.0\n15.0\n8.0\n14.0\nCAM\n88.0\n€206.9M\n72.0\n\n\n1\n209658\nL. Goretzka\n26\nhttps://cdn.sofifa.com/players/209/658/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.com/teams/21/30.png\n...\n77.0\n13.0\n8.0\n15.0\n11.0\n9.0\nCM\n87.0\n€160.4M\n74.0\n\n\n2\n176580\nL. Suárez\n34\nhttps://cdn.sofifa.com/players/176/580/22_60.png\nUruguay\nhttps://cdn.sofifa.com/flags/uy.png\n88\n88\nAtlético de Madrid\nhttps://cdn.sofifa.com/teams/240/30.png\n...\n38.0\n27.0\n25.0\n31.0\n33.0\n37.0\nST\n88.0\n€91.2M\n42.0\n\n\n3\n192985\nK. De Bruyne\n30\nhttps://cdn.sofifa.com/players/192/985/22_60.png\nBelgium\nhttps://cdn.sofifa.com/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.com/teams/10/30.png\n...\n53.0\n15.0\n13.0\n5.0\n10.0\n13.0\nCM\n91.0\n€232.2M\n68.0\n\n\n4\n224334\nM. Acuña\n29\nhttps://cdn.sofifa.com/players/224/334/22_60.png\nArgentina\nhttps://cdn.sofifa.com/flags/ar.png\n84\n84\nSevilla FC\nhttps://cdn.sofifa.com/teams/481/30.png\n...\n82.0\n8.0\n14.0\n13.0\n13.0\n14.0\nLB\n84.0\n€77.7M\n80.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n16703\n259718\nF. Gebhardt\n19\nhttps://cdn.sofifa.com/players/259/718/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n52\n66\nFC Basel 1893\nhttps://cdn.sofifa.com/teams/896/30.png\n...\n10.0\n53.0\n45.0\n47.0\n52.0\n57.0\nGK\n52.0\n€361K\n6.0\n\n\n16704\n251433\nB. Voll\n20\nhttps://cdn.sofifa.com/players/251/433/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n58\n69\nF.C. Hansa Rostock\nhttps://cdn.sofifa.com/teams/27/30.png\n...\n10.0\n59.0\n60.0\n56.0\n55.0\n61.0\nGK\n58.0\n€656K\n5.0\n\n\n16706\n262846\n�. Dobre\n20\nhttps://cdn.sofifa.com/players/262/846/22_60.png\nRomania\nhttps://cdn.sofifa.com/flags/ro.png\n53\n63\nFC Academica Clinceni\nhttps://cdn.sofifa.com/teams/113391/30.png\n...\n12.0\n57.0\n52.0\n53.0\n48.0\n58.0\nGK\n53.0\n€279K\n5.0\n\n\n16707\n241317\n21 Xue Qinghao\n19\nhttps://cdn.sofifa.com/players/241/317/21_60.png\nChina PR\nhttps://cdn.sofifa.com/flags/cn.png\n47\n60\nShanghai Shenhua FC\nhttps://cdn.sofifa.com/teams/110955/30.png\n...\n9.0\n49.0\n48.0\n45.0\n38.0\n52.0\nGK\n47.0\n€223K\n21.0\n\n\n16708\n259646\nA. Shaikh\n18\nhttps://cdn.sofifa.com/players/259/646/22_60.png\nIndia\nhttps://cdn.sofifa.com/flags/in.png\n47\n67\nATK Mohun Bagan FC\nhttps://cdn.sofifa.com/teams/113146/30.png\n...\n13.0\n49.0\n41.0\n39.0\n45.0\n49.0\nGK\n47.0\n€259K\n7.0\n\n\n\n\n14398 rows × 63 columns\n\n\n\n\n\nC. 포지션 정리\n- 포지션변환\n\ndf3 = df2.copy() \n\n\ndf3['Position'] = [l.split(\"&gt;\")[-1] for l in df2.Position]\ndf3.Position\n\n0        CAM\n1        LDM\n2         RS\n3        RCM\n4         LB\n        ... \n16703    RES\n16704    RES\n16706    RES\n16707    RES\n16708    SUB\nName: Position, Length: 14398, dtype: object\n\n\n- 포지션치환\n\nposition_dict = {\n    'GOALKEEPER':{'GK'},\n    'DEFENDER':{'CB','RCB','LCB','RB','LB','RWB','LWB'},\n    'MIDFIELDER':{'CM','RCM','LCM','CDM','RDM','LDM','CAM','RAM','LAM','RM','LM'},\n    'FORWARD':{'ST','CF','RF','LF','RW','LW','RS','LS'},\n    'SUB':{'SUB'},\n    'RES':{'RES'}\n}\nposition_dict\n\n{'GOALKEEPER': {'GK'},\n 'DEFENDER': {'CB', 'LB', 'LCB', 'LWB', 'RB', 'RCB', 'RWB'},\n 'MIDFIELDER': {'CAM',\n  'CDM',\n  'CM',\n  'LAM',\n  'LCM',\n  'LDM',\n  'LM',\n  'RAM',\n  'RCM',\n  'RDM',\n  'RM'},\n 'FORWARD': {'CF', 'LF', 'LS', 'LW', 'RF', 'RS', 'RW', 'ST'},\n 'SUB': {'SUB'},\n 'RES': {'RES'}}\n\n\n\nposition = \"CAM\"\n[key for key in position_dict if position in position_dict[key]].pop()\n\n'MIDFIELDER'\n\n\n\ndf3['Position2'] = [[key for key in position_dict if position in position_dict[key]].pop() for position in df3.Position]\ndf3.loc[:,['Position','Position2']]\n\n\n\n\n\n\n\n\nPosition\nPosition2\n\n\n\n\n0\nCAM\nMIDFIELDER\n\n\n1\nLDM\nMIDFIELDER\n\n\n2\nRS\nFORWARD\n\n\n3\nRCM\nMIDFIELDER\n\n\n4\nLB\nDEFENDER\n\n\n...\n...\n...\n\n\n16703\nRES\nRES\n\n\n16704\nRES\nRES\n\n\n16706\nRES\nRES\n\n\n16707\nRES\nRES\n\n\n16708\nSUB\nSUB\n\n\n\n\n14398 rows × 2 columns\n\n\n\n\n\nD. 포지션별 능력치 비교\n\ndf.columns\n\nIndex(['ID', 'Name', 'Age', 'Photo', 'Nationality', 'Flag', 'Overall',\n       'Potential', 'Club', 'Club Logo', 'Value', 'Wage', 'Special',\n       'Preferred Foot', 'International Reputation', 'Weak Foot',\n       'Skill Moves', 'Work Rate', 'Body Type', 'Real Face', 'Position',\n       'Jersey Number', 'Joined', 'Loaned From', 'Contract Valid Until',\n       'Height', 'Weight', 'Crossing', 'Finishing', 'HeadingAccuracy',\n       'ShortPassing', 'Volleys', 'Dribbling', 'Curve', 'FKAccuracy',\n       'LongPassing', 'BallControl', 'Acceleration', 'SprintSpeed', 'Agility',\n       'Reactions', 'Balance', 'ShotPower', 'Jumping', 'Stamina', 'Strength',\n       'LongShots', 'Aggression', 'Interceptions', 'Positioning', 'Vision',\n       'Penalties', 'Composure', 'Marking', 'StandingTackle', 'SlidingTackle',\n       'GKDiving', 'GKHandling', 'GKKicking', 'GKPositioning', 'GKReflexes',\n       'Best Position', 'Best Overall Rating', 'Release Clause',\n       'DefensiveAwareness'],\n      dtype='object')\n\n\n- 포지션별로 “Dribbling”, “ShotPower”, “SlidingTackle” 능력의 평균을 구하라.\n\nDribbling의 평균능력치가 가장 좋은 포지션은 어디인가?\nShotPower의 평균능력치가 가장 좋은 포지션은 어디인가?\nSlidingTackle의 평균능력치가 가장 좋은 포지션은 어디인가?\n세 능력치의 평균이 가장 좋은 포지션은?\n\n\ndf3.groupby(\"Position2\")[[\"Dribbling\",\"ShotPower\",\"SlidingTackle\"]].mean()\n\n\n\n\n\n\n\n\nDribbling\nShotPower\nSlidingTackle\n\n\nPosition2\n\n\n\n\n\n\n\nDEFENDER\n57.100000\n55.638605\n66.985116\n\n\nFORWARD\n69.472997\n71.105401\n29.051394\n\n\nGOALKEEPER\n14.996055\n50.512821\n14.353057\n\n\nMIDFIELDER\n69.057130\n67.587294\n53.313985\n\n\nRES\n53.150668\n55.156928\n42.362270\n\n\nSUB\n58.582293\n60.417540\n45.524380\n\n\n\n\n\n\n\n\ndf3.groupby(\"Position2\")[[\"Dribbling\",\"ShotPower\",\"SlidingTackle\"]].mean().mean(axis=1)\n\nPosition2\nDEFENDER      59.907907\nFORWARD       56.543264\nGOALKEEPER    26.620644\nMIDFIELDER    63.319470\nRES           50.223289\nSUB           54.841405\ndtype: float64\n\n\n\n\nF. 주급처리\n\ndf3['Wage'] = [eval(l.replace(\"€\",\"\").replace(\"K\",\"*1000\").replace(\"M\",\"*1000000\")) for l in df2.Wage]\ndf3\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nGKHandling\nGKKicking\nGKPositioning\nGKReflexes\nBest Position\nBest Overall Rating\nRelease Clause\nDefensiveAwareness\nPostion2\nPosition2\n\n\n\n\n0\n212198\nBruno Fernandes\n26\nhttps://cdn.sofifa.com/players/212/198/22_60.png\nPortugal\nhttps://cdn.sofifa.com/flags/pt.png\n88\n89\nManchester United\nhttps://cdn.sofifa.com/teams/11/30.png\n...\n14.0\n15.0\n8.0\n14.0\nCAM\n88.0\n€206.9M\n72.0\nMIDFIELDER\nMIDFIELDER\n\n\n1\n209658\nL. Goretzka\n26\nhttps://cdn.sofifa.com/players/209/658/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.com/teams/21/30.png\n...\n8.0\n15.0\n11.0\n9.0\nCM\n87.0\n€160.4M\n74.0\nMIDFIELDER\nMIDFIELDER\n\n\n2\n176580\nL. Suárez\n34\nhttps://cdn.sofifa.com/players/176/580/22_60.png\nUruguay\nhttps://cdn.sofifa.com/flags/uy.png\n88\n88\nAtlético de Madrid\nhttps://cdn.sofifa.com/teams/240/30.png\n...\n25.0\n31.0\n33.0\n37.0\nST\n88.0\n€91.2M\n42.0\nFORWARD\nFORWARD\n\n\n3\n192985\nK. De Bruyne\n30\nhttps://cdn.sofifa.com/players/192/985/22_60.png\nBelgium\nhttps://cdn.sofifa.com/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.com/teams/10/30.png\n...\n13.0\n5.0\n10.0\n13.0\nCM\n91.0\n€232.2M\n68.0\nMIDFIELDER\nMIDFIELDER\n\n\n4\n224334\nM. Acuña\n29\nhttps://cdn.sofifa.com/players/224/334/22_60.png\nArgentina\nhttps://cdn.sofifa.com/flags/ar.png\n84\n84\nSevilla FC\nhttps://cdn.sofifa.com/teams/481/30.png\n...\n14.0\n13.0\n13.0\n14.0\nLB\n84.0\n€77.7M\n80.0\nDEFENDER\nDEFENDER\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n16703\n259718\nF. Gebhardt\n19\nhttps://cdn.sofifa.com/players/259/718/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n52\n66\nFC Basel 1893\nhttps://cdn.sofifa.com/teams/896/30.png\n...\n45.0\n47.0\n52.0\n57.0\nGK\n52.0\n€361K\n6.0\nRES\nRES\n\n\n16704\n251433\nB. Voll\n20\nhttps://cdn.sofifa.com/players/251/433/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n58\n69\nF.C. Hansa Rostock\nhttps://cdn.sofifa.com/teams/27/30.png\n...\n60.0\n56.0\n55.0\n61.0\nGK\n58.0\n€656K\n5.0\nRES\nRES\n\n\n16706\n262846\n�. Dobre\n20\nhttps://cdn.sofifa.com/players/262/846/22_60.png\nRomania\nhttps://cdn.sofifa.com/flags/ro.png\n53\n63\nFC Academica Clinceni\nhttps://cdn.sofifa.com/teams/113391/30.png\n...\n52.0\n53.0\n48.0\n58.0\nGK\n53.0\n€279K\n5.0\nRES\nRES\n\n\n16707\n241317\n21 Xue Qinghao\n19\nhttps://cdn.sofifa.com/players/241/317/21_60.png\nChina PR\nhttps://cdn.sofifa.com/flags/cn.png\n47\n60\nShanghai Shenhua FC\nhttps://cdn.sofifa.com/teams/110955/30.png\n...\n48.0\n45.0\n38.0\n52.0\nGK\n47.0\n€223K\n21.0\nRES\nRES\n\n\n16708\n259646\nA. Shaikh\n18\nhttps://cdn.sofifa.com/players/259/646/22_60.png\nIndia\nhttps://cdn.sofifa.com/flags/in.png\n47\n67\nATK Mohun Bagan FC\nhttps://cdn.sofifa.com/teams/113146/30.png\n...\n41.0\n39.0\n45.0\n49.0\nGK\n47.0\n€259K\n7.0\nSUB\nSUB\n\n\n\n\n14398 rows × 65 columns\n\n\n\n\n\nG. 주급분석\n- 공격수 포지션의 선수들을 “SlidingTackle”에 따라 4개의 그룹으로 나누어라. “SlidingTackle”능력에 따른 주급차이가 있을까?\n\ndf_forward_only = df3[df3.Postion2 == \"FORWARD\"].copy()\ndf_forward_only\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nGKHandling\nGKKicking\nGKPositioning\nGKReflexes\nBest Position\nBest Overall Rating\nRelease Clause\nDefensiveAwareness\nPostion2\nPosition2\n\n\n\n\n2\n176580\nL. Suárez\n34\nhttps://cdn.sofifa.com/players/176/580/22_60.png\nUruguay\nhttps://cdn.sofifa.com/flags/uy.png\n88\n88\nAtlético de Madrid\nhttps://cdn.sofifa.com/teams/240/30.png\n...\n25.0\n31.0\n33.0\n37.0\nST\n88.0\n€91.2M\n42.0\nFORWARD\nFORWARD\n\n\n29\n158023\nL. Messi\n34\nhttps://cdn.sofifa.com/players/158/023/22_60.png\nArgentina\nhttps://cdn.sofifa.com/flags/ar.png\n93\n93\nParis Saint-Germain\nhttps://cdn.sofifa.com/teams/73/30.png\n...\n11.0\n15.0\n14.0\n8.0\nRW\n93.0\n€144.3M\n20.0\nFORWARD\nFORWARD\n\n\n31\n205632\nL. Ocampos\n26\nhttps://cdn.sofifa.com/players/205/632/22_60.png\nArgentina\nhttps://cdn.sofifa.com/flags/ar.png\n83\n83\nSevilla FC\nhttps://cdn.sofifa.com/teams/481/30.png\n...\n8.0\n15.0\n12.0\n7.0\nLW\n83.0\n€83M\n58.0\nFORWARD\nFORWARD\n\n\n33\n188545\nR. Lewandowski\n32\nhttps://cdn.sofifa.com/players/188/545/22_60.png\nPoland\nhttps://cdn.sofifa.com/flags/pl.png\n92\n92\nFC Bayern München\nhttps://cdn.sofifa.com/teams/21/30.png\n...\n6.0\n12.0\n8.0\n10.0\nST\n92.0\n€197.2M\n35.0\nFORWARD\nFORWARD\n\n\n34\n209331\nM. Salah\n29\nhttps://cdn.sofifa.com/players/209/331/22_60.png\nEgypt\nhttps://cdn.sofifa.com/flags/eg.png\n89\n89\nLiverpool\nhttps://cdn.sofifa.com/teams/9/30.png\n...\n14.0\n9.0\n11.0\n14.0\nRW\n89.0\n€186.9M\n38.0\nFORWARD\nFORWARD\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n14327\n257495\nL. Lawrie-Lattanzio\n19\nhttps://cdn.sofifa.com/players/257/495/22_60.png\nAustralia\nhttps://cdn.sofifa.com/flags/au.png\n55\n70\nMelbourne Victory\nhttps://cdn.sofifa.com/teams/111397/30.png\n...\n11.0\n13.0\n10.0\n7.0\nST\n57.0\n€563K\n19.0\nFORWARD\nFORWARD\n\n\n14335\n261948\nA. Parsons\n21\nhttps://cdn.sofifa.com/players/261/948/22_60.png\nAustralia\nhttps://cdn.sofifa.com/flags/au.png\n58\n72\nBrisbane Roar\nhttps://cdn.sofifa.com/teams/111395/30.png\n...\n13.0\n13.0\n11.0\n10.0\nRW\n58.0\n€938K\n22.0\nFORWARD\nFORWARD\n\n\n14337\n240208\nR. Bennett\n30\nhttps://cdn.sofifa.com/players/240/208/22_60.png\nEngland\nhttps://cdn.sofifa.com/flags/gb-eng.png\n60\n60\nSutton United\nhttps://cdn.sofifa.com/teams/110799/30.png\n...\n11.0\n10.0\n6.0\n9.0\nST\n60.0\n€420K\n21.0\nFORWARD\nFORWARD\n\n\n14550\n259626\nC. Offor\n21\nhttps://cdn.sofifa.com/players/259/626/22_60.png\nNigeria\nhttps://cdn.sofifa.com/flags/ng.png\n59\n73\nChicago Fire Football Club\nhttps://cdn.sofifa.com/teams/693/30.png\n...\n10.0\n6.0\n11.0\n14.0\nST\n61.0\n€1.1M\n15.0\nFORWARD\nFORWARD\n\n\n14553\n257060\nL. Jastremski\n20\nhttps://cdn.sofifa.com/players/257/060/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n61\n75\nViktoria Köln\nhttps://cdn.sofifa.com/teams/110645/30.png\n...\n6.0\n8.0\n10.0\n9.0\nST\n63.0\n€1.7M\n10.0\nFORWARD\nFORWARD\n\n\n\n\n1148 rows × 65 columns\n\n\n\n\ndf_forward_only.assign(\n    SlidingTackle_qcut = pd.qcut(df_forward_only.SlidingTackle,4)\n).groupby(\"SlidingTackle_qcut\")[\"Wage\"].mean()\n\n/tmp/ipykernel_665326/3495858949.py:3: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n  ).groupby(\"SlidingTackle_qcut\")[\"Wage\"].mean()\n\n\nSlidingTackle_qcut\n(9.999, 20.0]    13129.206349\n(20.0, 26.0]     15543.962264\n(26.0, 36.0]     19396.523179\n(36.0, 74.0]     18600.751880\nName: Wage, dtype: float64\n\n\n- 공격수 포지션의 선수들을 “ShotPower”의 능력에 따라 4개의 그룹으로 나누어라. “ShotPower”능력에 따른 주급차이가 있을까?\n\ndf_forward_only.assign(\n    ShotPower_qcut = pd.qcut(df_forward_only.ShotPower,4)\n).groupby(\"ShotPower_qcut\")[\"Wage\"].mean()\n\n/tmp/ipykernel_665326/769531155.py:3: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n  ).groupby(\"ShotPower_qcut\")[\"Wage\"].mean()\n\n\nShotPower_qcut\n(39.999, 66.0]     3736.569579\n(66.0, 71.0]       6737.321429\n(71.0, 77.0]      14354.560261\n(77.0, 94.0]      46081.349206\nName: Wage, dtype: float64"
  },
  {
    "objectID": "content/13wk-2.html#평균처리",
    "href": "content/13wk-2.html#평균처리",
    "title": "13wk-2: [DataFrame] – FIFA22 데이터 // 숙제",
    "section": "2. 평균처리",
    "text": "2. 평균처리\n- numpy\n\nX = np.array([[1,2,3],[1,2,4]])\nX\n\narray([[1, 2, 3],\n       [1, 2, 4]])\n\n\n\nX.sum()\n\nnp.int64(13)\n\n\n\nX.sum(axis=0)\n\narray([2, 4, 7])\n\n\n\nX.sum(axis=1)\n\narray([6, 7])\n\n\n- df\n\nX = pd.DataFrame(X)\nX\n\n\n\n\n\n\n\n\n0\n1\n2\n\n\n\n\n0\n1\n2\n3\n\n\n1\n1\n2\n4\n\n\n\n\n\n\n\n\nX.sum()\n\n0    2\n1    4\n2    7\ndtype: int64\n\n\n\nX.sum(axis=0)\n\n0    2\n1    4\n2    7\ndtype: int64\n\n\n\nX.sum(axis=1)\n\n0    6\n1    7\ndtype: int64"
  },
  {
    "objectID": "content/13wk-2.html#숙제",
    "href": "content/13wk-2.html#숙제",
    "title": "13wk-2: [DataFrame] – FIFA22 데이터 // 숙제",
    "section": "3. 숙제",
    "text": "3. 숙제\n\ndf = pd.read_csv('FIFA22_official_data.csv').drop([\"Loaned From\", \"Marking\"], axis=1).dropna()\ndf\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nSlidingTackle\nGKDiving\nGKHandling\nGKKicking\nGKPositioning\nGKReflexes\nBest Position\nBest Overall Rating\nRelease Clause\nDefensiveAwareness\n\n\n\n\n0\n212198\nBruno Fernandes\n26\nhttps://cdn.sofifa.com/players/212/198/22_60.png\nPortugal\nhttps://cdn.sofifa.com/flags/pt.png\n88\n89\nManchester United\nhttps://cdn.sofifa.com/teams/11/30.png\n...\n65.0\n12.0\n14.0\n15.0\n8.0\n14.0\nCAM\n88.0\n€206.9M\n72.0\n\n\n1\n209658\nL. Goretzka\n26\nhttps://cdn.sofifa.com/players/209/658/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.com/teams/21/30.png\n...\n77.0\n13.0\n8.0\n15.0\n11.0\n9.0\nCM\n87.0\n€160.4M\n74.0\n\n\n2\n176580\nL. Suárez\n34\nhttps://cdn.sofifa.com/players/176/580/22_60.png\nUruguay\nhttps://cdn.sofifa.com/flags/uy.png\n88\n88\nAtlético de Madrid\nhttps://cdn.sofifa.com/teams/240/30.png\n...\n38.0\n27.0\n25.0\n31.0\n33.0\n37.0\nST\n88.0\n€91.2M\n42.0\n\n\n3\n192985\nK. De Bruyne\n30\nhttps://cdn.sofifa.com/players/192/985/22_60.png\nBelgium\nhttps://cdn.sofifa.com/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.com/teams/10/30.png\n...\n53.0\n15.0\n13.0\n5.0\n10.0\n13.0\nCM\n91.0\n€232.2M\n68.0\n\n\n4\n224334\nM. Acuña\n29\nhttps://cdn.sofifa.com/players/224/334/22_60.png\nArgentina\nhttps://cdn.sofifa.com/flags/ar.png\n84\n84\nSevilla FC\nhttps://cdn.sofifa.com/teams/481/30.png\n...\n82.0\n8.0\n14.0\n13.0\n13.0\n14.0\nLB\n84.0\n€77.7M\n80.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n16703\n259718\nF. Gebhardt\n19\nhttps://cdn.sofifa.com/players/259/718/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n52\n66\nFC Basel 1893\nhttps://cdn.sofifa.com/teams/896/30.png\n...\n10.0\n53.0\n45.0\n47.0\n52.0\n57.0\nGK\n52.0\n€361K\n6.0\n\n\n16704\n251433\nB. Voll\n20\nhttps://cdn.sofifa.com/players/251/433/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n58\n69\nF.C. Hansa Rostock\nhttps://cdn.sofifa.com/teams/27/30.png\n...\n10.0\n59.0\n60.0\n56.0\n55.0\n61.0\nGK\n58.0\n€656K\n5.0\n\n\n16706\n262846\n�. Dobre\n20\nhttps://cdn.sofifa.com/players/262/846/22_60.png\nRomania\nhttps://cdn.sofifa.com/flags/ro.png\n53\n63\nFC Academica Clinceni\nhttps://cdn.sofifa.com/teams/113391/30.png\n...\n12.0\n57.0\n52.0\n53.0\n48.0\n58.0\nGK\n53.0\n€279K\n5.0\n\n\n16707\n241317\n21 Xue Qinghao\n19\nhttps://cdn.sofifa.com/players/241/317/21_60.png\nChina PR\nhttps://cdn.sofifa.com/flags/cn.png\n47\n60\nShanghai Shenhua FC\nhttps://cdn.sofifa.com/teams/110955/30.png\n...\n9.0\n49.0\n48.0\n45.0\n38.0\n52.0\nGK\n47.0\n€223K\n21.0\n\n\n16708\n259646\nA. Shaikh\n18\nhttps://cdn.sofifa.com/players/259/646/22_60.png\nIndia\nhttps://cdn.sofifa.com/flags/in.png\n47\n67\nATK Mohun Bagan FC\nhttps://cdn.sofifa.com/teams/113146/30.png\n...\n13.0\n49.0\n41.0\n39.0\n45.0\n49.0\nGK\n47.0\n€259K\n7.0\n\n\n\n\n14398 rows × 63 columns\n\n\n\n수비수 포지션의 선수들을 “SlidingTackle”의 능력에 따라 4개의 그룹으로 나누어라. “SlidingTackle”능력에 따른 주급차이가 있을까?\n(풀이)\n\ndf = pd.read_csv('FIFA22_official_data.csv').drop([\"Loaned From\", \"Marking\"], axis=1).dropna()\ndf['Position'] = [l.split(\"&gt;\")[-1] for l in df.Position]\nposition_dict = {\n    'GOALKEEPER':{'GK'},\n    'DEFENDER':{'CB','RCB','LCB','RB','LB','RWB','LWB'},\n    'MIDFIELDER':{'CM','RCM','LCM','CDM','RDM','LDM','CAM','RAM','LAM','RM','LM'},\n    'FORWARD':{'ST','CF','RF','LF','RW','LW','RS','LS'},\n    'SUB':{'SUB'},\n    'RES':{'RES'}\n}\ndf['Position_Group'] = [[k for k,v in position_dict.items() if l in v].pop() for l in df.Position]\ndf['Wage'] = [eval(l.replace(\"€\",\"\").replace(\"K\",\"*1000\").replace(\"M\",\"*1000000\")) for l in df.Wage]\ndf_defender_only = df[df.Position_Group == \"DEFENDER\"].copy()\ndf_defender_only['SlidingTackleCut'] = pd.qcut(df_defender_only['SlidingTackle'], q=4)\ndf_defender_only.groupby(\"SlidingTackleCut\")['Wage'].mean()\n\n/tmp/ipykernel_715692/1200313837.py:15: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n  df_defender_only.groupby(\"SlidingTackleCut\")['Wage'].mean()\n\n\nSlidingTackleCut\n(18.999, 62.0]     2466.697248\n(62.0, 67.0]       5040.220820\n(67.0, 71.0]      10369.009217\n(71.0, 92.0]      33982.681564\nName: Wage, dtype: float64\n\n\n\n능력에 따른 주급차이가있음"
  },
  {
    "objectID": "content/fin-R.html",
    "href": "content/fin-R.html",
    "title": "기말고사 - R // 예상문제",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "content/fin-R.html#mpg",
    "href": "content/fin-R.html#mpg",
    "title": "기말고사 - R // 예상문제",
    "section": "1. mpg",
    "text": "1. mpg\n\ndf = mpg\nnames(df)\n\n [1] \"manufacturer\" \"model\"        \"displ\"        \"year\"         \"cyl\"         \n [6] \"trans\"        \"drv\"          \"cty\"          \"hwy\"          \"fl\"          \n[11] \"class\"       \n\n\n(1) 주어진 df를 활용하여 아래의 같은 그림을 그려라\nhint: 점의 크기는 3, 투명도는 0.5\n\n# 시각화예시 \n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n(풀이)\nggplot(df) + \ngeom_point(aes(x=displ, y=hwy,color=drv), size=3, alpha=0.5) +\ngeom_smooth(aes(x=displ, y=hwy),color=\"black\", lty=2)"
  },
  {
    "objectID": "content/fin-R.html#fifa22",
    "href": "content/fin-R.html#fifa22",
    "title": "기말고사 - R // 예상문제",
    "section": "2. FIFA22",
    "text": "2. FIFA22\n(1) 주어진 자료를 활용하여 아래의 그림을 그려라.\n\ndf = read.csv(\"FIFA22_tidy.csv\") %&gt;% filter(Position_Group %in% c(\"FORWARD\", \"DEFENDER\"))\n\n\n# 시각화예시\n\n\n\n\n\n\n\n\n(풀이)\nggplot(df) + geom_point(aes(x=ShotPower,y=SlidingTackle,color=Position_Group,size=Wage, alpha=Wage))\n(2) 주어진 그림을 올바로 해석한 사람은?\n\n우주: 전체적으로 보면 파란 점들(공격수)은 오른쪽 아래, 빨간 점들(수비수)은 왼쪽 위에 몰려 있어. 슛 파워 중심의 공격수, 태클 중심의 수비수로 역할 특성에 따라 분포가 확실히 구분되는 느낌이야.\n다호: 왼쪽 하단엔 거의 점이 없어. 그 말은 공격과 수비 능력을 모두 잘하는 선수는 드물다는 뜻인 것 같아.\n신혜: 수비수는 슬라이딩 태클 능력이 70 이상인 경우가 많은데, 그런 점들 중에 큰 점이 꽤 많아. 즉, 슬라이딩 태클 수치가 높을수록 연봉도 높은 경향이 있는 것 같아. 그 점들 대부분 빨간색이니까 수비수 맞고.\n루이: 공격수는 슬라이딩 태클 점수가 30~40대인 경우가 대부분이고, 슛 파워가 80 이상인 선수들 중에 큰 점이 많아. 즉, 슛 파워가 높은 공격수가 고연봉자라는 해석이 가능하다는 거지.\n\n\n답: 우주, 신혜, 루이"
  },
  {
    "objectID": "content/07wk-2.html#딕셔너리",
    "href": "content/07wk-2.html#딕셔너리",
    "title": "07wk-2: [Python] – 딕셔너리 // 숙제",
    "section": "1. 딕셔너리",
    "text": "1. 딕셔너리\n\nA. 선언\n- 방법1: 가장 일반적\n\ndct = {'guebin':49, 'hanni':80}\ndct\n\n{'guebin': 49, 'hanni': 80}\n\n\n- 방법2: dict() 이용\n\ndct = dict(guebin=49, hanni=80)\ndct\n\n{'guebin': 49, 'hanni': 80}\n\n\n- 방법3: 중첩된 리스트를 만든 뒤에 형태변환\n\n_lst = [['guebin',49],['hanni',80]]\n_lst \n\n[['guebin', 49], ['hanni', 80]]\n\n\n\ndict(_lst)\n\n{'guebin': 49, 'hanni': 80}\n\n\n- 방법4: 중첩된 튜플을 만든 뒤에 형태변환\n\n_tpl = ('guebin',49), ('hanni',80)\n_tpl\n\n(('guebin', 49), ('hanni', 80))\n\n\n\ndict(_tpl)\n\n{'guebin': 49, 'hanni': 80}\n\n\n\n\nB. 원소추출\n- 원소의 위치로 추출할 수 없고, key로 추출해야 한다.\n\ndct = {'guebin':49, 'hanni':80}\ndct\n\n{'guebin': 49, 'hanni': 80}\n\n\nguebin의 점수를 추출하고 싶다면?\n\ndct['guebin']\n\n49\n\n\n- 만약에 dict가 아니라 list로 정보를 저장했다면?\n(예제) 아래와 같은 리스트에서 guebin의 점수를 추출하고 싶다면?\n\nlst=[['guebin',49],['hanni',80]]\nlst\n\n[['guebin', 49], ['hanni', 80]]\n\n\n(풀이1)\n\nlst[0][1] # guebin의 점수를 출력하란 의미\n\n49\n\n\n(풀이2)\n\n[score for name,score in lst if name == 'guebin']\n\n[49]\n\n\n- ’guebin’의 점수를 추출하는 코드 비교\n\ndct['guebin'] # 코드1: 단순하고, 가독성있음\n\n49\n\n\n\nlst[0][1] # 코드2: 단순하지만, 가독성이 있는건 아님\n\n49\n\n\n\n[score for name,score in lst if name=='guebin' ] # 코드3: 단순하지 않지만, 가독성은 있음\n\n[49]\n\n\n\n\nC. 원소추가, 변경, 삭제\n\ndct={'guebin':49, 'hanni':80}\ndct\n\n{'guebin': 49, 'hanni': 80}\n\n\n- 원소에 접근: guebin의 점수 출력\n\ndct['guebin']\n\n49\n\n\n- 추가: hynn학생의 점수를 추가\n\ndct\n\n{'guebin': 49, 'hanni': 80}\n\n\n\ndct['hynn'] = 99 \n\n\ndct\n\n{'guebin': 49, 'hanni': 80, 'hynn': 99}\n\n\n- 변경: hanni의 점수를 변경\n\ndct['hanni'] = 100\n\n\ndct\n\n{'guebin': 49, 'hanni': 100, 'hynn': 99}\n\n\n\n\nD. 연산\n- in연산 정도만 기억해도 좋음\n\ndct = {'guebin':49, 'hanni':80} \ndct\n\n{'guebin': 49, 'hanni': 80}\n\n\n\n'guebin' in dct\n\nTrue\n\n\n\n'hanni' in dct\n\nTrue\n\n\n\n'hynn' in dct\n\nFalse\n\n\n- in은 사실 다른자료형도 가능했음\n(관찰1)\n\n'a' in 'guebin' \n\nFalse\n\n\n\n'b' in 'guebin' \n\nTrue\n\n\n\n'c' in 'guebin' \n\nFalse\n\n\n(관찰2)\n\ntpl = 1,2,3 \ntpl\n\n(1, 2, 3)\n\n\n\n1 in tpl\n\nTrue\n\n\n\n4 in tpl\n\nFalse\n\n\n(관찰3)\n\nlst = [['guebin',49],['hanni',80],['hynn',99]] \nlst\n\n[['guebin', 49], ['hanni', 80], ['hynn', 99]]\n\n\n\n['guebin',49] in lst\n\nTrue\n\n\n- in연산자가 dict형에 사용되면 key를 기준으로 True, False를 판단한다.\n\n\nE. 딕셔너리 특수기능\n(pop)\n\ndct = {'guebin':49, 'hanni':80} \ndct.pop('hanni')\n\n80\n\n\n\ndct\n\n{'guebin': 49}\n\n\n(get)\n\ndct = {'guebin':49, 'hanni':80} \ndct\n\n{'guebin': 49, 'hanni': 80}\n\n\n\ndct.get('guebin') \n\n49\n\n\n아래와 같은 기능\n\ndct['guebin']\n\n49\n\n\n미묘한 차이점이 존재함\n\ndct['hynn'] # hynn이 없어서 키에러 출력, 그런 key는 없다.. \n\n\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\nCell In[102], line 1\n----&gt; 1 dct['hynn'] # hynn이 없어서 키에러 출력, 그런 key는 없다.. \n\nKeyError: 'hynn'\n\n\n\n\ndct.get('hynn') # hynn이 없으면 아무것도 출력안함 \n\n(keys,values,items)\n- .keys()는 딕셔너리의 키를 리턴한다.\n\ndct = {'guebin':49, 'hanni':80} \ndct\n\n{'guebin': 49, 'hanni': 80}\n\n\n\ndct.keys()\n\ndict_keys(['guebin', 'hanni'])\n\n\n\nkeys=dct.keys()\nkeys\n\ndict_keys(['guebin', 'hanni'])\n\n\n- .values()는 딕셔너리의 값들을 리턴한다.\n\nvalues = dct.values()\nvalues \n\ndict_values([49, 80])\n\n\n\ntype(values)\n\ndict_values\n\n\n\nlist(values)\n\n[49, 80]\n\n\n- .items()는 딕셔너리의 (키,값)을 리턴한다.\n\nitems = dct.items()\nitems \n\ndict_items([('guebin', 49), ('hanni', 80)])\n\n\n\ntype(items)\n\ndict_items\n\n\n\nlist(items)\n\n[('guebin', 49), ('hanni', 80)]\n\n\n\n\nF. for문과 dict (\\(\\star\\))\n\ndct = {'guebin': 49, 'hanni': 80}\ndct\n\n{'guebin': 49, 'hanni': 80}\n\n\n(예시1)\n\nfor k in dct.keys():\n    print(k)\n\nguebin\nhanni\n\n\n\nfor k in dct:\n    print(k)\n\nguebin\nhanni\n\n\n\nfor k in dct:\n    print(k)\n\nguebin\nhanni\n\n\n(예시2)\n\nfor v in dct.values():\n    print(v)\n\n49\n80\n\n\n(예시3)\n\nfor i in dct.items():\n    print(i)\n\n('guebin', 49)\n('hanni', 80)\n\n\n(예시4)\n\nfor k,v in dct.items(): # 다중할당\n    print(k,v)\n\nguebin 49\nhanni 80\n\n\n(예시5) – {}의 중간고사 점수는 {}점 입니다.\n\nfor k,v in dct.items():\n    print(f\"{k}의 중간고사 점수는 {v}점 입니다.\")\n\nguebin의 중간고사 점수는 49점 입니다.\nhanni의 중간고사 점수는 80점 입니다.\n\n\n\n\nG. dict에서 key혹은 value만 뽑아내기\n- 예제: 아래의 dict에서 key만 뽑아내고 싶다.\n\ndct = {'guebin':49, 'hanni':80} \n\n(풀이1)\n\nlist(dct)\n\n['guebin', 'hanni']\n\n\n(풀이2)\n\nlist(dct.keys())\n\n['guebin', 'hanni']\n\n\n(풀이3)\n\n[k for k in dct]\n\n['guebin', 'hanni']\n\n\n(풀이4)\n\n[k for k,v in dct.items()]\n\n['guebin', 'hanni']\n\n\n- 예제: 아래의 dict에서 value만 뽑아내고 싶다.\n\ndct = {'guebin':49, 'hanni':80} \n\n(풀이1)\n\nlist(dct.values())\n\n[49, 80]\n\n\n(풀이2)\n\n[dct[k] for k in dct]\n\n[49, 80]\n\n\n(풀이3)\n\n[v for v in dct.values()]\n\n[49, 80]\n\n\n(풀이4)\n\n[v for k,v in dct.items()]\n\n[49, 80]"
  },
  {
    "objectID": "content/07wk-2.html#숙제",
    "href": "content/07wk-2.html#숙제",
    "title": "07wk-2: [Python] – 딕셔너리 // 숙제",
    "section": "2. 숙제",
    "text": "2. 숙제\n아래는 학생들의 성적을 기록한 것이다.\n\ndct = {'iu': 50, 'guebin':20 , 'hanni':90, 'hodong':95}\n\n(1) 채점실수로 모든 학생들의 점수를 5점씩 감점하고 싶다. 5점감점된 점수들을 정리하는 아래와 같은 dictionary를 만드는 코드를 제시하라. (dict 컴프리헨션이용)\n(풀이)\n\n{k:(v-5) for k,v in dct.items()}\n\n{'iu': 45, 'guebin': 15, 'hanni': 85, 'hodong': 90}\n\n\n(2) 성적이 50점 이상인 학생들을 출력하는 코드를 제시하라.\n\nfor k,v in dct.items():\n    if v&gt; 50:\n        print(k)\n\nhanni\nhodong\n\n\n\n[k for k,v in dct.items() if v&gt;50]\n\n['hanni', 'hodong']"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IAB프로그램 (2025)",
    "section": "",
    "text": "실습\n\nhttps://guebin.github.io/IAB2025-Play\n\n질문하는 방법\n\n이메일: guebin@jbnu.ac.kr\n직접방문: 자연과학대학 본관 205호\nZoom: 이메일로 미리 시간을 정할 것\n카카오톡: http://pf.kakao.com/_txeIFG/chat\n\n강의노트\n\n\n\n\n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nJun 13, 2025\n\n\n15wk-1: [시각화] – mpg자료 시각화\n\n\n최규빈 \n\n\n\n\nJun 5, 2025\n\n\n14wk-2: [시각화] – 훌륭한 시각화, 타이타닉\n\n\n최규빈 \n\n\n\n\nMay 29, 2025\n\n\n13wk-2: [DataFrame] – FIFA22 데이터 // 숙제\n\n\n최규빈 \n\n\n\n\nMay 27, 2025\n\n\n13wk-1: [DataFrame] – Pandas 할당, 그룹화 연산 // 숙제\n\n\n최규빈 \n\n\n\n\nMay 22, 2025\n\n\n12wk-2: [DataFrame] – FIFA23 데이터 // 숙제\n\n\n최규빈 \n\n\n\n\nMay 20, 2025\n\n\n12wk-1: [DataFrame] – Pandas 행과 열의 선택 (2) // 숙제\n\n\n최규빈 \n\n\n\n\nMay 15, 2025\n\n\n11wk-2: [DataFrame] – 타이타닉, Pandas 행과 열의 선택 (1) // 숙제\n\n\n최규빈 \n\n\n\n\nMay 13, 2025\n\n\n11wk-1: 중간고사 해설\n\n\n최규빈 \n\n\n\n\nMay 8, 2025\n\n\n기말고사 - R // 예상문제\n\n\n최규빈 \n\n\n\n\nMay 8, 2025\n\n\n중간고사 - Python\n\n\n최규빈 \n\n\n\n\nMay 8, 2025\n\n\n중간고사 - R\n\n\n최규빈 \n\n\n\n\nMay 8, 2025\n\n\n기말고사 - Python // 예상문제\n\n\n최규빈 \n\n\n\n\nApr 29, 2025\n\n\n09wk-1: [Python] – numpy 중요문법, 시각화\n\n\n최규빈 \n\n\n\n\nApr 24, 2025\n\n\n08wk-2: [Python] – R복습 / numpy intro\n\n\n최규빈 \n\n\n\n\nApr 22, 2025\n\n\n08wk-1: [Python] – 네오와 프로도, 딕셔너리를 이용한 치환 // 숙제\n\n\n최규빈 \n\n\n\n\nApr 15, 2025\n\n\n07wk-2: [Python] – 딕셔너리 // 숙제\n\n\n최규빈 \n\n\n\n\nApr 15, 2025\n\n\n07wk-1: [Python] – Oxford-III // 숙제\n\n\n최규빈 \n\n\n\n\nApr 11, 2025\n\n\n06wk-2: [Python] – 잡기술, 집합, 연습문제 // 숙제\n\n\n최규빈 \n\n\n\n\nApr 8, 2025\n\n\n06wk-1: [Python] – tuple // 숙제\n\n\n최규빈 \n\n\n\n\nApr 3, 2025\n\n\n05wk-2: [Python] – str, list // 숙제\n\n\n최규빈 \n\n\n\n\nApr 1, 2025\n\n\n05wk-1: [Python] – int, float, bool, str // 숙제\n\n\n최규빈 \n\n\n\n\nMar 27, 2025\n\n\n04wk-2: [R] – 벡터와 행렬의 결합, 벡터관련 연산, 자료의 변환 // 숙제\n\n\n최규빈 \n\n\n\n\nMar 25, 2025\n\n\n04wk-1: [R] – 10개의 라커, 매트릭스, 파이프연산자 // 숙제\n\n\n최규빈 \n\n\n\n\nMar 20, 2025\n\n\n03wk-2: [R] – if, if-else, if-elseif-else // 숙제\n\n\n최규빈 \n\n\n\n\nMar 18, 2025\n\n\n03wk-1: [R] – 문제풀이 (아홉개의 공, 100개의 라커) // 숙제\n\n\n최규빈 \n\n\n\n\nMar 13, 2025\n\n\n02wk-2: [R] – 문제풀이 (벡터인덱싱, if, for 연습) // 숙제\n\n\n최규빈 \n\n\n\n\nMar 11, 2025\n\n\n02wk-1: [R] – 문제풀이, Bool 자료형과 조건판단, 벡터인덱싱, 조건문과 반복문 // 숙제\n\n\n최규빈 \n\n\n\n\nMar 6, 2025\n\n\n01wk-2: [R] – 문제풀이, 변수 이름 선언, 벡터의 선언, 함수의 선언\n\n\n최규빈 \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "content/08wk-2.html",
    "href": "content/08wk-2.html",
    "title": "08wk-2: [Python] – R복습 / numpy intro",
    "section": "",
    "text": "import numpy as np\nimport matplotlib.pyplot as plt"
  },
  {
    "objectID": "content/08wk-2.html#수능문제",
    "href": "content/08wk-2.html#수능문제",
    "title": "08wk-2: [Python] – R복습 / numpy intro",
    "section": "1. 수능문제",
    "text": "1. 수능문제\n2024수능-19. 함수 \\(f(x) = \\sin \\frac{\\pi}{4} x\\) 할 때, \\(0 &lt; x &lt; 16\\)에서 부등식\n\\[\nf(2+x) f(2-x) &lt; \\frac{1}{4}\n\\]\n을 만족시키는 모든 자연수 \\(x\\)의 값의 합을 구하시오. [3점]\n(풀이) – R\n\nf = function(x){\n   sin(pi/4 *x) \n}\n\n\nx = 1:15\nx\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15\n\n\n\nf(2+x) * f(2-x) &lt; 1/4\n\n [1] FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE\n[13] FALSE  TRUE FALSE\n\n\n\nx[f(2+x) * f(2-x) &lt; 1/4]\n\n[1]  2  6 10 14\n\n\n\nsum(x[f(2+x) * f(2-x) &lt; 1/4])\n\n[1] 32\n\n\n(풀이) – Python\n\nimport numpy as np\n\n\nf = lambda x: np.sin(np.pi/4 *x)\n# def f(x):\n#     return np.sin(np.pi/4 *x)\n\n\nx = np.array(range(1,16))\n# x= np.array(list(range(1,16)))\nx\n\narray([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15])\n\n\n\nf(2+x) * f(2-x) &lt; 1/4\n\narray([False,  True, False, False, False,  True, False, False, False,\n        True, False, False, False,  True, False])\n\n\n\nx[f(2+x) * f(2-x) &lt; 1/4]\n\narray([ 2,  6, 10, 14])\n\n\n\nsum(x[f(2+x) * f(2-x) &lt; 1/4])\n\nnp.int32(32)\n\n\n2025수능-6. \\(\\cos \\left(\\frac{\\pi}{2} + \\theta \\right) = -\\frac{1}{5}\\) 일 때, \\(\\frac{\\sin\\theta}{1 - \\cos^2\\theta}\\) 의 값은? [3점]\n\n\\(-5\\)\n\n\\(-\\sqrt{5}\\)\n\n\\(0\\)\n\\(\\sqrt{5}\\)\n\\(5\\)\n\n(풀이) – R\n\ntheta = 2.94\n\n\ncos(pi/2+theta) # 이 값이 -0.2 정도가 되어야 할텐데?\n\n[1] -0.20023\n\n\n반복계산을 하다보니까 \\(\\theta \\approx 2.94\\) 인듯\n\nsin(theta)/(1-cos(theta)^2)\n\n[1] 4.994257\n\n\n(풀이) – Python\n\nimport numpy as np\n\n\ntheta = 2.94\n\n\nnp.cos(np.pi/2+theta) # 이 값이 -0.2 정도가 되어야 할텐데?\n\nnp.float64(-0.20022998472177103)\n\n\n반복계산을 하다보니까 \\(\\theta \\approx 2.94\\) 인듯\n\nnp.sin(theta)/(1-np.cos(theta)**2)\n\nnp.float64(4.99425698598313)"
  },
  {
    "objectID": "content/08wk-2.html#벡터인덱싱",
    "href": "content/08wk-2.html#벡터인덱싱",
    "title": "08wk-2: [Python] – R복습 / numpy intro",
    "section": "2. 벡터인덱싱",
    "text": "2. 벡터인덱싱\n\nimport numpy as np\n\n# 예제1 – 양수의 원소를 뽑는다.\n\nx = np.array([1,2,-2,4,5,-5,6])\nx\n\narray([ 1,  2, -2,  4,  5, -5,  6])\n\n\n\nx&gt;0\n\narray([ True,  True, False,  True,  True, False,  True])\n\n\n\nx[x&gt;0]\n\narray([1, 2, 4, 5, 6])\n\n\n#\n# 예제2 – 3보다 큰 원소를 뽑는 방법\n\nx = np.array([1,2,-2,4,5,-5,6])\nx\n\narray([ 1,  2, -2,  4,  5, -5,  6])\n\n\n\nx[x&gt;3]\n\narray([4, 5, 6])\n\n\n#\n# 예제3 – 3번째 원소를 뽑는방법\n\nx = np.array([1,2,-2,4,5,-5,6])\nx\n\narray([ 1,  2, -2,  4,  5, -5,  6])\n\n\n\narr = np.array([False, False, True, False, False, False, False])\narr\n\narray([False, False,  True, False, False, False, False])\n\n\n\nx[arr]\n\narray([-2])\n\n\n#\n# 예제4 – 값이 -2인 원소를 뽑아라.\n\nx = np.array((1,2,-2,4,5,-5,6))\nx\n\narray([ 1,  2, -2,  4,  5, -5,  6])\n\n\n\nx[x == -2]\n\narray([-2])\n\n\n#\n# 예제5 – 값이 -1.5와 가장 가까운 원소를 뽑아라.\n(풀이1)\n\nx = np.array((1,2,-2,4,5,-5,6))\nx\n\narray([ 1,  2, -2,  4,  5, -5,  6])\n\n\n\nx - (-1.5)\n\narray([ 2.5,  3.5, -0.5,  5.5,  6.5, -3.5,  7.5])\n\n\n\nabs(x - (-1.5))\n\narray([2.5, 3.5, 0.5, 5.5, 6.5, 3.5, 7.5])\n\n\n\nabs(x - (-1.5)) == min(abs(x - (-1.5)))\n\narray([False, False,  True, False, False, False, False])\n\n\n\nx[abs(x - (-1.5)) == min(abs(x - (-1.5)))]\n\narray([-2])\n\n\n(풀이2)\n\nx = np.array((1,2,-2,4,5,-5,6))\nx\n\narray([ 1,  2, -2,  4,  5, -5,  6])\n\n\n\nnp.argmin(abs(x - (-1.5)))\n\nnp.int32(2)\n\n\n\nx[np.argmin(abs(x - (-1.5)))]\n\nnp.int32(-2)\n\n\n#\n# 예제6 – 값이 0.5와 가장 가까운 원소를 뽑아라.\n\nx = np.random.normal(size=100)\nx\n\narray([-0.55549182,  1.135786  ,  0.22488222, -0.27828521,  0.31068053,\n       -0.84615565, -1.06123884, -2.31023264, -1.0778794 , -0.66878153,\n        1.64599888,  0.00993931,  1.65980788,  0.96042669, -2.86658526,\n        2.034347  ,  1.80625502, -0.16519044,  1.19241176,  0.38260825,\n       -0.27403661,  1.65076625, -0.40343291, -2.02631684,  0.01365176,\n        1.04271385,  0.92079969, -1.52455003, -1.07817949, -0.03206049,\n        0.32152143, -0.62012408,  0.49889869, -1.01910041,  0.88194355,\n        0.02572674, -0.39642517,  0.50727392, -0.12259257,  1.21927153,\n       -2.1291978 , -0.46889021, -0.67331983, -1.28200754, -0.47672535,\n       -0.50068836, -1.84971734,  1.1355189 ,  0.38128017, -0.42444266,\n        1.45208803, -0.20620405,  0.07597739, -0.07526696, -0.63209592,\n        0.70175138,  0.20299937, -0.91183719, -0.60483135,  0.37805421,\n       -1.19670774,  0.47363231,  0.28659428,  1.00122163, -0.30186951,\n        0.75026228,  1.01250358, -0.34074013,  0.38256699, -0.67904123,\n       -0.58000617, -0.1756565 , -0.6490659 , -0.58708219, -0.09953991,\n       -0.04566179,  0.65090341, -0.19099064, -0.8320224 ,  0.03526678,\n        1.38999487, -2.51090913,  0.4489458 , -0.42371785, -1.1491281 ,\n       -0.91249818, -0.1346099 ,  0.50149025, -1.52023722, -0.1528213 ,\n        0.50149835, -0.27008287, -1.45674315, -0.62041124,  1.62022929,\n       -1.15825033,  0.35336406, -0.13698548, -1.04901816, -0.60020016])\n\n\n\nx[np.argmin(abs(x - 0.5))]\n\nnp.float64(0.4988986892032787)\n\n\n#"
  },
  {
    "objectID": "content/08wk-2.html#연산",
    "href": "content/08wk-2.html#연산",
    "title": "08wk-2: [Python] – R복습 / numpy intro",
    "section": "3. 연산",
    "text": "3. 연산\n# 예제 – 아래의 벡터를 고려하자.\n\nx = np.random.normal(size=100)\n\n(1) x의 원소중 그 값이 양수인 것은 모두 몇개인가?\n\nsum(x &gt; 0)\n\nnp.int32(53)\n\n\n(2) x의 평균을 구하여라.\n\nnp.mean(x)\n\nnp.float64(0.03420819894888085)\n\n\n\nx.mean()\n\nnp.float64(0.03420819894888085)\n\n\n(3) x의 원소중 평균과 가장 가까운 값을 구하여라.\n\nnp.argmin(abs(x - np.mean(x)))\n\nnp.int32(85)\n\n\n\nx[85]\n\nnp.float64(0.03368043239281483)\n\n\n# 예제 – 아래의 벡터를 고려하자.\n\nx = np.random.randint(1,101,size=50)\nx\n\narray([70, 23, 57, 34, 32, 62, 77, 56, 98, 13, 97, 95, 67,  7, 40, 89, 35,\n       39, 32,  7,  7, 98, 11, 99, 56, 32, 50,  4, 23, 64, 68, 81, 26, 60,\n       73, 84, 36, 31,  9,  2, 14, 40, 34, 61, 66, 99, 62, 15, 16, 48])\n\n\n(1) x의 원소중 짝수는 몇개 있는가?\n\nsum((x% 2) == 0)\n\nnp.int32(27)\n\n\n\n50- sum(x%2)\n\nnp.int32(27)\n\n\n(2) x의 원소중 가장 작은 홀수는 무엇인가?\n(풀이1)\n\nx\n\narray([70, 23, 57, 34, 32, 62, 77, 56, 98, 13, 97, 95, 67,  7, 40, 89, 35,\n       39, 32,  7,  7, 98, 11, 99, 56, 32, 50,  4, 23, 64, 68, 81, 26, 60,\n       73, 84, 36, 31,  9,  2, 14, 40, 34, 61, 66, 99, 62, 15, 16, 48])\n\n\n\nmin(x[x%2 == 1])\n\nnp.int32(7)\n\n\n(풀이2)\n\nx = np.sort(x)\nx\n\narray([ 2,  4,  7,  7,  7,  9, 11, 13, 14, 15, 16, 23, 23, 26, 31, 32, 32,\n       32, 34, 34, 35, 36, 39, 40, 40, 48, 50, 56, 56, 57, 60, 61, 62, 62,\n       64, 66, 67, 68, 70, 73, 77, 81, 84, 89, 95, 97, 98, 98, 99, 99])\n\n\n\nx[x%2 == 1]\n\narray([ 7,  7,  7,  9, 11, 13, 15, 23, 23, 31, 35, 39, 57, 61, 67, 73, 77,\n       81, 89, 95, 97, 99, 99])\n\n\n답은 7\n2010(나)6월평가원-4. 실수 \\(a\\) 가\n\\[\n\\frac{2^a + 2^{-a}}{2^a - 2^{-a}} = -2\n\\] 를 만족시킬 때, \\(4^a + 4^{-a}\\) 의 값은?\n\n\\(\\frac{5}{2}\\)\n\n\\(\\frac{10}{3}\\)\n\n\\(\\frac{17}{4}\\)\n\n\\(\\frac{26}{5}\\)\n\n\\(\\frac{37}{6}\\)\n\n(풀이) – R\n\na = seq(from=-2, to =-0.1, 0.0001)\nf&lt;- function(a){\n    up = 2^(a) + 2^(-a)\n    down = 2^(a) - 2^(-a) \n    up/down \n}\nplot(a,f(a))\nabline(h=-2,col=2)\n\n\n\n\n\n\n\n\n\na[which.min(abs(f(a) -(-2)))]\n\n[1] -0.7925\n\n\n\nf(-0.7925)\n\n[1] -1.999961\n\n\n\n4^(-0.7925) + 4^(0.7925)\n\n[1] 3.333403\n\n\n(풀이) – Python\n\nimport numpy as np\nimport matplotlib.pyplot as plt \n\nMatplotlib is building the font cache; this may take a moment.\n\n\n\na = np.linspace(-2,-0.1,10001)\n\n\ndef f(a):\n    up = 2**(a) + 2**(-a)\n    down = 2**(a) - 2**(-a) \n    return up/down \n\n\nplt.plot(a,f(a))\n\n\n\n\n\n\n\n\n\nnp.argmin(abs(f(a) - (-2)))\n\nnp.int32(6355)\n\n\n\na[6355]\n\nnp.float64(-0.7925500000000001)\n\n\n\n4**(-0.79255) + 4**(0.79255)\n\n3.3335875011060594\n\n\n2024수능-16. 방정식 \\(3^{x-8} = \\left(\\frac{1}{27}\\right)^x\\) 을 만족시키는 실수 \\(x\\)의 값을 구하시오. [3점]\n(풀이) – R\n\nx = seq(from = -5, to=5, by =0.1)\nl = 3^(x-8) - (1/27)^x\nx[which.min(abs(l))]\n\n[1] 2\n\n\n(풀이) – Python\n\nx = np.linspace(-5,5,101)\nl = 3**(x-8) - (1/27)**x \nnp.argmin(abs(l))\n\nnp.int32(70)\n\n\n\nx[70]\n\nnp.float64(2.0)"
  },
  {
    "objectID": "content/08wk-2.html#반복문",
    "href": "content/08wk-2.html#반복문",
    "title": "08wk-2: [Python] – R복습 / numpy intro",
    "section": "4. 반복문",
    "text": "4. 반복문\n2021(가)9월평가원-10. 수열 \\(\\{a_n\\}\\)은 \\(a_1 = 12\\)이고, 모든 자연수 \\(n\\)에 대하여\n\\[\na_{n+1} + a_n = (-1)^{n+1} \\times n\n\\] 을 만족시킨다. \\(a_k &gt; a_1\\)인 자연수 \\(k\\)의 최소값은?\n\n\\(2\\)\n\n\\(4\\)\n\n\\(6\\)\n\n\\(8\\)\n\\(10\\)\n\n(풀이) – R\n\na = c()\na\n\nNULL\n\n\n\na = c() \na[1] = 12\nfor(n in 1:100){\n    a[n+1] = - a[n] + (-1)^(n+1) * n \n}\n\n\n(1:100)[a &gt; a[1]]\n\n [1]   8  10  12  14  16  18  20  22  24  26  28  30  32  34  36  38  40  42  44\n[20]  46  48  50  52  54  56  58  60  62  64  66  68  70  72  74  76  78  80  82\n[39]  84  86  88  90  92  94  96  98 100\n\n\n답은 8\n\na\n\n  [1]    12   -11     9    -6     2     3    -9    16   -24    33   -43    54\n [13]   -66    79   -93   108  -124   141  -159   178  -198   219  -241   264\n [25]  -288   313  -339   366  -394   423  -453   484  -516   549  -583   618\n [37]  -654   691  -729   768  -808   849  -891   934  -978  1023 -1069  1116\n [49] -1164  1213 -1263  1314 -1366  1419 -1473  1528 -1584  1641 -1699  1758\n [61] -1818  1879 -1941  2004 -2068  2133 -2199  2266 -2334  2403 -2473  2544\n [73] -2616  2689 -2763  2838 -2914  2991 -3069  3148 -3228  3309 -3391  3474\n [85] -3558  3643 -3729  3816 -3904  3993 -4083  4174 -4266  4359 -4453  4548\n [97] -4644  4741 -4839  4938 -5038\n\n\n(풀이) – Python\n\nimport numpy as np\n\n\na = []\na = a + [12]\n\n\nfor n in range(1,101):\n    a.append(-a[-1] + (-1)**(n+1) * n)\n\n\nnp.array(range(1,102))[np.array(a) &gt; a[0]]\n\narray([  8,  10,  12,  14,  16,  18,  20,  22,  24,  26,  28,  30,  32,\n        34,  36,  38,  40,  42,  44,  46,  48,  50,  52,  54,  56,  58,\n        60,  62,  64,  66,  68,  70,  72,  74,  76,  78,  80,  82,  84,\n        86,  88,  90,  92,  94,  96,  98, 100])\n\n\n2007(나)6월평가원-14. 다음은 어느 회사의 연봉에 대한 규정이다.\n(가) 입사 첫째 해 연봉은 \\(a\\)원이고, 입사 19년째 해까지의 연봉은 해마다 직전 연봉에서 8%씩 인상된다.\n(나) 입사 20년째 해부터의 연봉은 입사 19년째 해 연봉의 \\(2/3\\)로 한다.\n이 회사에 입사한 사람이 28년 동안 근무하여 받는 연봉의 총합은? (단, \\(1.08^{18} = 4\\)로 계산한다.)\n\n\\(\\frac{101}{2} a\\)\n\n\\(\\frac{111}{2} a\\)\n\n\\(\\frac{121}{2} a\\)\n\n\\(\\frac{131}{2} a\\)\n\\(\\frac{141}{2} a\\)\n\n(풀이) – R\n\na = 1\nsal = c()\nsal[1] = a\nfor(y in 2:19){\n    sal[y] &lt;- sal[y-1] * 1.08 \n}\nfor(y in 20:28){\n    sal[y] &lt;- sal[19] * 2/3 \n}\nsum(sal)\n\n[1] 65.42238\n\n\n(풀이) – Python\n\nsal = [1] \nfor y in range(18):\n    sal.append(sal[-1]*1.08)\ns19 = sal[-1]\nfor y in range(9):\n    sal.append(s19*2/3)\n\n\nsum(sal)\n\n65.42238023410619"
  },
  {
    "objectID": "content/09wk-1.html#numpy-중요문법",
    "href": "content/09wk-1.html#numpy-중요문법",
    "title": "09wk-1: [Python] – numpy 중요문법, 시각화",
    "section": "1. numpy 중요문법",
    "text": "1. numpy 중요문법\n\nA. 선언\n# 예제1 – 리스트를 직접입력 \\(\\to\\) 형태변환\n\nx = np.array([1,2,3])\nx\n\narray([1, 2, 3])\n\n\n# 예제2 – 수열 1,2,3,…,100 만들기\n\nnp.array(range(1,101))\n\narray([  1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,\n        14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,\n        27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,  39,\n        40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,\n        53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,\n        66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,\n        79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,  91,\n        92,  93,  94,  95,  96,  97,  98,  99, 100])\n\n\n\nnp.arange(1,101)\n\narray([  1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,\n        14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,\n        27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,  39,\n        40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,\n        53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,\n        66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,\n        79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,  91,\n        92,  93,  94,  95,  96,  97,  98,  99, 100])\n\n\n# 예제3 – 수열 1,1,1,…,1 만들기 혹은 0,0,0,…,0 만들기\n\nnp.ones(100)\n\narray([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])\n\n\n\nnp.zeros(10)\n\narray([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])\n\n\n# 예제4 – 수열 0.1, 0.2, …., 1.0 만들기\n\nnp.linspace(0.1, 1.0, 10)\n\narray([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ])\n\n\n\nnp.arange(1,11) / 10\n\narray([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ])\n\n\n\nnp.arange(0.1, 1.1, 0.1)\n\narray([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ])\n\n\n# 예제5 – 표준정규분포에서 난수생성\n\nnp.random.normal(size=10)\n\narray([ 0.63999094,  0.88612022, -1.0669658 , -0.37545709,  0.13713132,\n        1.74396856, -0.76896607,  0.79637754, -1.38446077, -0.62810566])\n\n\n\nnp.random.rand(10)\n\narray([0.48543731, 0.48535705, 0.46677356, 0.35678881, 0.28247887,\n       0.61917983, 0.94275329, 0.91956613, 0.3352364 , 0.69781889])\n\n\n# 예제6 – 0~1사이의 난수생성\n\nnp.random.rand(10)\n\narray([0.53467699, 0.35790844, 0.26439325, 0.17385196, 0.57558766,\n       0.87321323, 0.24747884, 0.39109478, 0.49785881, 0.24940051])\n\n\n# 예제7 – 0,1,2,3,4 사이의 정수\n\nnp.random.randint(low=0, high=5, size=100)\n\narray([1, 1, 2, 0, 0, 0, 4, 4, 1, 1, 3, 4, 2, 1, 0, 2, 3, 0, 3, 2, 2, 1,\n       1, 4, 1, 3, 2, 3, 3, 0, 0, 0, 4, 0, 2, 0, 0, 0, 0, 1, 2, 2, 0, 4,\n       1, 4, 4, 3, 1, 0, 1, 4, 2, 1, 3, 4, 3, 2, 0, 0, 1, 3, 0, 2, 3, 0,\n       4, 0, 2, 1, 1, 0, 3, 1, 4, 2, 3, 3, 0, 3, 4, 3, 4, 4, 0, 2, 0, 2,\n       2, 1, 2, 3, 0, 0, 2, 2, 0, 4, 0, 3])\n\n\n\n\nB. 연산\n# 예제1 – 평균\n\nx = np.array([-1,0,1,2])\nx\n\narray([-1,  0,  1,  2])\n\n\n아래를 계산하라.\n\\[\\bar{x} = \\frac{1}{n}\\sum_{i=1}^{n}x_i\\]\n(풀이)\n\nsum(x) / len(x)\n\nnp.float64(0.5)\n\n\n\nnp.sum(x) / len(x)\n\nnp.float64(0.5)\n\n\n\nx.sum() / len(x)\n\nnp.float64(0.5)\n\n\n\nnp.mean(x)\n\nnp.float64(0.5)\n\n\n\nx.mean()\n\nnp.float64(0.5)\n\n\n#\n# 예제2 – 분산\n\nx = np.random.randn(10000)\nx\n\narray([ 0.31313979,  0.42801967,  0.07141947, ...,  1.15136579,\n       -0.53223794,  1.07261678], shape=(10000,))\n\n\n아래를 계산하라.\n\\[\\frac{1}{n-1}\\sum_{i=1}^{n}(x_i-\\bar{x})^2, \\quad \\bar{x} = \\frac{1}{n}\\sum_{i=1}^{n}x_i\\]\n(풀이)\n\nnp.sum((x - x.mean())**2) / (len(x)-1)\n\nnp.float64(0.9997719972456344)\n\n\n#\n# 예제3\n\nx = np.random.randn(10)\ny = np.random.randn(10)\n\n아래를 계산하라.\n\\[\\sum_{i=1}^{n} x_i y_i\\]\n(풀이)\n\nnp.sum(x*y)\n\nnp.float64(-0.0745472941430606)\n\n\n#\n\n\nC. max, argmax, min, argmin\n# 예제1 – 최소값과 최대값\n\nx = np.arange(1,101)/10\nx\n\narray([ 0.1,  0.2,  0.3,  0.4,  0.5,  0.6,  0.7,  0.8,  0.9,  1. ,  1.1,\n        1.2,  1.3,  1.4,  1.5,  1.6,  1.7,  1.8,  1.9,  2. ,  2.1,  2.2,\n        2.3,  2.4,  2.5,  2.6,  2.7,  2.8,  2.9,  3. ,  3.1,  3.2,  3.3,\n        3.4,  3.5,  3.6,  3.7,  3.8,  3.9,  4. ,  4.1,  4.2,  4.3,  4.4,\n        4.5,  4.6,  4.7,  4.8,  4.9,  5. ,  5.1,  5.2,  5.3,  5.4,  5.5,\n        5.6,  5.7,  5.8,  5.9,  6. ,  6.1,  6.2,  6.3,  6.4,  6.5,  6.6,\n        6.7,  6.8,  6.9,  7. ,  7.1,  7.2,  7.3,  7.4,  7.5,  7.6,  7.7,\n        7.8,  7.9,  8. ,  8.1,  8.2,  8.3,  8.4,  8.5,  8.6,  8.7,  8.8,\n        8.9,  9. ,  9.1,  9.2,  9.3,  9.4,  9.5,  9.6,  9.7,  9.8,  9.9,\n       10. ])\n\n\n최대값과 최소값을 계산하라.\n(풀이)\n\nnp.min(x), x.min(), min(x)\n\n(np.float64(0.1), np.float64(0.1), np.float64(0.1))\n\n\n\nnp.max(x), x.max(), max(x)\n\n(np.float64(10.0), np.float64(10.0), np.float64(10.0))\n\n\n#\n# 예제2 – 최소값이 위치한 인덱스, 최대값이 위치한 인덱스\n\nx = np.array([1,2,-3,5,0])\nx\n\narray([ 1,  2, -3,  5,  0])\n\n\n최대값과 최소값이 위치한 인덱스를 찾아라.\n(풀이)\n\nnp.argmin(x), x.argmin()\n\n(np.int64(2), np.int64(2))\n\n\n\nnp.argmax(x), x.argmax()\n\n(np.int64(3), np.int64(3))\n\n\n#\n# 예제3 – 평균과 가장 가까운값\n\nx = np.random.randn(10000)\nx\n\narray([-0.26766261,  0.19982864,  0.42399218, ...,  2.13772316,\n        0.0507584 , -0.84801245], shape=(10000,))\n\n\n평균과 가장 가까운 값을 구하라.\n(풀이)\n\nx.mean()\n\nnp.float64(-0.00593222216257571)\n\n\n\nnp.abs(x - x.mean()).argmin()\n\nnp.int64(5069)\n\n\n\nx[5069]\n\nnp.float64(-0.006013892355208624)\n\n\n#\n# 예제5 ~ 연산\n\nx = np.array([True,False]*5)\nx\n\narray([ True, False,  True, False,  True, False,  True, False,  True,\n       False])\n\n\n위의 array에서 True를 False로 그리고 False를 True로 바꾸어라.\n(풀이)\n\n~x\n\narray([False,  True, False,  True, False,  True, False,  True, False,\n        True])\n\n\n\n\nD. 인덱싱\n# 예제1 – 일반적인 인덱싱\n\nx = np.random.rand(5)\nx\n\narray([0.59630868, 0.36965091, 0.55052066, 0.43073621, 0.37603208])\n\n\n\nx[0]\n\nnp.float64(0.5963086827681903)\n\n\n\nx[:2]\n\narray([0.59630868, 0.36965091])\n\n\n\nx[-2:]\n\narray([0.43073621, 0.37603208])\n\n\n#\n# 예제2 – 스트라이딩\n\nx = np.arange(1,101)\nx\n\narray([  1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,\n        14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,\n        27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,  39,\n        40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,\n        53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,\n        66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,\n        79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,  91,\n        92,  93,  94,  95,  96,  97,  98,  99, 100])\n\n\n\nx[::2]\n\narray([ 1,  3,  5,  7,  9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33,\n       35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67,\n       69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99])\n\n\n\nx[1::2]\n\narray([  2,   4,   6,   8,  10,  12,  14,  16,  18,  20,  22,  24,  26,\n        28,  30,  32,  34,  36,  38,  40,  42,  44,  46,  48,  50,  52,\n        54,  56,  58,  60,  62,  64,  66,  68,  70,  72,  74,  76,  78,\n        80,  82,  84,  86,  88,  90,  92,  94,  96,  98, 100])\n\n\n\nx[2::3]\n\narray([ 3,  6,  9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51,\n       54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99])\n\n\n#\n# 예제3 – True/False 를 이용한 인덱싱\n\nx = np.random.randn(10)\nx\n\narray([ 0.82045771, -0.26450737,  2.18595844, -1.07529209, -0.70678497,\n       -0.0642393 , -0.27223974,  0.24289743,  0.82903608, -0.74138662])\n\n\nx&gt;0을 만족하는 원소를 출력하라.\n(풀이)\n\nx[x&gt;0]\n\narray([0.82045771, 2.18595844, 0.24289743, 0.82903608])\n\n\n아래는 동작하지 않음을 주의하자\n\n(x&gt;0)*1\n\narray([1, 0, 1, 0, 0, 0, 0, 1, 1, 0])\n\n\n\nx[(x&gt;0)*1]\n\narray([-0.26450737,  0.82045771, -0.26450737,  0.82045771,  0.82045771,\n        0.82045771,  0.82045771, -0.26450737, -0.26450737,  0.82045771])\n\n\n#"
  },
  {
    "objectID": "content/09wk-1.html#시각화",
    "href": "content/09wk-1.html#시각화",
    "title": "09wk-1: [Python] – numpy 중요문법, 시각화",
    "section": "2. 시각화",
    "text": "2. 시각화\n\nA. 기본시각화\n# 예제1 – scatter plot\n\nx = [1,2,3,4]\ny = [1,3,2,-1]\n\n\nplt.plot(x,y,'o')\n\n\n\n\n\n\n\n\n#\n# 예제2 – dot-conneted plot\n\nx = [1,2,3,4]\ny = [1,3,2,-1]\n\n\nplt.plot(x,y,'o--')\n\n\n\n\n\n\n\n\n#\n# 예제3 – line plot\n\nx = [1,2,3,4]\ny = [1,3,2,-1]\n\n\nplt.plot(x,y)\n\n\n\n\n\n\n\n\n\nplt.plot(x,y,'--')\n\n\n\n\n\n\n\n\n#\n# 예제4 – \\(-2&lt;x&lt;2\\) 에서 \\(y=x^2\\) 그리기\n\nx = np.linspace(-2,2,101)\ny = x**2 \n\n\nplt.plot(x,y)\n\n\n\n\n\n\n\n\n#\n\n\nB. 겹쳐서 그리기\n# 예제1 – \\(-5&lt;x&lt;5\\) 에서 \\(\\cos(x), \\sin(x)\\) 겹쳐서 그리기\n\nx = np.linspace(-5,5,101)\nplt.plot(x,np.cos(x))\nplt.plot(x,np.sin(x))\n\n\n\n\n\n\n\n\n#\n# 예제2 – \\(1&lt;x&lt;3\\) 에서 \\(3^{x-8} = \\big(\\frac{1}{27}\\big)^x\\) 의 교점의 수를 구하라.\n\nx = np.linspace(1,3,101)\nplt.plot(x, 3**(x-8))\nplt.plot(x, (1/27)**x)\n\n\n\n\n\n\n\n\n교점은 1개임.\n#\n# 예제3 – \\(5&lt;x&lt;10\\) 에서 \\(3^{x-8} =2\\) 의 교점의 수를 구하라.\n\nx = np.linspace(5,10,101)\nplt.plot(x, 3**(x-8))\nplt.plot(x,x*0+2)\n\n\n\n\n\n\n\n\n교점은 1개 있음\n#"
  },
  {
    "objectID": "content/09wk-1.html#old-lecture-notes",
    "href": "content/09wk-1.html#old-lecture-notes",
    "title": "09wk-1: [Python] – numpy 중요문법, 시각화",
    "section": "3. old lecture notes",
    "text": "3. old lecture notes\n- R입문 (2021)\n\nhttps://guebin.github.io/IR2021/\n\n- Python 입문/프로그래밍 (2022,2023,2024)\n\nhttps://guebin.github.io/IP2022/\nhttps://guebin.github.io/PP2023/\nhttps://guebin.github.io/PP2024/"
  },
  {
    "objectID": "content/05wk-1.html#intro",
    "href": "content/05wk-1.html#intro",
    "title": "05wk-1: [Python] – int, float, bool, str // 숙제",
    "section": "1. Intro",
    "text": "1. Intro\n- 파이썬의 기본자료형은 int, float, bool, str, list, tuple, dict, set 등이 있다.\n\n0차원 자료형: int, float, bool\n1차원 자료형: str, list, tuple, dict, set"
  },
  {
    "objectID": "content/05wk-1.html#int-float-bool",
    "href": "content/05wk-1.html#int-float-bool",
    "title": "05wk-1: [Python] – int, float, bool, str // 숙제",
    "section": "2. int, float, bool",
    "text": "2. int, float, bool\n- int형\n\na=100\n\n\ntype(a)\n\nint\n\n\n- float형\n\na=1.2*3\na\n\n3.5999999999999996\n\n\n\ntype(a)\n\nfloat\n\n\n\na?\n\n\nType:        float\nString form: 3.5999999999999996\nDocstring:   Convert a string or number to a floating point number, if possible.\n\n\n\n\n- bool형\n\na=True ## 숫자1으로 생각할 수 있음 \nb=False ## 숫자0으로 생각할 수 있음\n\n\ntype(a)\n\nbool\n\n\n\ntype(b)\n\nbool\n\n\n\na?\n\n\nType:        bool\nString form: True\nDocstring:  \nbool(x) -&gt; bool\nReturns True when the argument x is true, False otherwise.\nThe builtins True and False are the only two instances of the class bool.\nThe class bool is a subclass of the class int, and cannot be subclassed.\n\n\n\n\n\nb?\n\n\nType:        bool\nString form: False\nDocstring:  \nbool(x) -&gt; bool\nReturns True when the argument x is true, False otherwise.\nThe builtins True and False are the only two instances of the class bool.\nThe class bool is a subclass of the class int, and cannot be subclassed.\n\n\n\n\n- bool형의 연산\n\na=True ## 1\nb=False ## 0 \n\n\na+b\n\n1\n\n\n\na*b \n\n0\n\n\n- complex형\n\na=1+2j\nb=2-2j\n\n\ntype(a)\n\ncomplex\n\n\n\ntype(b)\n\ncomplex\n\n\n\na?\n\n\nType:        complex\nString form: (1+2j)\nDocstring:  \nCreate a complex number from a real part and an optional imaginary part.\nThis is equivalent to (real + imag*1j) where imag defaults to 0.\n\n\n\n\n\nb?\n\n\nType:        complex\nString form: (2-2j)\nDocstring:  \nCreate a complex number from a real part and an optional imaginary part.\nThis is equivalent to (real + imag*1j) where imag defaults to 0.\n\n\n\n\n\nc=a+b\n\n\nc\n\n(3+0j)\n\n\n- 형태변환: float \\(\\to\\) int\n(예시1)\n\na=3.0\ntype(a)\n\nfloat\n\n\n\na=int(a)\n\n\ntype(a)\n\nint\n\n\n(예시2) 이경우는 정보의 손실이 발생\n\na=3.14 \nint(a)\n\n3\n\n\n- 형태변환: int \\(\\to\\) float\n\na=3\ntype(a)\n\nint\n\n\n\na=float(a)\ntype(a)\n\nfloat\n\n\n- 형태변환: bool \\(\\to\\) int/float, int/float \\(\\to\\) bool\n(예시1)\n\na=True\ntype(a)\n\nbool\n\n\n\nint(a)\n\n1\n\n\n\nfloat(a)\n\n1.0\n\n\n(예시2)\n\na=1 \nbool(a)\n\nTrue\n\n\n\na=0\nbool(a)\n\nFalse\n\n\n(예시3)\n\na=1.0\nbool(a)\n\nTrue\n\n\n\na=0.0\nbool(a)\n\nFalse\n\n\n- 이상한 형태변환도 가능하다. (이런것도 바꿔주나 싶은것도 바꿔줌)\n\nbool(-3.14)\n\nTrue\n\n\n\n저는 이런 코드를 의도적으로 사용하지 않아요..\n\n\nint(3.14)\n\n3\n\n\n- 형태변환이 항상가능한것도 아님\n\nfloat(3+0j) # 사실상 3+0j=3 이므로 float으로 형변환하면 3.0이 되어야 할 것 같은데 변환불가능하다. \n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nInput In [78], in &lt;module&gt;\n----&gt; 1 float(3+0j)\n\nTypeError: can't convert complex to float\n\n\n\n- 암묵적형변환 (implicit)\n(예비학습) implicit의 의미\n\n추운날씨 -&gt; 보일러좀 틀자! (explicit) / 오늘 날씨 좀 추운 것 같지 않아? (implicit)\n짜장면 먹을래? -&gt; 싫어! (explicit) / 난 어제 짜장면 먹었는데.. (implicit)\n\n(예제)\n\nTrue * 1 # 1을 곱할건데 너 계속 True로 있을꺼야? \n\n1\n\n\n\n1 * 1.0 # 1.0을 곱할건데 너 계속 int로 있을꺼야? \n\n1.0\n\n\n\nTrue+True # +연산을 할건데 계속 True로 있을꺼야? \n\n2"
  },
  {
    "objectID": "content/05wk-1.html#str-기본내용",
    "href": "content/05wk-1.html#str-기본내용",
    "title": "05wk-1: [Python] – int, float, bool, str // 숙제",
    "section": "3. str 기본내용",
    "text": "3. str 기본내용\n\nA. 선언\n- 예시1\n\na='guebin'\n\n\na\n\n'guebin'\n\n\n- 예시2\n\na=\"guebin\"\n\n\na\n\n'guebin'\n\n\n\n\nB. 연산\n- 더하기(+)연산\n\na='X'\nb='2'\n\n\nc=a+b\nc\n\n'X2'\n\n\n- 빼기(-)연산\n\na='X2'\nb='2'\na-b\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nInput In [92], in &lt;module&gt;\n      1 a='X2'\n      2 b='2'\n----&gt; 3 a-b\n\nTypeError: unsupported operand type(s) for -: 'str' and 'str'\n\n\n\n\n이런건 없다.\n\n- 곱하기(*)연산\n\na='X'\n\n\na+a+a\n\n'XXX'\n\n\n\na*3 # a*3 = a+a+a = 'X'+'X+'X'\n\n'XXX'\n\n\n아래도 가능하다.\n\n3*a\n\n'XXX'\n\n\n그리고 아래도 가능하다.\n\na='X'\nb=3 \na*b\n\n'XXX'\n\n\n대신에 의미상 맞지 않는 것은 수행되지 않고 에러가 난다.\n\na='X'\nb='Y'\na+b\n\n'XY'\n\n\n\na*b\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[70], line 1\n----&gt; 1 a*b\n\nTypeError: can't multiply sequence by non-int of type 'str'\n\n\n\n- 나눗셈(/)연산\n\na='XX'\n\n\na/2\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[73], line 1\n----&gt; 1 a/2\n\nTypeError: unsupported operand type(s) for /: 'str' and 'int'\n\n\n\n\n이런건 없다..\n\n\n\nC. 인덱싱\n- str은 하나의 벡터 문자가 여러개 있는 형태라고 생각하면 된다.\n\na='guebin'\n\n\na\n\n'guebin'\n\n\n\n6개의 칸에 글씨가 하나씩 들어가 있음.\n\n- 대괄호 []안에 숫자를 넣는 방식으로 벡터의 원소를 호출할 수 있다. (주의: 인덱스가 0부터 시작함)\n\na[0] #첫번째원소\n\n'g'\n\n\n\na[1] #두번째원소 \n\n'u'\n\n\n마지막원소는 -1로 호출할 수도 있다.\n\na[-1]\n\n'n'\n\n\n마지막에서 2번째 원소는 -2로 호출가능하다.\n\na[-2]\n\n'i'\n\n\n- 요약하면 아래와 같은 방식으로 호출가능함.\n\n\n\ng\nu\ne\nb\ni\nn\n\n\n\n\n0\n1\n2\n3\n4\n5\n\n\n0\n-5\n-4\n-3\n-2\n-1\n\n\n\n\na[4]\n\n'i'\n\n\n\na[-2]\n\n'i'\n\n\n\na[-4]\n\n'e'\n\n\n- :을 이용하여 여러개의 원소를 호출할 수 있음.\n\na='guebin'\n\n\na[0:3] # a[0],a[1],a[2],a[3]이 아니라 a[0],a[1],a[2]까지만 뽑힌다. 즉 마지막의 3은 호출되지 않는다. \n\n'gue'\n\n\n\na[1:3] # a[1], a[2] 만 호출 // start=1,  stop=3 \n\n'ue'\n\n\nindex=1부터 시작해서 마지막원소까지 호출하려면?\n\na='guebin'\n\n\na[5] # guebin의 마지막원소 'n'이 출려 \n\n'n'\n\n\n\na[1:5] # 5는 포함되지 않으므로 틀림\n\n'uebi'\n\n\n\na[1:6] # 정답\n\n'uebin'\n\n\n안 헷갈리는 방법은 없을까? 생략한다.\n\na[1:]\n\n'uebin'\n\n\n- 생략의 응용1\n\na='k-pop' \na\n\n'k-pop'\n\n\n\na[2:5]\n\n'pop'\n\n\n\na[2:]\n\n'pop'\n\n\n- 생략의 응용2\n\na='k-pop'\na\n\n'k-pop'\n\n\n\na[0:2] # a[0],a[1]\n\n'k-'\n\n\n\na[:2] # a[0],a[1] \n\n'k-'\n\n\n- 생략의 응용3\n\na='k-pop'\na\n\n'k-pop'\n\n\n\na[0:5] # a[0],...,a[4]\n\n'k-pop'\n\n\n\na[:]\n\n'k-pop'\n\n\n\n\nD. str 특수기능\n- 파이썬의 변수는 단순히 정보를 담는 그릇이 아니다. 유용한 기능을 제공하는 경우가 있다.\n\na='ABCD' # a라는 변수는 'ABCD'라는 정보를 담는 그릇의 역할만 하지 않고, 특화된 어떠한 기능도 제공한다. \na\n\n'ABCD'\n\n\n\na.lower() # a.lower()를 쓰면 a의 모든 문자를 소문자로 바꾸는 기능을 제공, lower(a)라고 읽자!\n\n'abcd'\n\n\n여기에서 lower()는 문자열에 특화된 기능임. 따라서 당연히 아래는 불가능\n\na=3.14\na.lower() # lower(a)\n\n\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\nInput In [194], in &lt;module&gt;\n      1 a=3.14\n----&gt; 2 a.lower()\n\nAttributeError: 'float' object has no attribute 'lower'\n\n\n\n- 자료형에 특화된 기능(=함수)을 확인하는 방법? a.+ tab 으로 목록 확인 가능\n\na='guebin'\n\n\na.upper?\n\n\nSignature: a.upper()\nDocstring: Return a copy of the string converted to uppercase.\nType:      builtin_function_or_method\n\n\n\n\na.upper() # upper(a) \n\n'GUEBIN'\n\n\n\na.capitalize() # capitalize(a) \n\n'Guebin'\n\n\n\na='asdf'\n\n\na.replace(\"d\",\"D\")\n\n'asDf'\n\n\n- 문자열에 대한 다른 내용들은 추후에 다루겠음.\n- 마음의눈: a.f() 형태를 읽는 팁\n\na.f()는 f(a)로 생각하면 편리함.\na.f(2)는 f(a,2)로 생각하면 편리함.\n이런점에서 R %&gt;% 연산자와 비슷하다고 생각할 수 있다. (약간 다르긴함)\n\n- 사실 .은 좀 더 다양한 상황에서 쓰일 수 있다. 변수이름.함수이름() 의 형태가 아니라\n\n패지키이름.함수이름()\n패키지이름.변수이름\n패키지이름.패키지이름.함수이름()\n…\n\n와 같이 다양한 형태가 가능하다. 근본적인 공통점은 .을 기준으로 상위개념.하위개념 으로 이해하는 것이 좋다.\n\n\nE. len\n- len함수 소개: 원소의 갯수를 알려주는 함수.\n\na='ABCD' \nlen(a)\n\n4\n\n\n- 참고: len은 0차원 변수형에서는 동작하지 않고 1차원 변수형에서만 동작한다.\n(0차원) len 함수가 동작하지 않음.\n\na=3.14\n\n\nlen(a)\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[210], line 1\n----&gt; 1 len(a)\n\nTypeError: object of type 'float' has no len()\n\n\n\n\nb=True\n\n\nlen(b)\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[212], line 1\n----&gt; 1 len(b)\n\nTypeError: object of type 'bool' has no len()\n\n\n\n(1차원) len 함수가 잘 동작함.\n\na='3.14'\nlen(a)\n\n4\n\n\n\nb=[1,2,3]\n\n\nlen(b)\n\n3"
  },
  {
    "objectID": "content/05wk-1.html#숙제",
    "href": "content/05wk-1.html#숙제",
    "title": "05wk-1: [Python] – int, float, bool, str // 숙제",
    "section": "4. 숙제",
    "text": "4. 숙제\n1. 아래와 같은 문자열이 있다고 하자.\n\na = 'Jeonbuk National University'\na\n\n'Jeonbuk National University'\n\n\n적당한 인덱싱을 통하여 출력결과가 아래와 같도록 하라.\n\n'University'\n\n'University'\n\n\n\nhint: University는 10글자이다.\n\n(풀이)\n\na[-10:]\n\n'University'\n\n\n2. 아래와 같은 문자열이 있다고 하자.\n\na = 'ASDF'\na\n\n'ASDF'\n\n\n출력결과가 아래와 같도록 하는 코드를 작성하라. (lower 함수를 이용할 것)\n\n'asdf'\n\n'asdf'\n\n\n(풀이)\n\na.lower()\n\n'asdf'\n\n\n3. 아래와 같은 문자열을 고려하라.\n\na = '2021. 01. 05.'\na\n\n'2021. 01. 05.'\n\n\n띄어쓰기를 제거하는 코드를 구현하라. 즉 출력결과가 아래와 같도록 만드는 코드를 구현하라. (.replace() 를 이용할 것)\n\n'2021.01.05.'\n\n'2021.01.05.'\n\n\n(풀이)\n\na.replace(\" \", \"\")\n\n'2021.01.05.'"
  },
  {
    "objectID": "content/03wk-1.html#문제풀이",
    "href": "content/03wk-1.html#문제풀이",
    "title": "03wk-1: [R] – 문제풀이 (아홉개의 공, 100개의 라커) // 숙제",
    "section": "1. 문제풀이",
    "text": "1. 문제풀이\n# 예제 1 – 아홉개의 공\n아홉개의 공이있다. 이 가운데 여덟개는 무게가 같고 하나는 남은 하나는 좀 더 무겁다. 우리에게는 저울이 하나 있는데 이 저울로는 왼쪽의 공들이 무거운지 오른쪽의 공들이 무거운지밖에 알아낼 수 없다. 이 저울을 딱 두번만 사용하여 가장 무거운 공을 찾아내는 알고리즘을 solution 함수로 정리하여 제시하라. 공들의 무게는 길이가 9인 벡터로 온다고 가정한다. 출력은 가장 무거운 공이 위치한 index를 리턴하도록 한다.\n다음은 solution 함수를 실제로 구현하여 사용한 예시이다.\nsolution(c(2,1,1,1,1,1,1,1,1))\n&gt; 1\nsolution(c(2,2,5,2,2,2,2,2,2))\n&gt; 3\n(풀이)\n\nsolution &lt;- function(x){\n    l = x[1:3]\n    m = x[4:6]\n    r = x[7:9]\n    if(sum(l)&gt;sum(m)){\n        if(x[1]&gt;x[2]){\n            idx = 1 \n        }else if(x[1]&lt;x[2]){\n            idx = 2 \n        }else{\n            idx = 3 \n        }\n    }else if(sum(l)&lt;sum(m)){\n        if(x[4]&gt;x[5]){\n            idx = 4 \n        }else if(x[4]&lt;x[5]){\n            idx = 5\n        }else{\n            idx = 6 \n        }\n    }else{\n        if(x[7]&gt;x[8]){\n            idx = 7 \n        }else if(x[7]&lt;x[8]){\n            idx = 8\n        }else{\n            idx = 9 \n        }\n    }\n    return(idx)\n}\n\n\nsolution(c(2,1,1,1,1,1,1,1,1))\n\n1\n\n\n\nsolution(c(2,2,5,2,2,2,2,2,2))\n\n3\n\n\n#\n# 예제 2 – 100개의 라커\n복도에 100개의 라커가 있다. 복도를 어떤 남자가 100개의 라커 문을 전부 연다. 그리고 나서 짝수 번호의 라커를 전부 닫는다. 그 다음에는 번호가 3의 배수인 라커를 순서대로 찾아다니며 열려 있으면 닫고, 닫혀 있으면 연다. 그 다음에는 번호가 4의 배수인 라커를 순서대로 찾아다니며 열려있으면 닫고, 닫혀있으면 연다. 이후에 5의 배수, 6의 배수 .. 인 라커를 순서대로 찾아다니며 행동을 반복한다. 이런식으로 복도를 100번 지나가면 열린 라커의 문은 몇개가 되겠는가?\n\n#     라커1 라커2 라커3 라커4 라커5 라커6  ..... 라커100 \n# 1회  열    열    열   열   열    열    ..... 열 \n# 2회  열    닫    열   닫   열    닫    ..... 닫 \n# 3회  열    닫    닫   닫   열    열    ..... 닫 \n# 4회  열    닫    닫   열   열    열    ..... 닫 \n# ...\n\n# 알고리즘 \n# 1. 100개의 TRUE가 있는 벡터를 만듦. \n# 2. 100개의 TRUE가 있는 벡터에서 2,4,6,...,100 번쨰 원소를 선택하여 그 값을 반전시킴\n# 3. 100개의 TRUE가 있는 벡터에서 3,6,9,...,99 번쨰 원소를 선택하여 그 값을 반전시킴\n# ...\n# 100. 100개의 TRUE가 있는 벡터에서 100 번쨰 원소를 선택하여 그 값을 반전시킴\n\nNULL\n\n\n(예비학습)\n\nx = TRUE\n\n\n!x\n\n[1] FALSE\n\n\n\nx = c(TRUE, TRUE, FALSE)\n\n\n!x\n\n[1] FALSE FALSE  TRUE\n\n\n(풀이)\n\nflip &lt;- function(x){\n    !x\n}\n\n\ndoors = rep(TRUE,100)\nfor(i in 2:100){\n    doors[(1:100) %% i == 0] = flip(doors[(1:100) %% i == 0])\n}\nsum(doors)\n\n[1] 10\n\n\n#"
  },
  {
    "objectID": "content/03wk-1.html#숙제",
    "href": "content/03wk-1.html#숙제",
    "title": "03wk-1: [R] – 문제풀이 (아홉개의 공, 100개의 라커) // 숙제",
    "section": "2. 숙제",
    "text": "2. 숙제\n1 – 세 개의 공\n세 개의 공이 있다. 이 중 두 개는 무게가 같고, 하나는 더 가볍다. 우리는 저울을 한 번만 사용하여 가장 가벼운 공이 위치한 index를 찾아야 한다.\n이 문제를 해결하는 solution 함수를 작성하라. 공들의 무게는 길이가 3인 벡터로 주어진다고 가정한다. 출력은 가장 가벼운 공의 index가 되어야 한다.\n(풀이)\n\nsol &lt;- function(x){\n    idx = 0\n    if(x[1]&lt;x[2]){\n        idx = 1 \n    }else if(x[1]&gt;x[2]){\n        idx = 2 \n    }else{\n        idx = 3\n    }\n    return(idx)\n}\n\n\nsol(c(1,1,0.5))\n\n[1] 3\n\n\n2 - 10개의 라커\n복도에 10개의 라커가 있다. 복도를 어떤 남자가 10개의 라커 문을 전부 연다. 그리고 나서 짝수 번호의 라커를 전부 닫는다. 그 다음에는 번호가 3의 배수인 라커를 순서대로 찾아다니며 열려 있으면 닫고, 닫혀 있으면 연다. 그 다음에는 번호가 4의 배수인 라커를 순서대로 찾아다니며 열려있으면 닫고, 닫혀있으면 연다. 열린 라커의 문은 몇개가 되겠는가?\n\ndoors = rep(TRUE,10)\ndoors\n\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n\n\ndoors[seq(2,10,by=2)] = !doors[seq(2,10,by=2)]\n\n\ndoors[seq(3,10,by=3)] = !doors[seq(3,10,by=3)]\n\n\ndoors[seq(4,10,by=4)] = !doors[seq(4,10,by=4)]\n\n\nsum(doors)\n\n[1] 6\n\n\n참고코드\n1~10까지의 수 중에서 2의 배수이거나 3의배수를 뽑는 코드\n\n(1:10)[(1:10) %% 2 == 0] # 2의 배수를 뽑는 코드\n\n[1]  2  4  6  8 10\n\n\n\n(1:10)[(1:10) %% 3 == 0] # 3의 배수를 뽑는 코드\n\n[1] 3 6 9\n\n\n\n(1:10) %% 2 == 0 # 2의 배수 자리면 TRUE 그렇지 않으면 FALSE\n\n [1] FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE\n\n\n\n(1:10) %% 3 == 0 # 3의 배수 자리면 TRUE 그렇지 않으면 FALSE\n\n [1] FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE\n\n\n\n(1:10)[((1:10) %% 2 == 0) | ((1:10) %% 3 == 0)] # 2의 배수이거나 3의 배수를 뽑는 코드\n\n[1]  2  3  4  6  8  9 10"
  },
  {
    "objectID": "content/03wk-2.html#if",
    "href": "content/03wk-2.html#if",
    "title": "03wk-2: [R] – if, if-else, if-elseif-else // 숙제",
    "section": "1. if",
    "text": "1. if\n# 예제1 – if문은 if (조건문) 표현식의 형태로 사용한다.\n\na = 2\nif (a&gt;0) print('a는 양수') \n\n[1] \"a는 양수\"\n\n\n#\n# 예제2 – space를 임의로 넣어도 OK\n\na=10\nif    (a&gt;0)    print('a는 양수') \n\n[1] \"a는 양수\"\n\n\n\na=10\nif  (a&gt;0)    print('a는 양수') \n\n[1] \"a는 양수\"\n\n\n\na=10\nif(a&gt;0)    print('a는 양수') \n\n[1] \"a는 양수\"\n\n\n#\n# 예제3 – enter 를 임의로 넣어도 OK\n\na=10\nif (a&gt;0)\n    print('a는양수')\n\n[1] \"a는양수\"\n\n\n\na=10\nif (a&gt;0) \n    \n    \n    print('a는양수')\n\n[1] \"a는양수\"\n\n\n\na=10\nif \n    \n    \n    (a&gt;0) \n    \n    \n    print('a는양수')\n\n[1] \"a는양수\"\n\n\n#\n# 예제4 – if가 만족될때 내릴 명령이 2개이상이면 중괄호를 이용하라.\n잘못된 사용\n\na=10 \nif (a&gt;0)\n    print('a는양수')\n    print('양수인 a의 값은 아래와 같다.') \n    print(a) \n\n[1] \"a는양수\"\n,[1] \"양수인 a의 값은 아래와 같다.\"\n,[1] 10\n\n\n\na=-10 \nif (a&gt;0)\n    print('a는양수')\n    print('양수인 a의 값은 아래와 같다.') \n    print(a) \n\n[1] \"양수인 a의 값은 아래와 같다.\"\n,[1] -10\n\n\n\n컴퓨터에게 내릴 명령이 2개이상일 경우? \\(\\to\\) {}을 이용한다. 위의 코드들은 잘못된 코드이다. (에러메시지는 뜨지 않았지만)\n\n올바른 사용법: {}를 이용하여 명령들을 묶는다.\n\na=10 \nif (a&gt;0){\n    print('a는양수')\n    print('양수인 a의 값은 아래와 같다.') \n    print(a) \n}\n\n[1] \"a는양수\"\n,[1] \"양수인 a의 값은 아래와 같다.\"\n,[1] 10\n\n\n\na=-10 \nif (a&gt;0){\n    print('a는양수') ## \n    print('양수인 a의 값은 아래와 같다.') \n    print(a)\n}\n\n#\n# 예제5 – 중괄호를 묶는 방식\n아래와 같이 중괄호를 묶어도 상관없다.\n\na=10\nif (a&gt;0)\n{\n    print('a는양수')\n    print('양수인 a의 값은 아래와 같다.') \n    print(a) \n}\n\n[1] \"a는양수\"\n,[1] \"양수인 a의 값은 아래와 같다.\"\n,[1] 10\n\n\n\na=10\nif (a&gt;0)\n{\n    print('a는양수')\n    \n    print('양수인 a의 값은 아래와 같다.') \n    \n    \n    print(a)}\n\n[1] \"a는양수\"\n,[1] \"양수인 a의 값은 아래와 같다.\"\n,[1] 10\n\n\n\na=10\nif (a&gt;0){\n    print('a는양수')\n    \n            print('양수인 a의 값은 아래와 같다.') \n       \nprint(a)\n                }\n\n[1] \"a는양수\"\n,[1] \"양수인 a의 값은 아래와 같다.\"\n,[1] 10\n\n\n\n가능은 하지만 굳이 위와 같은 방식으로 중괄호를 만들 필요는 없다..\n\n#"
  },
  {
    "objectID": "content/03wk-2.html#if-else",
    "href": "content/03wk-2.html#if-else",
    "title": "03wk-2: [R] – if, if-else, if-elseif-else // 숙제",
    "section": "2. if-else",
    "text": "2. if-else\n# 예제1 – if문은 if (조건문) 표현식1 else 표현식2의 형태로 실행한다.\n\nx=2\nif (x&gt;0) log(x) else print('x는양수이어야함')\n\n[1] 0.6931472\n\n\n\nx=0\nif (x&gt;0) log(x) else print('x는양수이어야함')\n\n[1] \"x는양수이어야함\"\n\n\n\nx= -1\nif (x&gt;0) log(x) else print('x는양수이어야함')\n\n[1] \"x는양수이어야함\"\n\n\n#\n# 예제2 – if 문과 if~else 문은 다른기능이다. (\\(\\star\\star\\star\\))\n- 아래와 같이 사용해보자.\n\nx=10\nif (x&gt;0)\n    log(x) \nelse \n    print('x는 양수이어야함')\n\nError: Error in Unknown source: &lt;text&gt;:4:1: unexpected 'else'\n,3:     log(x) \n,4: else\n,   ^\n\n\n\n?? 왜 에러가 나는가?\n\n- 아래는 잘 실행된다.\n\nif (x&gt;0)    log(x)     else           print('x는양수이어야함')\n\n[1] 2.302585\n\n\n\nif (x&gt;0)    log(x)     else\n    print('x는양수이어야함')\n\n[1] 2.302585\n\n\n- 보통은 아래와 같이 사용한다.\n\nx=0\nif(x&gt;0){\n    log(x) \n}else{\n    print('x는 양수이어야함')\n}\n\n[1] \"x는 양수이어야함\"\n\n\n- 결국 한줄에 다 말하거나, 말을 하다가 끊어버리면 된다. // 한줄씩 끊어서 컴퓨터가 읽을떄 if문이 완성되면 안된다..\n- 아래와 같은것들도 가능\n\nx=0\nif (x&gt;0){\n    \nlog(x) \n    }else{\nprint('x는 양수이어야함')\n        }\n\n[1] \"x는 양수이어야함\"\n\n\n- 아래는 불가능\n\nx=0\nif (x&gt;0){\n    log(x) \n}\nelse{\n    print('x는 양수이어야함')\n}\n\nError: Error in Unknown source: &lt;text&gt;:5:1: unexpected 'else'\n,4: }\n,5: else\n,   ^\n\n\n\n중괄호만 친다고 해결되는게 아님\n\n- 결국 아래와 같은 코드를 권장함. (저는 무조건 이렇게만 씁니당)\n\nx=0\nif(x&gt;0){\n    log(x) \n}else{\n    print('x는 양수이어야함')\n}\n\n[1] \"x는 양수이어야함\"\n\n\n#"
  },
  {
    "objectID": "content/03wk-2.html#if-elseif-else",
    "href": "content/03wk-2.html#if-elseif-else",
    "title": "03wk-2: [R] – if, if-else, if-elseif-else // 숙제",
    "section": "3. if-elseif-else",
    "text": "3. if-elseif-else\n# 예제1\n\nx=10 \nif (x&gt;0){\n    print(log(x))\n}else{\n    if(x==0){\n        x=1e-100\n        print('x=0에서는 log(x)가 정의되지 않으므로 x=1e-100의 값으로 바꾸어 계산하겠습니다.')\n        print(log(x))\n    }else{ \n        print('x가음수입니다.')\n    }\n}\n\n[1] 2.302585\n\n\n\nx=0\nif (x&gt;0){\n    print(log(x))\n}else{\n    if(x==0){\n        x=1e-100\n        print('x=0에서는 log(x)가 정의되지 않으므로 x=1e-100의 값으로 바꾸어 계산하겠습니다.')\n        print(log(x))\n    }else{ \n        print('x가음수입니다.')\n    }\n}\n\n[1] \"x=0에서는 log(x)가 정의되지 않으므로 x=1e-100의 값으로 바꾸어 계산하겠습니다.\"\n,[1] -230.2585\n\n\n\nx=-1\nif (x&gt;0){\n    print(log(x))\n}else{\n    if(x==0){\n        x=1e-100\n        print('x=0에서는 log(x)가 정의되지 않으므로 x=1e-100의 값으로 바꾸어 계산하겠습니다.')\n        print(log(x))\n    }else{\n        print('x가음수입니다.')\n    }\n}\n\n[1] \"x가음수입니다.\"\n\n\n#\n# 예제2 – 예제1과 아래는 같은 코드이다.\n\nx=10 \nif (x&gt;0){\n    print(log(x))\n}else if(x==0){\n    x=1e-100\n    print('x=0에서는 log(x)가 정의되지 않으므로 x=1e-100의 값으로 바꾸어 계산하겠습니다.')\n    print(log(x))\n}else{ \n    print('x가음수입니다.')\n}\n\n[1] 2.302585\n\n\n\nx=0\nif (x&gt;0){\n    print(log(x))\n}else if(x==0){\n    x=1e-100\n    print('x=0에서는 log(x)가 정의되지 않으므로 x=1e-100의 값으로 바꾸어 계산하겠습니다.')\n    print(log(x))\n}else{ \n    print('x가음수입니다.')\n}\n\n[1] \"x=0에서는 log(x)가 정의되지 않으므로 x=1e-100의 값으로 바꾸어 계산하겠습니다.\"\n,[1] -230.2585\n\n\n\nx=-1\nif (x&gt;0){\n    print(log(x))\n}else if(x==0){\n    x=1e-100\n    print('x=0에서는 log(x)가 정의되지 않으므로 x=1e-100의 값으로 바꾸어 계산하겠습니다.')\n    print(log(x))\n}else{ \n    print('x가음수입니다.')\n}\n\n[1] \"x가음수입니다.\"\n\n\n#"
  },
  {
    "objectID": "content/03wk-2.html#숙제",
    "href": "content/03wk-2.html#숙제",
    "title": "03wk-2: [R] – if, if-else, if-elseif-else // 숙제",
    "section": "4. 숙제",
    "text": "4. 숙제\n1. 아래의 코드를 관찰하고 올바르게 고쳐라.\n\nx=-1\nif (x&gt;0){\n    print(log(x))\n}\nelse if(x==0){\n    x=1e-100\n    print('x=0에서는 log(x)가 정의되지 않으므로 x=1e-100의 값으로 바꾸어 계산하겠습니다.')\n    print(log(x))\n}else{ \n    print('x가음수입니다.')\n}\n\nError: Error in Unknown source: &lt;text&gt;:5:1: unexpected 'else'\n4: }\n5: else\n   ^\n\n\n(풀이)\n\nx=-1\nif (x&gt;0){\n    print(log(x))\n}else if(x==0){\n    x=1e-100\n    print('x=0에서는 log(x)가 정의되지 않으므로 x=1e-100의 값으로 바꾸어 계산하겠습니다.')\n    print(log(x))\n}else{ \n    print('x가음수입니다.')\n}\n\n[1] \"x가음수입니다.\"\n\n\n2. 함수 check가 올바르게 동작하도록 코드를 수정하라.\n\ncheck&lt;- function(x){\n    if(x%%2==0){\n        print(\"x는 2의 배수\")\n    }else if(x%%3==0){\n        print(\"x는 3의 배수\")\n    }else if(x%%6==0){\n        print(\"x는 2의 배수\")\n        print(\"x는 3의 배수\")\n    }else{\n        print(\"x는 3의 배수도 아니고, 2의 배수도 아니다\")\n    }\n}\n\n\ncheck(3)\n\n[1] \"x는 3의 배수\"\n\n\n\ncheck(4)\n\n[1] \"x는 2의 배수\"\n\n\n\ncheck(5)\n\n[1] \"x는 3의 배수도 아니고, 2의 배수도 아니다\"\n\n\n\ncheck(6) # 여기가 이상하게 나옴..\n\n[1] \"x는 2의 배수\"\n\n\n\ncheck(7)\n\n[1] \"x는 3의 배수도 아니고, 2의 배수도 아니다\"\n\n\n(풀이)\n\ncheck&lt;- function(x){\n    if(x%%6==0){\n        print(\"x는 2의 배수\")\n        print(\"x는 3의 배수\")\n    }else if(x%%2==0){\n        print(\"x는 2의 배수\")\n    }else if(x%%3==0){\n        print(\"x는 3의 배수\")\n    }else{\n        print(\"x는 3의 배수도 아니고, 2의 배수도 아니다\")\n    }\n}\n\n\ncheck(3)\n\n[1] \"x는 3의 배수\"\n\n\n\ncheck(4)\n\n[1] \"x는 2의 배수\"\n\n\n\ncheck(5)\n\n[1] \"x는 3의 배수도 아니고, 2의 배수도 아니다\"\n\n\n\ncheck(6) # 이제 잘나옴\n\n[1] \"x는 2의 배수\"\n[1] \"x는 3의 배수\"\n\n\n\ncheck(7)\n\n[1] \"x는 3의 배수도 아니고, 2의 배수도 아니다\""
  },
  {
    "objectID": "content/15wk-1.html#mpg자료",
    "href": "content/15wk-1.html#mpg자료",
    "title": "15wk-1: [시각화] – mpg자료 시각화",
    "section": "1. mpg자료",
    "text": "1. mpg자료\n\nlibrary(tidyverse)\n\n\ndf = mpg\n\n- 칼럼이름들 출력\n\nnames(df)\n\n [1] \"manufacturer\" \"model\"        \"displ\"        \"year\"         \"cyl\"         \n [6] \"trans\"        \"drv\"          \"cty\"          \"hwy\"          \"fl\"          \n[11] \"class\"       \n\n\n- 칼럼설명\n\n\n\n\n\n\n\n\n칼럼 이름\n설명\n예시 값\n\n\n\n\nmanufacturer\n제조사 이름\naudi, ford\n\n\nmodel\n자동차 모델명\na4, f150 pickup 4wd\n\n\ndispl\n배기량 (liters)\n1.8, 5.3\n\n\nyear\n제조 연도\n1999, 2008\n\n\ncyl\n실린더 수\n4, 6, 8\n\n\ntrans\n변속기 종류 (수동/자동 + 단수)\nauto(l5), manual(m6)\n\n\ndrv\n구동 방식 (f: 전륜, r: 후륜, 4: 사륜)\nf, r, 4\n\n\ncty\n도심 연비 (miles per gallon)\n18, 21\n\n\nhwy\n고속도로 연비 (miles per gallon)\n26, 30\n\n\nfl\n연료 종류 (p: premium, r: regular, e: ethanol)\np, r, e\n\n\nclass\n차량 분류 (차량 유형)\nsuv, compact"
  },
  {
    "objectID": "content/15wk-1.html#시각화-예시",
    "href": "content/15wk-1.html#시각화-예시",
    "title": "15wk-1: [시각화] – mpg자료 시각화",
    "section": "2. 시각화 예시",
    "text": "2. 시각화 예시\n#예시1\n\ngeom_point: x=displ, y=hwy\n\n\nggplot(df) + geom_point(aes(x=displ, y=hwy))\n\n\n\n\n\n\n\n\n\n\n\n\nx가 증가할수록, y는 작아지는 경향이 있음.\n배기량이 증가할수록 고속도로 연비가 작아지는 경향이 있음을 관찰\n\n#\n# 예시2\n\ngeom_point: x=displ, y=hwy\ngeom_line: x=displ, y=hwy\n\n\nggplot(df) + \ngeom_point(aes(x=displ, y=hwy)) +\ngeom_line(aes(x=displ, y=hwy)) \n\n\n\n\n\n\n\n\n\n\n\n\nfig = ggplot(df)\npoint = geom_point(aes(x=displ, y=hwy))\nline = geom_line(aes(x=displ, y=hwy)) \n\n\nfig + line + point\n\n\n\n\n\n\n\n\n\n\n\n#\n# 예시3 –\n\ngeom_point: x=displ, y=hwy\ngeom_line: x=displ, y=hwy\ngeom_smooth: x=displ, y=hwy\n\n\nggplot(df) + \ngeom_point(aes(x=displ, y=hwy)) +\ngeom_line(aes(x=displ, y=hwy)) + \ngeom_smooth(aes(x=displ, y=hwy))\n\n\n\n\n\n\n\n\n\n\n\n\nsmooth = geom_smooth(aes(x=displ, y=hwy))\nfig + point + line + smooth\n\n\n\n\n\n\n\n\n\n\n\n#\n# 예시4\n\ngeom_point: x=displ, y=hwy\ngeom_smooth: x=displ, y=hwy\n\n\nggplot(df) + \ngeom_point(aes(x=displ, y=hwy)) +\ngeom_smooth(aes(x=displ, y=hwy))\n\n\n\n\n\n\n\n\n\n\n\n#\n# 예시5\n\ngeom_point: x=displ, y=hwy, color=drv\ngeom_smooth: x=displ, y=hwy\n\n\nggplot(df) + \ngeom_point(aes(x=displ, y=hwy, color=drv)) + \ngeom_smooth(aes(x=displ, y=hwy))\n\n\n\n\n\n\n\n\n\n\n\n#\n# 예시6\n\ngeom_point: x=displ, y=hwy, color=drv\ngeom_smooth: x=displ, y=hwy, color=drv\n\n\nggplot(df) + \ngeom_point(aes(x=displ, y=hwy, color=drv)) + \ngeom_smooth(aes(x=displ, y=hwy, color=drv))\n\n\n\n\n\n\n\n\n\n\n\n#\n# 예시7\n\ngeom_point: x=displ, y=hwy, shape=drv\ngeom_smooth: x=displ, y=hwy, lty=drv\n\n\nggplot(df) + \ngeom_point(aes(x=displ, y=hwy, shape=drv)) + \ngeom_smooth(aes(x=displ, y=hwy, lty=drv))\n\n\n\n\n\n\n\n\n\n\n\n#\n# 예시8\n\ngeom_point: x=displ, y=hwy, shape=drv, manufacturer=color\ngeom_smooth: x=displ, y=hwy, lty=drv\n\n\nggplot(df) + \ngeom_point(aes(x=displ, y=hwy, shape=drv, color=manufacturer)) + \ngeom_smooth(aes(x=displ, y=hwy, lty=drv))\n\n\n\n\n\n\n\n\n\n\n\n#\n# 예시9\n\ngeom_point: x=displ, y=hwy, color=drv\ngeom_smooth: x=displ, y=hwy, color=drv\ngeom_smooth: x=displ, y=hwy\n\n\nggplot(df) + \ngeom_point(aes(x=displ, y=hwy, color=drv)) + \ngeom_smooth(aes(x=displ, y=hwy, color=drv)) +\ngeom_smooth(aes(x=displ, y=hwy))\n\n\n\n\n\n\n\n\n\n\n\n#\n# 예시10\n\ngeom_point: x=displ, y=hwy, color=drv\ngeom_smooth: x=displ, y=hwy, color=drv // lty=2, alpha=0.2\ngeom_smooth: x=displ, y=hwy // color=\"black\"\n\n\nggplot(df) + \ngeom_point(aes(x=displ, y=hwy, color=drv)) + \ngeom_smooth(aes(x=displ, y=hwy,color=drv), alpha=0.2, lty=2) + \ngeom_smooth(aes(x=displ, y=hwy),color='black')\n\n\n\n\n\n\n\n\n\n\n\n#\n# 예시11\n\ngeom_point: x=displ, y=hwy, color=drv, size=cyl // alpha=0.2\ngeom_smooth: x=displ, y=hwy, color=drv // lty=2, alpha=0.2\ngeom_smooth: x=displ, y=hwy // color=\"black\"\n\n\nggplot(df) + \ngeom_point(aes(x=displ, y=hwy, color=drv, size=cyl), alpha=0.2) + \ngeom_smooth(aes(x=displ, y=hwy,color=drv), alpha=0.2, lty=2) + \ngeom_smooth(aes(x=displ, y=hwy),color='black')\n\n\n\n\n\n\n\n\n\n\n\n\nfig = ggplot(df) \npoint = geom_point(aes(x=displ, y=hwy, color=drv, size=cyl), alpha=0.2)\nsmooth1 = geom_smooth(aes(x=displ, y=hwy,color=drv), alpha=0.2, lty=2) \nsmooth2 = geom_smooth(aes(x=displ, y=hwy),color='black')\n\n\nfig + point + smooth1 + smooth2 \n\n\n\n\n\n\n\n\n\n\n\n#"
  },
  {
    "objectID": "content/08wk-1.html#네오와-프로도",
    "href": "content/08wk-1.html#네오와-프로도",
    "title": "08wk-1: [Python] – 네오와 프로도, 딕셔너리를 이용한 치환 // 숙제",
    "section": "1. 네오와 프로도",
    "text": "1. 네오와 프로도\n\n카카오 채용연계형 인턴쉽 기출문제\n\nref: https://school.programmers.co.kr/learn/courses/30/lessons/81301?language=python3\n네오와 프로도가 숫자놀이를 하고 있습니다. 네오가 프로도에게 숫자를 건넬 때 일부 자릿수를 영단어로 바꾼 카드를 건네주면 프로도는 원래 숫자를 찾는 게임입니다. 다음은 숫자의 일부 자릿수를 영단어로 바꾸는 예시입니다.\n1478 --&gt; \"one4seveneight\"\n234567 --&gt; \"23four5six7\"\n10203 --&gt; \"1zerotwozero3\"\n이렇게 숫자의 일부 자릿수가 영단어로 바뀌어졌거나, 혹은 바뀌지 않고 그대로인 문자열 s가 매개변수로 주어집니다. s가 의미하는 원래 숫자를 return 하도록 solution 함수를 완성해주세요.\n참고로 각 숫자에 대응되는 영단어는 다음 표와 같습니다.\n\n\n\n숫자\n영단어\n\n\n\n\n0\nzero\n\n\n1\none\n\n\n2\ntwo\n\n\n3\nthree\n\n\n4\nfour\n\n\n5\nfive\n\n\n6\nsix\n\n\n7\nseven\n\n\n8\neight\n\n\n9\nnine\n\n\n\n- 제한사항\n\n1 ≤ s의 길이 ≤ 50\ns가 “zero” 또는 “0”으로 시작하는 경우는 주어지지 않습니다.\nreturn 값이 1 이상 2,000,000,000 이하의 정수가 되는 올바른 입력만 s로 주어집니다.\n\n- 입출력 예\n\n\n\ns\nresult\n\n\n\n\n“one4seveneight”\n1478\n\n\n“23four5six7”\n234567\n\n\n“2three45sixseven”\n234567\n\n\n“123”\n123\n\n\n\n- 입출력 예 설명\n\n입출력 예 #1 – 문제 예시와 같습니다.\n입출력 예 #2 – 문제 예시와 같습니다.\n입출력 예 #3 – “three”는 3, “six”는 6, “seven”은 7에 대응되기 때문에 정답은 입출력 예 #2와 같은 234567이 됩니다. 입출력 예 #2와 #3과 같이 같은 정답을 가리키는 문자열이 여러 가지가 나올 수 있습니다.\n입출력 예 #4 – s에는 영단어로 바뀐 부분이 없습니다.\n\n(풀이)\n\ndef solution(s):\n    dct = {\n        \"one\":\"1\",\n        \"two\":\"2\",\n        \"three\":\"3\",\n        \"four\":\"4\",\n        \"five\":\"5\",\n        \"six\":\"6\",\n        \"seven\":\"7\",\n        \"eight\":\"8\",\n        \"nine\":\"9\",\n        \"zero\":\"0\",\n    }    \n    for k,v in dct.items():\n        s = s.replace(k,v)\n    return int(s)    \n\n\nsolution(\"one4seveneight\")\n\n1478\n\n\n\nsolution(\"123\")\n\n123"
  },
  {
    "objectID": "content/08wk-1.html#딕셔너리를-이용한-치환-star",
    "href": "content/08wk-1.html#딕셔너리를-이용한-치환-star",
    "title": "08wk-1: [Python] – 네오와 프로도, 딕셔너리를 이용한 치환 // 숙제",
    "section": "2. 딕셔너리를 이용한 치환 (\\(\\star\\))",
    "text": "2. 딕셔너리를 이용한 치환 (\\(\\star\\))\n# 예제 – 아래와 같은 리스트를 고려하자.\n\nlst = ['딸기','사과','바나나','딸기','사과','오토바이','자동차','버스','기차','오토바이','자동차']\n\n다음의 맵핑규칙에 따라서 위의 리스트의 원소를 바꾸어라.\n\n\n\n변환전\n변환후\n\n\n\n\n딸기\n과일\n\n\n사과\n과일\n\n\n바나나\n과일\n\n\n오토바이\n탈것\n\n\n자동차\n탈것\n\n\n버스\n탈것\n\n\n기차\n탈것\n\n\n\n(풀이1) – elif를 사용\n\nlst2 = []\nfor l in lst:\n    if l=='딸기':\n        lst2.append('과일')\n    elif l=='사과':\n        lst2.append('과일')\n    elif l=='바나나':\n        lst2.append('과일')\n    elif l=='오토바이':\n        lst2.append('탈것')\n    elif l=='자동차':\n        lst2.append('탈것')\n    elif l=='버스':\n        lst2.append('탈것')\n    else:\n        lst2.append('탈것')        \n\n\nlst,lst2\n\n(['딸기', '사과', '바나나', '딸기', '사과', '오토바이', '자동차', '버스', '기차', '오토바이', '자동차'],\n ['과일', '과일', '과일', '과일', '과일', '탈것', '탈것', '탈것', '탈것', '탈것', '탈것'])\n\n\n(풀이2) – dct사용1\n\ndct = {'딸기':'과일', '사과':'과일', '바나나':'과일', '오토바이':'탈것', '자동차':'탈것', '버스':'탈것', '기차':'탈것'}\n\n\nlst2 = [dct[l] for l in lst]\nlst2\n\n['과일', '과일', '과일', '과일', '과일', '탈것', '탈것', '탈것', '탈것', '탈것', '탈것']\n\n\n(풀이3) – dct사용2\n\ndct = {'탈것': ['오토바이', '자동차', '버스', '기차'], '과일':['딸기','사과','바나나']}\ndct['과일']\n\n['딸기', '사과', '바나나']\n\n\n\nlst2 = [k for l in lst for k,v in dct.items() if l in v]\n\n\nlst, lst2\n\n(['딸기', '사과', '바나나', '딸기', '사과', '오토바이', '자동차', '버스', '기차', '오토바이', '자동차'],\n ['과일', '과일', '과일', '과일', '과일', '탈것', '탈것', '탈것', '탈것', '탈것', '탈것'])\n\n\n#"
  },
  {
    "objectID": "content/08wk-1.html#숙제",
    "href": "content/08wk-1.html#숙제",
    "title": "08wk-1: [Python] – 네오와 프로도, 딕셔너리를 이용한 치환 // 숙제",
    "section": "3. 숙제",
    "text": "3. 숙제\n아래와 같은 리스트가 있다고 하자.\n\nlst = list('abcd'*2+'bbb')\nlst\n\n['a', 'b', 'c', 'd', 'a', 'b', 'c', 'd', 'b', 'b', 'b']\n\n\n(1) 아래의 규칙에 의하여 lst의 각 원소의 값을 바꾸고 싶다고 하자. 이를 구현하는 코드를 작성하라.\n\n\n\n변환전\n변환후\n\n\n\n\n‘a’\n[1,0,0,0]\n\n\n‘b’\n[0,1,0,0]\n\n\n‘c’\n[0,0,1,0]\n\n\n‘d’\n[0,0,0,1]\n\n\n\n(2) (1)을 역변환하라. 즉 아래의 리스트를\n\nlst2= [\n    [1, 0, 0, 0],\n    [0, 1, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 1],\n    [1, 0, 0, 0],\n    [0, 1, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 1],\n    [0, 1, 0, 0],\n    [0, 1, 0, 0],\n    [0, 1, 0, 0]\n]\n\n아래와 같이 바꾸라.\n\nlst\n\n['a', 'b', 'c', 'd', 'a', 'b', 'c', 'd', 'b', 'b', 'b']"
  },
  {
    "objectID": "content/06wk-1.html#tuple",
    "href": "content/06wk-1.html#tuple",
    "title": "06wk-1: [Python] – tuple // 숙제",
    "section": "1. tuple",
    "text": "1. tuple\n\nA. 선언\n- 소괄호를 이용하여 선언한다.\n\na=(1,2,3)\na\n\n(1, 2, 3)\n\n\n\ntype(a)\n\ntuple\n\n\n- 생략가능하다는 점이 포인트이다.\n\na=1,2,3\na\n\n(1, 2, 3)\n\n\n\ntype(a)\n\ntuple\n\n\n- 원소가 하나인 튜플을 만들고 싶다면?\n\na=(1,)\na\n\n(1,)\n\n\n\n\nB. 연산\n- 리스트와 동일\n\n(1,2)+(3,4,5)\n\n(1, 2, 3, 4, 5)\n\n\n\n(1,2)*2\n\n(1, 2, 1, 2)\n\n\n\n\nC. 인덱싱\n- 리스트와 동일\n\na=(1,2,3,-4,-5)\na\n\n(1, 2, 3, -4, -5)\n\n\n\na[-1]\n\n-5\n\n\n\na[-3:]\n\n(3, -4, -5)\n\n\n\n\nD. 리스트 vs 튜플\n- 공통점: (1) 컨테이너형타입이라는 점, 그리고 (2) 연산 및 인덱싱을 하는 방법은 리스트와 같음\n\n차이점1: [] 대신에 ()를 사용한다.\n차이점2: 불변형이다. (원소의 값을 바꿀 수 없음)\n차이점3: 하나의 원소를 선언할 때는 (1,)와 같이 해야 한다.\n차이점4: 의미가 명확할때는 튜플의 ()를 생략가능하다.\n\n- 튜플은 컨테이너형 자료라는 점에서 리스트와 비슷하다.\n\na=(4,6,'pencil', 3.2+4.6j, [3,4])\n\n\ntype(a[2])\n\nstr\n\n\n\ntype(a[3])\n\ncomplex\n\n\n- 튜플과 리스트는 + 와 * 가 같은 의미를 가진다.\n\n(1,2) + (3,4,5)\n\n(1, 2, 3, 4, 5)\n\n\n\n(1,2) * 2\n\n(1, 2, 1, 2)\n\n\n- 튜플은 리스트와 인덱싱을 하는 방법이 같다.\n\ntpl = (11,21,31)\ntpl[1:]\n\n(21, 31)\n\n\n- 차이점2: 튜플은 불변형이라는 점에서 리스트와 다르다.\n\na=(4,6,'pencil', 3.2+4.6j, [3,4])\n\n\na[2] = 'Pencil'\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[77], line 1\n----&gt; 1 a[2] = 'Pencil'\n\nTypeError: 'tuple' object does not support item assignment\n\n\n\n참고로 a를 튜플이 아니라 리스트로 선언하면 값이 잘 바뀐다.\n\na=[4,6,'pencil', 3.2+4.6j, [3,4]]\n\n\na[2]='Pencil'\n\n\na\n\n[4, 6, 'Pencil', (3.2+4.6j), [3, 4]]\n\n\n- 차이점3: 하나의 원소로 이루어진 튜플을 만들때는 쉼표를 붙여야 함.\n\n[1]+[2,3,4]\n\n[1, 2, 3, 4]\n\n\n\n(1,)+(2,3,4)\n\n(1, 2, 3, 4)\n\n\n- 차이점4: 의미가 명확할때 튜플의 괄호는 생략가능하다. (이게 중요합니다)\n\na=1,2\na\n\n(1, 2)\n\n\n의미가 명확할때 생략해야함\n\n1,2 + 3,4,5 \n\n(1, 5, 4, 5)\n\n\n\n(1,2) + (3,4,5) \n\n(1, 2, 3, 4, 5)\n\n\n\n\nE. 슬기로운 튜플사용 (\\(\\star\\))\n# 예제 – 여러변수를 동시에 출력하고 싶을 경우 (다중출력?)\n변수를 아래와 같이 선언하였다고 하자.\n\na=1\nb=2\nc=3\n\n선언된 값을 확인하려면?\n\na\n\n1\n\n\n\nb\n\n2\n\n\n\nc\n\n3\n\n\n튜플을 이용하면?\n\na,b,c # 괄호하나 생략하는것이 이렇게 편하다..\n\n(1, 2, 3)\n\n\n#\n# 예제2 – 다중할당1 (여러개의 변수를 동시에 선언하고 싶을 경우)\n아래와 같이 =를 5번 쓰면 5개의 변수를 선언할 수 있다.\n\nname = 'Tom'\nage = 20 \nsex = 'M'\nheight = 180\nweight = 70\n\n튜플을 이용하면 좀더 간단히 하나의 = 로도 아래와 같이 선언할 수 있다.\n\nname, age, sex, height, weight = 'Tom', 20, 'M', 180, 70  # 다중할당\n\n#\n# 예제3 – 다중할당2, 위도와 경도\n\ncoor = (37,127) # 서울 \ncoor\n\n(37, 127)\n\n\n\nlat, long = coor # 다중할당\n\n\nlat \n\n37\n\n\n\nlong \n\n127\n\n\n#\n# 잠깐만 – 다중할당은 꼭 튜플에서만 가능한가?\n그건 아니다…\n\n[x,y,z] = [1,2,3] \nx,y,z # 다중출력 \n\n(1, 2, 3)\n\n\n\n[x,y] = 'hi'\nx,y \n\n튜플과 같이 사용하면 가독성이 극대화 (그래서 다중할당은 거의 튜플과 세트로 사용함)\n\nx,y,z = 1,2,3\nx,y,z # 다중출력 \n\n(1, 2, 3)\n\n\n\nx,y = 'hi'\nx,y \n\n('h', 'i')\n\n\n#\n# 예제 – 임시변수 사용없이 두 변수의 값을 교환\n\na=10\nb=20\n\n\na,b\n\n(10, 20)\n\n\n\na,b = b,a \n\n\na,b\n\n(20, 10)\n\n\n#\n# 예제 – for문과 튜플\n\nlst = [['guebin', 202112345, 'M'],\n       ['iu',202254321, 'F'],\n       ['hodong', 202011223, 'M']]\nlst\n\n[['guebin', 202112345, 'M'],\n ['iu', 202254321, 'F'],\n ['hodong', 202011223, 'M']]\n\n\n\nfor name,studentid,sex in lst: \n    print(name,studentid)\n\nguebin 202112345\niu 202254321\nhodong 202011223\n\n\n#\n# 예제 – for문과 튜플, dummy variable _\n\nfor name,studentid,sex in lst: \n    print(studentid)\n\n202112345\n202254321\n202011223\n\n\n\nfor _,studentid,_ in lst: \n    print(studentid)\n\n202112345\n202254321\n202011223\n\n\n\nfor _,_,sex in lst: \n    print(sex)\n\nM\nF\nM\n\n\n\nfor name,_,sex in lst: \n    print(name,sex)\n\nguebin M\niu F\nhodong M\n\n\n\nfor name,_,_  in lst: \n    print(name)\n\nguebin\niu\nhodong\n\n\n#\n\n\nF. 튜플을 왜 쓸까? – 제 생각..\n- 질문: 리스트를 쓰지 않고 왜 튜플을 써야하나?\n- 답변1: (책의 설명)\n\n초보적인 설명: 실수로 값을 바꾸는걸 방지할 수 있다.\n더 정확한 설명: 빠르다, 여러사람과 작업하기 유리하다.\n\n- 답변2: 괄호를 생략할 수 있기 때문에, 리스트 말고 튜플을 쓰면 편함.\n\n소괄호의 생략 + 언패킹 \\(\\Rightarrow\\) 엄청난 가독성.\n컴공과 사람들 의견: 튜플 + 언패킹 \\(\\Rightarrow\\) 엄청난 가독성 \\(\\Rightarrow\\) 충격 \\(\\Rightarrow\\) “파이썬 편하더라고요..”\n\n\n\nG. 연습문제들\n# 문제. 길이가 1인 튜플을 만들어 자신의 학번을 저장하라. 길이가 1인 튜플을 만들어 자신의 영문이름을 저장하라. 두 튜플을 + 연산자로 합쳐아래와 같은 출력결과를 얻어라. 최종 결과는 예를들면 아래와 같아야 한다.\n\n('2021-43052', 'GuebinChoi')\n\n(풀이)\n\na=  ('2021-43052', )\nb= ('GuebinChoi',)\na+b\n\n('2021-43052', 'GuebinChoi')\n\n\n파이썬프로그래밍 수강생. 아래는 파이썬프로그래밍 수강생들의 학번,이름, 출석점수, 과제점수, 중간고사점수, 기말고사점수를 저장한 중첩리스트이다.\n\nlst = [['2021-43052', 'GuebinChoi', 5, 10, 20, 25],\n       ['2019-12342', 'Heung-min Son', 10, 15, 30, 15],\n       ['2018-32234', 'hynn', 7, 20, 30, 15],\n       ['2022-42323', 'Minji', 8, 20, 20, 35],\n       ['2023-55342', 'Hanni', 7, 20, 30, 35],\n       ['2022-46624', 'Danielle', 3, 15, 30, 40],\n       ['2022-11239', 'Haerin', 10, 20, 30, 40],\n       ['2022-32114', 'Hyein', 10, 20, 20, 35]]\nlst \n\n[['2021-43052', 'GuebinChoi', 5, 10, 20, 25],\n ['2019-12342', 'Heung-min Son', 10, 15, 30, 15],\n ['2018-32234', 'hynn', 7, 20, 30, 15],\n ['2022-42323', 'Minji', 8, 20, 20, 35],\n ['2023-55342', 'Hanni', 7, 20, 30, 35],\n ['2022-46624', 'Danielle', 3, 15, 30, 40],\n ['2022-11239', 'Haerin', 10, 20, 30, 40],\n ['2022-32114', 'Hyein', 10, 20, 20, 35]]\n\n\n# 문제. 파이썬프로그래밍 수강생의 수는 모두 몇명인가?\n(풀이)\n\nlen(lst)\n\n8\n\n\n# 문제. 전북대학교 지침에 따라 출석점수가 7보다 작은 학생은 (즉 출석점수 &lt; 7 일 경우) F학점을 부여하게 되어있다. 이 기준에 따르면 F를 받는 학생은 모두 몇명인가?\n(풀이)\n\nsum([student[2]&lt;7 for student in lst])\n\n2\n\n\n(풀이2)\n\nsum([att&lt;7 for _,_,att,_,_,_ in lst])\n\n2\n\n\n(풀이3)\n\nsum([att&lt;7 for _,_,att,*other in lst])\n\n2\n\n\n# 문제. 파이썬프로그래밍 수업의 경우 출석+과제점수 &lt; 21 일 경우 F학점을 부여한다고 한다. 이 기준에 따르면 F를 받는 학생은 모두 몇명인가?\n(풀이)\n\nsum([sum(l[2:4])&lt;21 for l in lst])\n\n2\n\n\n# 문제. 리스트의 정렬순서를 [학번, 이름, …, 기말고사점수] 가 아니라 [이름, 학번, … , 기말고사점수] 와 같이 되도록 변경하는 코드를 작성하라.\n(출력예시)\n\n[['GuebinChoi', '2021-43052', 5, 10, 20, 25],\n ['Heung-min Son', '2019-12342', 10, 15, 30, 15],\n ['hynn', '2018-32234', 7, 20, 30, 15],\n ['Minji', '2022-42323', 8, 20, 20, 35],\n ['Hanni', '2023-55342', 7, 20, 30, 35],\n ['Danielle', '2022-46624', 3, 15, 30, 40],\n ['Haerin', '2022-11239', 10, 20, 30, 40],\n ['Hyein', '2022-32114', 10, 20, 20, 35]]\n\n[['GuebinChoi', '2021-43052', 5, 10, 20, 25],\n ['Heung-min Son', '2019-12342', 10, 15, 30, 15],\n ['hynn', '2018-32234', 7, 20, 30, 15],\n ['Minji', '2022-42323', 8, 20, 20, 35],\n ['Hanni', '2023-55342', 7, 20, 30, 35],\n ['Danielle', '2022-46624', 3, 15, 30, 40],\n ['Haerin', '2022-11239', 10, 20, 30, 40],\n ['Hyein', '2022-32114', 10, 20, 20, 35]]\n\n\n(풀이)\n\n[[b,a,c,e,f,g] for a,b,c,e,f,g in lst]\n\n[['GuebinChoi', '2021-43052', 5, 10, 20, 25],\n ['Heung-min Son', '2019-12342', 10, 15, 30, 15],\n ['hynn', '2018-32234', 7, 20, 30, 15],\n ['Minji', '2022-42323', 8, 20, 20, 35],\n ['Hanni', '2023-55342', 7, 20, 30, 35],\n ['Danielle', '2022-46624', 3, 15, 30, 40],\n ['Haerin', '2022-11239', 10, 20, 30, 40],\n ['Hyein', '2022-32114', 10, 20, 20, 35]]"
  },
  {
    "objectID": "content/13wk-1.html",
    "href": "content/13wk-1.html",
    "title": "13wk-1: [DataFrame] – Pandas 할당, 그룹화 연산 // 숙제",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np"
  },
  {
    "objectID": "content/13wk-1.html#pandas-할당",
    "href": "content/13wk-1.html#pandas-할당",
    "title": "13wk-1: [DataFrame] – Pandas 할당, 그룹화 연산 // 숙제",
    "section": "1. Pandas: 할당",
    "text": "1. Pandas: 할당\n\nnp.random.seed(43052)\natt = np.random.choice(np.arange(10,21)*5,20)\nrep = np.random.choice(np.arange(5,21)*5,20)\nmid = np.random.choice(np.arange(0,21)*5,20)\nfin = np.random.choice(np.arange(0,21)*5,20)\ndf = pd.DataFrame({'att':att,'rep':rep,'mid':mid,'fin':fin})\ndf\n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n0\n65\n55\n50\n40\n\n\n1\n95\n100\n50\n80\n\n\n2\n65\n90\n60\n30\n\n\n3\n55\n80\n75\n80\n\n\n4\n80\n30\n30\n100\n\n\n5\n75\n40\n100\n15\n\n\n6\n65\n45\n45\n90\n\n\n7\n60\n60\n25\n0\n\n\n8\n95\n65\n20\n10\n\n\n9\n90\n80\n80\n20\n\n\n10\n55\n75\n35\n25\n\n\n11\n95\n95\n45\n0\n\n\n12\n95\n55\n15\n35\n\n\n13\n50\n80\n40\n30\n\n\n14\n50\n55\n15\n85\n\n\n15\n95\n30\n30\n95\n\n\n16\n50\n50\n45\n10\n\n\n17\n65\n55\n15\n45\n\n\n18\n70\n70\n40\n35\n\n\n19\n90\n90\n80\n90\n\n\n\n\n\n\n\n\nA. df.assign()\n- 예시: total = att*0.1 + rep*0.2 + mid*0.35 + fin*0.35 를 계산하여 할당\n\ndf.assign(total = df.att*0.1 + df.rep*0.2 + df.mid*0.35 + df.fin*0.35)\n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\ntotal\n\n\n\n\n0\n65\n55\n50\n40\n49.00\n\n\n1\n95\n100\n50\n80\n75.00\n\n\n2\n65\n90\n60\n30\n56.00\n\n\n3\n55\n80\n75\n80\n75.75\n\n\n4\n80\n30\n30\n100\n59.50\n\n\n5\n75\n40\n100\n15\n55.75\n\n\n6\n65\n45\n45\n90\n62.75\n\n\n7\n60\n60\n25\n0\n26.75\n\n\n8\n95\n65\n20\n10\n33.00\n\n\n9\n90\n80\n80\n20\n60.00\n\n\n10\n55\n75\n35\n25\n41.50\n\n\n11\n95\n95\n45\n0\n44.25\n\n\n12\n95\n55\n15\n35\n38.00\n\n\n13\n50\n80\n40\n30\n45.50\n\n\n14\n50\n55\n15\n85\n51.00\n\n\n15\n95\n30\n30\n95\n59.25\n\n\n16\n50\n50\n45\n10\n34.25\n\n\n17\n65\n55\n15\n45\n38.50\n\n\n18\n70\n70\n40\n35\n47.25\n\n\n19\n90\n90\n80\n90\n86.50\n\n\n\n\n\n\n\n\nNote: 이 방법은 df원본을 손상시키지 않음\n\n\n\nB. df.eval()\n- 예시: total = att*0.1 + rep*0.2 + mid*0.35 + fin*0.35 를 계산하여 할당\n\ndf.eval(\"total = att*0.1 + rep*0.2 + mid*0.35 + fin*0.35\")\n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\ntotal\n\n\n\n\n0\n65\n55\n50\n40\n49.00\n\n\n1\n95\n100\n50\n80\n75.00\n\n\n2\n65\n90\n60\n30\n56.00\n\n\n3\n55\n80\n75\n80\n75.75\n\n\n4\n80\n30\n30\n100\n59.50\n\n\n5\n75\n40\n100\n15\n55.75\n\n\n6\n65\n45\n45\n90\n62.75\n\n\n7\n60\n60\n25\n0\n26.75\n\n\n8\n95\n65\n20\n10\n33.00\n\n\n9\n90\n80\n80\n20\n60.00\n\n\n10\n55\n75\n35\n25\n41.50\n\n\n11\n95\n95\n45\n0\n44.25\n\n\n12\n95\n55\n15\n35\n38.00\n\n\n13\n50\n80\n40\n30\n45.50\n\n\n14\n50\n55\n15\n85\n51.00\n\n\n15\n95\n30\n30\n95\n59.25\n\n\n16\n50\n50\n45\n10\n34.25\n\n\n17\n65\n55\n15\n45\n38.50\n\n\n18\n70\n70\n40\n35\n47.25\n\n\n19\n90\n90\n80\n90\n86.50\n\n\n\n\n\n\n\n\nNote: 이 방법은 df원본을 손상시키지 않음\n\n\n\nC. df[colname] = xxx\n- 예시: total = att*0.1 + rep*0.2 + mid*0.35 + fin*0.35 를 계산하여 할당.\n\ndf['total'] = df.att*0.1 + df.rep*0.2 + df.mid*0.35 + df.fin*0.35\ndf\n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\ntotal\n\n\n\n\n0\n65\n55\n50\n40\n49.00\n\n\n1\n95\n100\n50\n80\n75.00\n\n\n2\n65\n90\n60\n30\n56.00\n\n\n3\n55\n80\n75\n80\n75.75\n\n\n4\n80\n30\n30\n100\n59.50\n\n\n5\n75\n40\n100\n15\n55.75\n\n\n6\n65\n45\n45\n90\n62.75\n\n\n7\n60\n60\n25\n0\n26.75\n\n\n8\n95\n65\n20\n10\n33.00\n\n\n9\n90\n80\n80\n20\n60.00\n\n\n10\n55\n75\n35\n25\n41.50\n\n\n11\n95\n95\n45\n0\n44.25\n\n\n12\n95\n55\n15\n35\n38.00\n\n\n13\n50\n80\n40\n30\n45.50\n\n\n14\n50\n55\n15\n85\n51.00\n\n\n15\n95\n30\n30\n95\n59.25\n\n\n16\n50\n50\n45\n10\n34.25\n\n\n17\n65\n55\n15\n45\n38.50\n\n\n18\n70\n70\n40\n35\n47.25\n\n\n19\n90\n90\n80\n90\n86.50\n\n\n\n\n\n\n\n\nNote: 이 방법은 df를 영구적으로 변화시킴"
  },
  {
    "objectID": "content/13wk-1.html#그룹화연산-airline-자료로-연습",
    "href": "content/13wk-1.html#그룹화연산-airline-자료로-연습",
    "title": "13wk-1: [DataFrame] – Pandas 할당, 그룹화 연산 // 숙제",
    "section": "2. 그룹화연산 – AIRLINE 자료로 연습",
    "text": "2. 그룹화연산 – AIRLINE 자료로 연습\n\ndf = pd.read_csv('flights.csv')\ndf.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 58492 entries, 0 to 58491\nData columns (total 14 columns):\n #   Column     Non-Null Count  Dtype  \n---  ------     --------------  -----  \n 0   MONTH      58492 non-null  int64  \n 1   DAY        58492 non-null  int64  \n 2   WEEKDAY    58492 non-null  int64  \n 3   AIRLINE    58492 non-null  object \n 4   ORG_AIR    58492 non-null  object \n 5   DEST_AIR   58492 non-null  object \n 6   SCHED_DEP  58492 non-null  int64  \n 7   DEP_DELAY  57659 non-null  float64\n 8   AIR_TIME   57474 non-null  float64\n 9   DIST       58492 non-null  int64  \n 10  SCHED_ARR  58492 non-null  int64  \n 11  ARR_DELAY  57474 non-null  float64\n 12  DIVERTED   58492 non-null  int64  \n 13  CANCELLED  58492 non-null  int64  \ndtypes: float64(3), int64(8), object(3)\nmemory usage: 6.2+ MB\n\n\n- 각 변수들에 대한 설명은 아래와 같다. (ChatGPT의 도움을 받아 정리함)\n\nMONTH: 비행이 이루어진 월을 나타냄. 1에서 12 사이의 값을 갖음.\nDAY: 비행이 이루어진 일자를 나타냄. 월에 따라 1~28/29/30/31 사이의 값을 가질 수 있음.\nWEEKDAY: 비행이 이루어진 요일을 나타냄. 일반적으로 1(일요일)부터 7(토요일)까지의 값을 갖음.\nAIRLINE: 해당 항공편을 운영하는 항공사의 약어나 코드를 나타냄.\nORG_AIR: 비행기가 출발하는 공항의 약어나 코드를 나타냄.\nDEST_AIR: 비행기가 도착하는 공항의 약어나 코드를 나타냄.\nSCHED_DEP: 원래의 예정된 출발 시간을 나타냄. 시간은 일반적으로 HHMM 형식으로 표시될 수 있음.\nDEP_DELAY: 출발 지연 시간을 나타냄. 음수 값은 조기 출발, 양수 값은 지연을 의미함.\nAIR_TIME: 실제 공중에서 비행한 시간을 분 단위로 나타냄.\nDIST: 비행 거리를 나타냄. 일반적으로 마일 또는 킬로미터로 표시됨.\nSCHED_ARR: 원래의 예정된 도착 시간을 나타냄. SCHED_DEP와 같은 형식으로 표시될 수 있음.\nARR_DELAY: 도착 지연 시간을 나타냄. 음수는 조기 도착, 양수는 지연을 의미함.\nDIVERTED: 항공편이 다른 곳으로 우회되었는지를 나타냄. 1은 우회, 0은 정상 경로를 의미함.\nCANCELLED: 항공편이 취소되었는지 여부를 나타냄. 1은 취소, 0은 취소되지 않음을 의미함.\n\n# 예제1: 항공사별로 도착지연시간의 평균을 구하라.\n(풀이1)\n\n{l:df[df.AIRLINE == l]['ARR_DELAY'].mean().item() for l in set(df.AIRLINE)}\n\n{'OO': 7.593463035019456,\n 'US': 1.6811048336472065,\n 'B6': 8.692592592592593,\n 'UA': 7.765755208333333,\n 'F9': 13.630651340996168,\n 'EV': 7.034579603299982,\n 'AS': -0.8333333333333334,\n 'WN': 6.397352587244284,\n 'VX': 5.348884381338743,\n 'DL': 0.3396906727393491,\n 'HA': 4.972972972972973,\n 'MQ': 6.860591430295715,\n 'AA': 5.542660550458716,\n 'NK': 18.43606998654105}\n\n\n(풀이2)\n\ndf.groupby(\"AIRLINE\")['ARR_DELAY'].mean()\n\nAIRLINE\nAA     5.542661\nAS    -0.833333\nB6     8.692593\nDL     0.339691\nEV     7.034580\nF9    13.630651\nHA     4.972973\nMQ     6.860591\nNK    18.436070\nOO     7.593463\nUA     7.765755\nUS     1.681105\nVX     5.348884\nWN     6.397353\nName: ARR_DELAY, dtype: float64\n\n\n(풀이3)\n\ndf.groupby(\"AIRLINE\").agg({'ARR_DELAY':np.mean})\n#df.groupby([\"AIRLINE\"]).agg({'ARR_DELAY':[np.mean]})\n\n/tmp/ipykernel_626910/1410576880.py:1: FutureWarning: The provided callable &lt;function mean at 0x7e60915a1760&gt; is currently using SeriesGroupBy.mean. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"mean\" instead.\n  df.groupby(\"AIRLINE\").agg({'ARR_DELAY':np.mean})\n\n\n\n\n\n\n\n\n\nARR_DELAY\n\n\nAIRLINE\n\n\n\n\n\nAA\n5.542661\n\n\nAS\n-0.833333\n\n\nB6\n8.692593\n\n\nDL\n0.339691\n\n\nEV\n7.034580\n\n\nF9\n13.630651\n\n\nHA\n4.972973\n\n\nMQ\n6.860591\n\n\nNK\n18.436070\n\n\nOO\n7.593463\n\n\nUA\n7.765755\n\n\nUS\n1.681105\n\n\nVX\n5.348884\n\n\nWN\n6.397353\n\n\n\n\n\n\n\n#\n# 예제2: 항공사별로 비행취소건수의 합계를 구하라. 취소건수가 높은 항공사순으로 정렬하라.\n(풀이1)\n\ndf.groupby([\"AIRLINE\"])['CANCELLED'].sum().sort_values(ascending=False)\n\nAIRLINE\nAA    154\nMQ    152\nEV    146\nOO    142\nUA     93\nWN     93\nDL     38\nNK     25\nUS     21\nF9     10\nVX      6\nB6      1\nAS      0\nHA      0\nName: CANCELLED, dtype: int64\n\n\n(풀이2)\n\ndf.groupby([\"AIRLINE\"]).agg({'CANCELLED':np.sum}).sort_values(by=\"CANCELLED\",ascending=False)\n\n/tmp/ipykernel_626910/1571022381.py:1: FutureWarning: The provided callable &lt;function sum at 0x7e60915a0360&gt; is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"sum\" instead.\n  df.groupby([\"AIRLINE\"]).agg({'CANCELLED':np.sum}).sort_values(by=\"CANCELLED\",ascending=False)\n\n\n\n\n\n\n\n\n\nCANCELLED\n\n\nAIRLINE\n\n\n\n\n\nAA\n154\n\n\nMQ\n152\n\n\nEV\n146\n\n\nOO\n142\n\n\nUA\n93\n\n\nWN\n93\n\n\nDL\n38\n\n\nNK\n25\n\n\nUS\n21\n\n\nF9\n10\n\n\nVX\n6\n\n\nB6\n1\n\n\nAS\n0\n\n\nHA\n0\n\n\n\n\n\n\n\n(풀이3)\n\ndf.groupby([\"AIRLINE\"]).agg({'CANCELLED':[np.sum]}).sort_values(by=(\"CANCELLED\",\"sum\"),ascending=False)\n\n/tmp/ipykernel_626910/3780745755.py:1: FutureWarning: The provided callable &lt;function sum at 0x7e60915a0360&gt; is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"sum\" instead.\n  df.groupby([\"AIRLINE\"]).agg({'CANCELLED':[np.sum]}).sort_values(by=(\"CANCELLED\",\"sum\"),ascending=False)\n\n\n\n\n\n\n\n\n\nCANCELLED\n\n\n\nsum\n\n\nAIRLINE\n\n\n\n\n\nAA\n154\n\n\nMQ\n152\n\n\nEV\n146\n\n\nOO\n142\n\n\nUA\n93\n\n\nWN\n93\n\n\nDL\n38\n\n\nNK\n25\n\n\nUS\n21\n\n\nF9\n10\n\n\nVX\n6\n\n\nB6\n1\n\n\nAS\n0\n\n\nHA\n0\n\n\n\n\n\n\n\n# 예제3: 항공사별로 비행취소율을 구하라. 비행취소율이 가장 높은 항공사 순으로 정렬하라.\n(풀이)\n\ndf.groupby(\"AIRLINE\")[\"CANCELLED\"].mean().sort_values(ascending=False)\n\nAIRLINE\nMQ    0.043791\nEV    0.024923\nOO    0.021554\nAA    0.017303\nNK    0.016491\nUS    0.013003\nUA    0.011935\nWN    0.011048\nF9    0.007593\nVX    0.006042\nDL    0.003585\nB6    0.001842\nAS    0.000000\nHA    0.000000\nName: CANCELLED, dtype: float64\n\n\n#\n# 예제4: (항공사,요일)별 비행취소건수와 비행취소율을 조사하라.\n(풀이)\n\ndf.groupby([\"AIRLINE\",\"WEEKDAY\"])[\"CANCELLED\"].mean()\n\nAIRLINE  WEEKDAY\nAA       1          0.032106\n         2          0.007341\n         3          0.011949\n         4          0.015004\n         5          0.014151\n                      ...   \nWN       3          0.014118\n         4          0.007911\n         5          0.005828\n         6          0.010132\n         7          0.006066\nName: CANCELLED, Length: 98, dtype: float64\n\n\n#\n# 예제5: (항공사,요일)별로 CANCELLED는 평균과 합계를 구하고 (즉 비행취소건수와 취소율을 구하고), AIR_TIME은 평균과 최대값을 구하여라.\n\n평균은 np.mean 함수를 합계는 sum 혹은 np.sum을 최대값은 np.max를 이용하라.\n\n(풀이)\n\ndf.groupby([\"AIRLINE\",\"WEEKDAY\"]).agg({'CANCELLED':[np.mean,np.sum],'AIR_TIME':[np.mean,np.max] })\n\nFutureWarning: The provided callable &lt;function mean at 0x2be0330&gt; is currently using SeriesGroupBy.mean. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"mean\" instead.\n  df.groupby([\"AIRLINE\",\"WEEKDAY\"]).agg({'CANCELLED':[np.mean,np.sum],'AIR_TIME':[np.mean,np.max] })\n&lt;ipython-input-150-5ca207a54017&gt;:1: FutureWarning: The provided callable &lt;function sum at 0x2b09040&gt; is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"sum\" instead.\n  df.groupby([\"AIRLINE\",\"WEEKDAY\"]).agg({'CANCELLED':[np.mean,np.sum],'AIR_TIME':[np.mean,np.max] })\n&lt;ipython-input-150-5ca207a54017&gt;:1: FutureWarning: The provided callable &lt;function mean at 0x2be0330&gt; is currently using SeriesGroupBy.mean. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"mean\" instead.\n  df.groupby([\"AIRLINE\",\"WEEKDAY\"]).agg({'CANCELLED':[np.mean,np.sum],'AIR_TIME':[np.mean,np.max] })\n&lt;ipython-input-150-5ca207a54017&gt;:1: FutureWarning: The provided callable &lt;function max at 0x2b9a390&gt; is currently using SeriesGroupBy.max. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"max\" instead.\n  df.groupby([\"AIRLINE\",\"WEEKDAY\"]).agg({'CANCELLED':[np.mean,np.sum],'AIR_TIME':[np.mean,np.max] })\n\n\n\n\n\n\n\n\n\n\nCANCELLED\nAIR_TIME\n\n\n\n\nmean\nsum\nmean\nmax\n\n\nAIRLINE\nWEEKDAY\n\n\n\n\n\n\n\n\nAA\n1\n0.032106\n41\n147.610569\n489.0\n\n\n2\n0.007341\n9\n143.851852\n513.0\n\n\n3\n0.011949\n16\n144.514005\n496.0\n\n\n4\n0.015004\n20\n141.124618\n498.0\n\n\n5\n0.014151\n18\n145.430966\n509.0\n\n\n...\n...\n...\n...\n...\n...\n\n\nWN\n3\n0.014118\n18\n104.219920\n277.0\n\n\n4\n0.007911\n10\n107.200800\n307.0\n\n\n5\n0.005828\n7\n107.893635\n321.0\n\n\n6\n0.010132\n10\n109.247433\n289.0\n\n\n7\n0.006066\n7\n107.602273\n308.0\n\n\n\n\n98 rows × 4 columns\n\n\n\n#\n# 예제6: 운행구간을 그룹화하고, 운행구간별 비행취소건수와 취소율을 구하여라.\n(풀이)\n\n운행구간을 그룹화하는 함수는 pd.quct(벡터, q=4) 를 이용하라\n\n\ndf.assign(dist_cut = pd.qcut(df.DIST,q=4)).groupby(\"dist_cut\").agg({\"CANCELLED\":[np.mean,np.sum]})\n\nFutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n  df.assign(dist_cut = pd.qcut(df.DIST,q=4)).groupby(\"dist_cut\").agg({\"CANCELLED\":[np.mean,np.sum]})\n&lt;ipython-input-160-5df9d682cdc7&gt;:1: FutureWarning: The provided callable &lt;function mean at 0x2be0330&gt; is currently using SeriesGroupBy.mean. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"mean\" instead.\n  df.assign(dist_cut = pd.qcut(df.DIST,q=4)).groupby(\"dist_cut\").agg({\"CANCELLED\":[np.mean,np.sum]})\n&lt;ipython-input-160-5df9d682cdc7&gt;:1: FutureWarning: The provided callable &lt;function sum at 0x2b09040&gt; is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"sum\" instead.\n  df.assign(dist_cut = pd.qcut(df.DIST,q=4)).groupby(\"dist_cut\").agg({\"CANCELLED\":[np.mean,np.sum]})\n\n\n\n\n\n\n\n\n\nCANCELLED\n\n\n\nmean\nsum\n\n\ndist_cut\n\n\n\n\n\n\n(66.999, 391.0]\n0.022659\n334\n\n\n(391.0, 690.0]\n0.013503\n196\n\n\n(690.0, 1199.0]\n0.013637\n203\n\n\n(1199.0, 4502.0]\n0.010313\n148\n\n\n\n\n\n\n\n#"
  },
  {
    "objectID": "content/13wk-1.html#숙제",
    "href": "content/13wk-1.html#숙제",
    "title": "13wk-1: [DataFrame] – Pandas 할당, 그룹화 연산 // 숙제",
    "section": "3. 숙제",
    "text": "3. 숙제\n(1) 타이타닉\n\ntitanic = pd.read_csv(\"titanic.csv\")\ntitanic\n\n\n\n\n\n\n\n\nPassengerId\nSurvived\nPclass\nName\nSex\nAge\nSibSp\nParch\nTicket\nFare\nCabin\nEmbarked\n\n\n\n\n0\n1\n0\n3\nBraund, Mr. Owen Harris\nmale\n22.0\n1\n0\nA/5 21171\n7.2500\nNaN\nS\n\n\n1\n2\n1\n1\nCumings, Mrs. John Bradley (Florence Briggs Th...\nfemale\n38.0\n1\n0\nPC 17599\n71.2833\nC85\nC\n\n\n2\n3\n1\n3\nHeikkinen, Miss. Laina\nfemale\n26.0\n0\n0\nSTON/O2. 3101282\n7.9250\nNaN\nS\n\n\n3\n4\n1\n1\nFutrelle, Mrs. Jacques Heath (Lily May Peel)\nfemale\n35.0\n1\n0\n113803\n53.1000\nC123\nS\n\n\n4\n5\n0\n3\nAllen, Mr. William Henry\nmale\n35.0\n0\n0\n373450\n8.0500\nNaN\nS\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n886\n887\n0\n2\nMontvila, Rev. Juozas\nmale\n27.0\n0\n0\n211536\n13.0000\nNaN\nS\n\n\n887\n888\n1\n1\nGraham, Miss. Margaret Edith\nfemale\n19.0\n0\n0\n112053\n30.0000\nB42\nS\n\n\n888\n889\n0\n3\nJohnston, Miss. Catherine Helen \"Carrie\"\nfemale\nNaN\n1\n2\nW./C. 6607\n23.4500\nNaN\nS\n\n\n889\n890\n1\n1\nBehr, Mr. Karl Howell\nmale\n26.0\n0\n0\n111369\n30.0000\nC148\nC\n\n\n890\n891\n0\n3\nDooley, Mr. Patrick\nmale\n32.0\n0\n0\n370376\n7.7500\nNaN\nQ\n\n\n\n\n891 rows × 12 columns\n\n\n\npd.qcut을 활용하여 Fare를 4등분하고 운임료가 낮은그룹부터 높은그룹의 생존률을 구하라. 비싼운임료를 낸 사람의 생존률이 더 높다고 볼 수 있는가?\n(풀이)\n\ntitanic.assign(FareCut = pd.qcut(titanic.Fare,q=4))\\\n.groupby(\"FareCut\")['Survived'].mean()\n\n/tmp/ipykernel_715551/923491335.py:2: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n  .groupby(\"FareCut\")['Survived'].mean()\n\n\nFareCut\n(-0.001, 7.91]     0.197309\n(7.91, 14.454]     0.303571\n(14.454, 31.0]     0.454955\n(31.0, 512.329]    0.581081\nName: Survived, dtype: float64\n\n\n\n비싼운임료를 낸 사람이 생존률이 높음.\n\n(2) 컬럼선택\n\ndf = pd.read_csv('flights.csv').groupby([\"AIRLINE\",\"WEEKDAY\"]).agg({'CANCELLED':[np.mean,np.sum],'AIR_TIME':[np.mean,np.max]})\ndf\n\n/tmp/ipykernel_715551/3408117236.py:1: FutureWarning: The provided callable &lt;function mean at 0x7365fc1dc680&gt; is currently using SeriesGroupBy.mean. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"mean\" instead.\n  df = pd.read_csv('flights.csv').groupby([\"AIRLINE\",\"WEEKDAY\"]).agg({'CANCELLED':[np.mean,np.sum],'AIR_TIME':[np.mean,np.max]})\n/tmp/ipykernel_715551/3408117236.py:1: FutureWarning: The provided callable &lt;function sum at 0x7365fc1bf240&gt; is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"sum\" instead.\n  df = pd.read_csv('flights.csv').groupby([\"AIRLINE\",\"WEEKDAY\"]).agg({'CANCELLED':[np.mean,np.sum],'AIR_TIME':[np.mean,np.max]})\n/tmp/ipykernel_715551/3408117236.py:1: FutureWarning: The provided callable &lt;function mean at 0x7365fc1dc680&gt; is currently using SeriesGroupBy.mean. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"mean\" instead.\n  df = pd.read_csv('flights.csv').groupby([\"AIRLINE\",\"WEEKDAY\"]).agg({'CANCELLED':[np.mean,np.sum],'AIR_TIME':[np.mean,np.max]})\n/tmp/ipykernel_715551/3408117236.py:1: FutureWarning: The provided callable &lt;function max at 0x7365fc1bfc40&gt; is currently using SeriesGroupBy.max. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"max\" instead.\n  df = pd.read_csv('flights.csv').groupby([\"AIRLINE\",\"WEEKDAY\"]).agg({'CANCELLED':[np.mean,np.sum],'AIR_TIME':[np.mean,np.max]})\n\n\n\n\n\n\n\n\n\n\nCANCELLED\nAIR_TIME\n\n\n\n\nmean\nsum\nmean\nmax\n\n\nAIRLINE\nWEEKDAY\n\n\n\n\n\n\n\n\nAA\n1\n0.032106\n41\n147.610569\n489.0\n\n\n2\n0.007341\n9\n143.851852\n513.0\n\n\n3\n0.011949\n16\n144.514005\n496.0\n\n\n4\n0.015004\n20\n141.124618\n498.0\n\n\n5\n0.014151\n18\n145.430966\n509.0\n\n\n...\n...\n...\n...\n...\n...\n\n\nWN\n3\n0.014118\n18\n104.219920\n277.0\n\n\n4\n0.007911\n10\n107.200800\n307.0\n\n\n5\n0.005828\n7\n107.893635\n321.0\n\n\n6\n0.010132\n10\n109.247433\n289.0\n\n\n7\n0.006066\n7\n107.602273\n308.0\n\n\n\n\n98 rows × 4 columns\n\n\n\n위의 데이터프레임에서 (CANCELLED, sum)과 (AIR_TIME, max)를 선택하라.\n(풀이)\n\ndf[[(\"CANCELLED\", \"sum\"), (\"AIR_TIME\", \"max\")]]\n\n\n\n\n\n\n\n\n\nCANCELLED\nAIR_TIME\n\n\n\n\nsum\nmax\n\n\nAIRLINE\nWEEKDAY\n\n\n\n\n\n\nAA\n1\n41\n489.0\n\n\n2\n9\n513.0\n\n\n3\n16\n496.0\n\n\n4\n20\n498.0\n\n\n5\n18\n509.0\n\n\n...\n...\n...\n...\n\n\nWN\n3\n18\n277.0\n\n\n4\n10\n307.0\n\n\n5\n7\n321.0\n\n\n6\n10\n289.0\n\n\n7\n7\n308.0\n\n\n\n\n98 rows × 2 columns"
  },
  {
    "objectID": "content/mid-R.html",
    "href": "content/mid-R.html",
    "title": "중간고사 - R",
    "section": "",
    "text": "문항당 3점\n\n문제의 조건에 맞는 수열을 100개 생성하라. 즉 \\(a_1,a_2,\\dots,a_{100}\\)을 생성하라.\n(1) \\(a_n = 2n-1\\)\n(2) \\(a_n=\\frac{1}{n}\\)\n(3) \\(a_n = (1/2)^{n}\\)\n(4) \\(a_n = \\begin{cases} 0 &  n=2,4,6,...,100 \\\\ (1/2)^n & n=1,3,5,7,\\dots,99 \\end{cases}\\)\n(5) \\(a_1=1, a_2=2\\); \\(a_n = a_{n-1} + a_{n-2} , n \\geq 3\\)"
  },
  {
    "objectID": "content/mid-R.html#수열생성-15점",
    "href": "content/mid-R.html#수열생성-15점",
    "title": "중간고사 - R",
    "section": "",
    "text": "문항당 3점\n\n문제의 조건에 맞는 수열을 100개 생성하라. 즉 \\(a_1,a_2,\\dots,a_{100}\\)을 생성하라.\n(1) \\(a_n = 2n-1\\)\n(2) \\(a_n=\\frac{1}{n}\\)\n(3) \\(a_n = (1/2)^{n}\\)\n(4) \\(a_n = \\begin{cases} 0 &  n=2,4,6,...,100 \\\\ (1/2)^n & n=1,3,5,7,\\dots,99 \\end{cases}\\)\n(5) \\(a_1=1, a_2=2\\); \\(a_n = a_{n-1} + a_{n-2} , n \\geq 3\\)"
  },
  {
    "objectID": "content/mid-R.html#인덱싱-15점",
    "href": "content/mid-R.html#인덱싱-15점",
    "title": "중간고사 - R",
    "section": "2. 인덱싱 – 15점",
    "text": "2. 인덱싱 – 15점\n\n문항당 3점\n\n아래의 벡터를 고려하자.\n\nset.seed(43052)\nx = rnorm(100)\nx\n\n  [1] -0.724154332 -0.786807067  0.322143867  1.245215545  0.541298135\n  [6]  1.644425736  1.010839968 -0.041093855  0.566219689  0.322589945\n [11]  0.744257098  1.318771443  1.741644032 -0.481877777 -0.212304360\n [16] -0.038340064 -0.670476111  1.116346318 -1.017367268 -2.764108407\n [21] -1.691021535 -0.286386675 -0.293329723 -0.439574695  1.187215542\n [26]  0.619075484  1.725469680  0.387946245  2.014429677 -1.858183602\n [31]  0.475627218 -1.522483833 -1.221104431  0.526176114  0.300794693\n [36]  0.419955219  0.774111400  1.118417590 -0.003518173 -1.339826327\n [41]  0.689804767  1.241655279  0.540903204 -0.090689478  0.899004061\n [46]  0.277964244  0.102093035  0.026743749 -1.366798404  1.725945031\n [51]  0.016568963  2.435175155  0.660768741  0.586336164  0.915387917\n [56]  1.032858015  0.487488367  0.983191955 -1.672555500 -2.391719134\n [61] -0.653742759  1.169355804  1.187078729 -1.099769071  0.175000573\n [66] -1.806541369  1.137909229 -0.041377066  1.669815049  1.063072588\n [71]  1.590954249 -1.385275254  1.108154509  1.154914467 -2.167338566\n [76] -0.174894345  1.213979381  0.722172855 -1.839824680  1.565277416\n [81]  0.883058660 -0.193202697 -0.805387640  0.115174290 -1.419227107\n [86] -1.347685370  0.338432430 -1.511701575 -0.969561843  1.854438960\n [91] -0.376556809  1.228923415 -1.326004497 -0.608823772  0.424967512\n [96]  1.027977993  0.143027357  1.539912811 -2.705749561 -2.271813360\n\n\n(1) 양수인 원소의 갯수를 count하라.\n(2) 양수인 원소의 합과 음수인 원소의 합을 구하라. 두 값의 절대값은 어느쪽이 더 큰가?\n(3) \\(-0.2 &lt;x &lt;0.1\\)의 범위에 있는 원소의 수를 count 하라.\n(4) 0.5와 가장 가까운 원소를 출력하라 .\n(5) 평균과 가장 멀리있는 원소를 출력하라."
  },
  {
    "objectID": "content/mid-R.html#matrix-20점",
    "href": "content/mid-R.html#matrix-20점",
    "title": "중간고사 - R",
    "section": "3. Matrix – 20점",
    "text": "3. Matrix – 20점\n\n문항당 5점\n\n아래의 matrix를 고려하자.\n\nX = rnorm(200); \ndim(X) = c(20,10)\n\n(1) 열별로 양수를 count하라.\n(2) 가장 많은 숫자의 양수를 보유한 열은?\n(3) 행별로 최대값과 최소값을 구하라.\n(4) 최대값과 최소값이 차이가 가장 큰 행은?"
  },
  {
    "objectID": "content/01wk-2.html#문제풀이",
    "href": "content/01wk-2.html#문제풀이",
    "title": "01wk-2: [R] – 문제풀이, 변수 이름 선언, 벡터의 선언, 함수의 선언",
    "section": "1. 문제풀이",
    "text": "1. 문제풀이\n2025수능-6. \\(\\cos \\left(\\frac{\\pi}{2} + \\theta \\right) = -\\frac{1}{5}\\) 일 때, \\(\\frac{\\sin\\theta}{1 - \\cos^2\\theta}\\) 의 값은? [3점]\n\n\\(-5\\)\n\n\\(-\\sqrt{5}\\)\n\n\\(0\\)\n\\(\\sqrt{5}\\)\n\\(5\\)\n\n(풀이1)\n\ntheta = 2.94\n\n\ncos(pi/2+theta) # 이 값이 -0.2 정도가 되어야 할텐데?\n\n[1] -0.20023\n\n\n반복계산을 하다보니까 \\(\\theta \\approx 2.94\\) 인듯\n\nsin(theta)/(1-cos(theta)^2)\n\n[1] 4.994257\n\n\n(풀이2)\n\nacos(-1/5) - pi/2\n\n[1] 0.2013579\n\n\n\nsin(0.2013579)/(1-cos(0.2013579)^2)\n\n[1] 5.000001\n\n\n\ninput = -0.2\ntheta = acos(input) - pi/2\noutput = sin(theta) / (1-cos(theta)^2)\noutput\n\n[1] 5\n\n\n이걸 하나로 묶으면..\n\nsolve &lt;- function(input){\n    theta = acos(input) - pi/2\n    output = sin(theta)/(1-cos(theta)^2)\n    return(output)\n}\n\n\nsolve(-0.2)\n\n[1] 5\n\n\n(풀이3) – 미완성의 풀이\n\n# theta = c(0.0, 0.1, 0.2, 0,3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9,\n#           1.0, 1.1, 1.2, 1,3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9,\n#           2.0, 2.1, 2.2, 2,3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9)\ntheta = 0:300/100\ntheta\n\n  [1] 0.00 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.10 0.11 0.12 0.13 0.14\n [16] 0.15 0.16 0.17 0.18 0.19 0.20 0.21 0.22 0.23 0.24 0.25 0.26 0.27 0.28 0.29\n [31] 0.30 0.31 0.32 0.33 0.34 0.35 0.36 0.37 0.38 0.39 0.40 0.41 0.42 0.43 0.44\n [46] 0.45 0.46 0.47 0.48 0.49 0.50 0.51 0.52 0.53 0.54 0.55 0.56 0.57 0.58 0.59\n [61] 0.60 0.61 0.62 0.63 0.64 0.65 0.66 0.67 0.68 0.69 0.70 0.71 0.72 0.73 0.74\n [76] 0.75 0.76 0.77 0.78 0.79 0.80 0.81 0.82 0.83 0.84 0.85 0.86 0.87 0.88 0.89\n [91] 0.90 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.00 1.01 1.02 1.03 1.04\n[106] 1.05 1.06 1.07 1.08 1.09 1.10 1.11 1.12 1.13 1.14 1.15 1.16 1.17 1.18 1.19\n[121] 1.20 1.21 1.22 1.23 1.24 1.25 1.26 1.27 1.28 1.29 1.30 1.31 1.32 1.33 1.34\n[136] 1.35 1.36 1.37 1.38 1.39 1.40 1.41 1.42 1.43 1.44 1.45 1.46 1.47 1.48 1.49\n[151] 1.50 1.51 1.52 1.53 1.54 1.55 1.56 1.57 1.58 1.59 1.60 1.61 1.62 1.63 1.64\n[166] 1.65 1.66 1.67 1.68 1.69 1.70 1.71 1.72 1.73 1.74 1.75 1.76 1.77 1.78 1.79\n[181] 1.80 1.81 1.82 1.83 1.84 1.85 1.86 1.87 1.88 1.89 1.90 1.91 1.92 1.93 1.94\n[196] 1.95 1.96 1.97 1.98 1.99 2.00 2.01 2.02 2.03 2.04 2.05 2.06 2.07 2.08 2.09\n[211] 2.10 2.11 2.12 2.13 2.14 2.15 2.16 2.17 2.18 2.19 2.20 2.21 2.22 2.23 2.24\n[226] 2.25 2.26 2.27 2.28 2.29 2.30 2.31 2.32 2.33 2.34 2.35 2.36 2.37 2.38 2.39\n[241] 2.40 2.41 2.42 2.43 2.44 2.45 2.46 2.47 2.48 2.49 2.50 2.51 2.52 2.53 2.54\n[256] 2.55 2.56 2.57 2.58 2.59 2.60 2.61 2.62 2.63 2.64 2.65 2.66 2.67 2.68 2.69\n[271] 2.70 2.71 2.72 2.73 2.74 2.75 2.76 2.77 2.78 2.79 2.80 2.81 2.82 2.83 2.84\n[286] 2.85 2.86 2.87 2.88 2.89 2.90 2.91 2.92 2.93 2.94 2.95 2.96 2.97 2.98 2.99\n[301] 3.00\n\n\n\nplot(theta,cos(pi/2+theta))\nabline(h=-0.2,col=2)\n\n\n\n\n\n\n\n\n#"
  },
  {
    "objectID": "content/01wk-2.html#변수-이름-선언",
    "href": "content/01wk-2.html#변수-이름-선언",
    "title": "01wk-2: [R] – 문제풀이, 변수 이름 선언, 벡터의 선언, 함수의 선언",
    "section": "2. 변수 이름 선언",
    "text": "2. 변수 이름 선언\n\nA. 변수이름에 어떠한 값을 넣는 방법\n- 방법1\n\nd = 1\n\n- 방법2\n\ne &lt;- 3\n\n\n\nB. 잘못된 변수명\n# 예제1 – 특수문자 불가능\n\na! &lt;- 3\n\nError: Error in Unknown source: &lt;text&gt;:1:2: unexpected '!'\n1: a!\n     ^\n\n\n#\n# 예제2 – 숫자로 시작하는 변수이름 불가능\n\n2a &lt;- 3 \n\nError: Error in Unknown source: &lt;text&gt;:1:2: unexpected symbol\n1: 2a\n     ^\n\n\n\na2 &lt;- 3 \n\n\n이것은 가능 (숫자로 시작되면 안되는 것이지 숫자를 포함하지 말라는 의미는 아님)\n\n#\n# 예제3 – 띄어쓰기 불가능\n\nGuebin Choi &lt;- 33 \n\nError: Error in Unknown source: &lt;text&gt;:1:8: unexpected symbol\n1: Guebin Choi\n           ^\n\n\n\nthis_is_333 &lt;- 333\n\n\n띄어쓰기 대신 언더바(_)를 활용한다.\n\n\nthis.is.777 &lt;- 777 \n\n\n언더바 말고 닷(.)을 선호하는 사람도 있다.\n\n#\n# 예제4 – 언더바를 포함하는 것은 가능하지만, 언더바로 시작하는 변수명은 사용할 수 없다. `\n\n_x &lt;- 33\n\nError: Error in Unknown source: &lt;text&gt;:1:2: unexpected symbol\n1: _x\n     ^\n\n\n#\n# 예제5 – 사용할 수는 있지만 권장하지 않는 변수이름\n\npi\n\n[1] 3.141593\n\n\n\npi&lt;-333\n\n\npi\n\n[1] 333"
  },
  {
    "objectID": "content/01wk-2.html#벡터의-선언",
    "href": "content/01wk-2.html#벡터의-선언",
    "title": "01wk-2: [R] – 문제풀이, 변수 이름 선언, 벡터의 선언, 함수의 선언",
    "section": "3. 벡터의 선언",
    "text": "3. 벡터의 선언\n# 예제1 – 직접 입력\n\nc(1,2,3,3,4,5,2)\n\n[1] 1 2 3 3 4 5 2\n\n\n# 예제2 – seq를 이용\n\nseq(from=0,to=10,by=0.1) # 0~10 까지 0.1의 간격으로 수열만들기 \n\n  [1]  0.0  0.1  0.2  0.3  0.4  0.5  0.6  0.7  0.8  0.9  1.0  1.1  1.2  1.3  1.4\n [16]  1.5  1.6  1.7  1.8  1.9  2.0  2.1  2.2  2.3  2.4  2.5  2.6  2.7  2.8  2.9\n [31]  3.0  3.1  3.2  3.3  3.4  3.5  3.6  3.7  3.8  3.9  4.0  4.1  4.2  4.3  4.4\n [46]  4.5  4.6  4.7  4.8  4.9  5.0  5.1  5.2  5.3  5.4  5.5  5.6  5.7  5.8  5.9\n [61]  6.0  6.1  6.2  6.3  6.4  6.5  6.6  6.7  6.8  6.9  7.0  7.1  7.2  7.3  7.4\n [76]  7.5  7.6  7.7  7.8  7.9  8.0  8.1  8.2  8.3  8.4  8.5  8.6  8.7  8.8  8.9\n [91]  9.0  9.1  9.2  9.3  9.4  9.5  9.6  9.7  9.8  9.9 10.0\n\n\n\nseq(from=0, to=1, length.out = 27) # 0~1 까지 등간격으로 총 27개의 수열만들기 \n\n [1] 0.00000000 0.03846154 0.07692308 0.11538462 0.15384615 0.19230769\n [7] 0.23076923 0.26923077 0.30769231 0.34615385 0.38461538 0.42307692\n[13] 0.46153846 0.50000000 0.53846154 0.57692308 0.61538462 0.65384615\n[19] 0.69230769 0.73076923 0.76923077 0.80769231 0.84615385 0.88461538\n[25] 0.92307692 0.96153846 1.00000000\n\n\n# 예제3 – : 를 이용\n\n1:22\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22\n\n\n이 방법을 살짝 응용하면 0~1까지 57개의 변수를 넣는 방법을 아래와 같이 할 수 있다.\n\n0:56/56\n\n [1] 0.00000000 0.01785714 0.03571429 0.05357143 0.07142857 0.08928571\n [7] 0.10714286 0.12500000 0.14285714 0.16071429 0.17857143 0.19642857\n[13] 0.21428571 0.23214286 0.25000000 0.26785714 0.28571429 0.30357143\n[19] 0.32142857 0.33928571 0.35714286 0.37500000 0.39285714 0.41071429\n[25] 0.42857143 0.44642857 0.46428571 0.48214286 0.50000000 0.51785714\n[31] 0.53571429 0.55357143 0.57142857 0.58928571 0.60714286 0.62500000\n[37] 0.64285714 0.66071429 0.67857143 0.69642857 0.71428571 0.73214286\n[43] 0.75000000 0.76785714 0.78571429 0.80357143 0.82142857 0.83928571\n[49] 0.85714286 0.87500000 0.89285714 0.91071429 0.92857143 0.94642857\n[55] 0.96428571 0.98214286 1.00000000\n\n\n물론 아래와 같이하는것이 더 가독성이 좋다.\n\nseq(from=0,to=1,length.out =57)\n\n [1] 0.00000000 0.01785714 0.03571429 0.05357143 0.07142857 0.08928571\n [7] 0.10714286 0.12500000 0.14285714 0.16071429 0.17857143 0.19642857\n[13] 0.21428571 0.23214286 0.25000000 0.26785714 0.28571429 0.30357143\n[19] 0.32142857 0.33928571 0.35714286 0.37500000 0.39285714 0.41071429\n[25] 0.42857143 0.44642857 0.46428571 0.48214286 0.50000000 0.51785714\n[31] 0.53571429 0.55357143 0.57142857 0.58928571 0.60714286 0.62500000\n[37] 0.64285714 0.66071429 0.67857143 0.69642857 0.71428571 0.73214286\n[43] 0.75000000 0.76785714 0.78571429 0.80357143 0.82142857 0.83928571\n[49] 0.85714286 0.87500000 0.89285714 0.91071429 0.92857143 0.94642857\n[55] 0.96428571 0.98214286 1.00000000\n\n\n#\n# 예제4 – rep 를 이용\n\nrep(0,5)\n\n[1] 0 0 0 0 0\n\n\n#"
  },
  {
    "objectID": "content/01wk-2.html#함수의-선언",
    "href": "content/01wk-2.html#함수의-선언",
    "title": "01wk-2: [R] – 문제풀이, 변수 이름 선언, 벡터의 선언, 함수의 선언",
    "section": "4. 함수의 선언",
    "text": "4. 함수의 선언\n- 함수의 기본 구조\n함수이름 &lt;- function(입력){\n    함수의 기능 \n    return(출력)\n    }\n\nsolve &lt;- function(input){\n    theta = acos(input) - pi/2\n    output = sin(theta)/(1-cos(theta)^2)\n    return(output)\n}\n\n\nsolve(-1/5)\n\n[1] 5\n\n\n- 아래의 2개의 코드는 거의 같다.\n\n### 1 \nsolve &lt;- function(input){\n    theta = acos(input) - pi/2\n    output = sin(theta)/(1-cos(theta)^2)\n    return(output)\n}\nsolve(-1/5)\n\n### 2\ninput = -1/5 \ntheta = acos(input) - pi/2\noutput = sin(theta)/(1-cos(theta)^2)\noutput\n\n[1] 5\n\n\n- return을 생략해도 괜찮다.\n\nsolve &lt;- function(input){\n    theta = acos(input) - pi/2\n    output = sin(theta)/(1-cos(theta)^2)\n    return(output)\n}\nsolve(-1/5)\n\n[1] 5\n\n\n\nsolve &lt;- function(input){\n    theta = acos(input) - pi/2\n    output = sin(theta)/(1-cos(theta)^2)\n    output\n}\nsolve(-1/5)\n\n[1] 5\n\n\n\nsolve &lt;- function(input){\n    theta = acos(input) - pi/2\n    sin(theta)/(1-cos(theta)^2)\n}\nsolve(-1/5)\n\n[1] 5"
  },
  {
    "objectID": "content/04wk-2.html#벡터와-행렬의-결합",
    "href": "content/04wk-2.html#벡터와-행렬의-결합",
    "title": "04wk-2: [R] – 벡터와 행렬의 결합, 벡터관련 연산, 자료의 변환 // 숙제",
    "section": "1. 벡터와 행렬의 결합",
    "text": "1. 벡터와 행렬의 결합\n# 예제1\n\nx &lt;- c(1,2,3)\ny &lt;- c(1,2,3,4)\n\n\nc(x,y)\n\n[1] 1 2 3 1 2 3 4\n\n\n\nc(y,x)\n\n[1] 1 2 3 4 1 2 3\n\n\n\nc(-1,x)\n\n[1] -1  1  2  3\n\n\n\nc(x,2,2,2,y)\n\n [1] 1 2 3 2 2 2 1 2 3 4\n\n\n\nc는 사실 결합하라라는 의미를 가짐\n\n#\n# 예제2 – 차원이 맞지 않을 경우\n\nx&lt;-c(1,2,3,4)\ny&lt;-c(1,2)\ncbind(x,y)\n\n     x y\n[1,] 1 1\n[2,] 2 2\n[3,] 3 1\n[4,] 4 2\n\n\n\nx&lt;-c(1,2,3,4)\ncbind(1,x)\n\n       x\n[1,] 1 1\n[2,] 1 2\n[3,] 1 3\n[4,] 1 4\n\n\n\nx&lt;-c(1,2,3,4)\ny&lt;-c(1,2)\nrbind(x,y)\n\n  [,1] [,2] [,3] [,4]\nx    1    2    3    4\ny    1    2    1    2\n\n\n#\n# 예제3\n\nx&lt;-c(1,2,3)\ny&lt;-c(4,5)\n\n\ncbind(1,c(x,y))\n\n     [,1] [,2]\n[1,]    1    1\n[2,]    1    2\n[3,]    1    3\n[4,]    1    4\n[5,]    1    5\n\n\n#\n# 예제4\n\nX&lt;-rbind(1:5,6:10)\ny&lt;-c(1,2)\n\n\ncbind(X,y,y,X)\n\n                y y           \n[1,] 1 2 3 4  5 1 1 1 2 3 4  5\n[2,] 6 7 8 9 10 2 2 6 7 8 9 10\n\n\n* 이름을 지우기 위해서는 아래와 같이 하면 된다.\n\nmat = cbind(X,y,y,X)\ncolnames(mat)= NULL \nmat\n\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\n[1,]    1    2    3    4    5    1    1    1    2     3     4     5\n[2,]    6    7    8    9   10    2    2    6    7     8     9    10\n\n\n#\n# 예제5\n\nX&lt;-rbind(1:5,6:10)\nrbind(X,1)\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    2    3    4    5\n[2,]    6    7    8    9   10\n[3,]    1    1    1    1    1\n\n\n#\n# 예제6\n\nX &lt;- rbind(1:5,6:10,1:5)\nY &lt;- cbind(1:3,4:6,7:9)\n\n\ncbind(X,Y)\n\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]\n[1,]    1    2    3    4    5    1    4    7\n[2,]    6    7    8    9   10    2    5    8\n[3,]    1    2    3    4    5    3    6    9\n\n\n\nrbind(X,Y)\n\nError: Error in rbind(X, Y): number of columns of matrices must match (see arg 2)\n\n\n#"
  },
  {
    "objectID": "content/04wk-2.html#벡터관련-연산",
    "href": "content/04wk-2.html#벡터관련-연산",
    "title": "04wk-2: [R] – 벡터와 행렬의 결합, 벡터관련 연산, 자료의 변환 // 숙제",
    "section": "2. 벡터관련 연산",
    "text": "2. 벡터관련 연산\n# 예제1\n\nc(1,2,6) %in% c(1,2,3,4)\n\n[1]  TRUE  TRUE FALSE\n\n\n#\n# 예제2\n\nunion(c(1,1,2,2),c(2,3,4))\n\n[1] 1 2 3 4\n\n\n#\n# 예제3\n\nintersect(1:5,2:6)\n\n[1] 2 3 4 5\n\n\n#"
  },
  {
    "objectID": "content/04wk-2.html#자료의변환",
    "href": "content/04wk-2.html#자료의변환",
    "title": "04wk-2: [R] – 벡터와 행렬의 결합, 벡터관련 연산, 자료의 변환 // 숙제",
    "section": "3. 자료의변환",
    "text": "3. 자료의변환\n# motivating ex – 20부터 30까지의 정수중 홀수를 출력하라\n\nx = 20:30\nx\n\n [1] 20 21 22 23 24 25 26 27 28 29 30\n\n\n\nx %% 2\n\n [1] 0 1 0 1 0 1 0 1 0 1 0\n\n\n\nas.logical(x %% 2)\n\n [1] FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE\n\n\n\nx[as.logical(x %% 2)]\n\n[1] 21 23 25 27 29\n\n\n#\n# 예제1\n\nx = \"123\"\nx\n\n[1] \"123\"\n\n\n\nas.numeric(x) # as.double(x) 와 동일\n\n[1] 123\n\n\n\nas.logical(x)\n\n[1] NA\n\n\n#\n# 예제2\n\nx = \"1.23\"\n\n\nas.numeric(x) # as.double(x) 와 동일\n\n[1] 1.23\n\n\n\nas.logical(x)\n\n[1] NA\n\n\n#\n# 예제3\n\nx = 3.14\n\n\nas.character(x)\n\n[1] \"3.14\"\n\n\n\nas.logical(x)\n\n[1] TRUE\n\n\n#\n# 예제4\n\nx = 0\n\n\nas.character(x)\n\n[1] \"0\"\n\n\n\nas.logical(x)\n\n[1] FALSE\n\n\n#\n# 예제5\n\nx = -5:5\nx\n\n [1] -5 -4 -3 -2 -1  0  1  2  3  4  5\n\n\n\nas.character(x)\n\n [1] \"-5\" \"-4\" \"-3\" \"-2\" \"-1\" \"0\"  \"1\"  \"2\"  \"3\"  \"4\"  \"5\" \n\n\n\nas.logical(x)\n\n [1]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE\n\n\n#\n# 예제6\n\nx = -1:1\nx\n\n[1] -1  0  1\n\n\n\nas.matrix(x)\n\n     [,1]\n[1,]   -1\n[2,]    0\n[3,]    1\n\n\n#\n# 예제7\n\nx = cbind(-1:1)\nx\n\n     [,1]\n[1,]   -1\n[2,]    0\n[3,]    1\n\n\n\nas.vector(x)\n\n[1] -1  0  1\n\n\n#\n# 예제8\n\nx = rbind(-1:1)\nx\n\n     [,1] [,2] [,3]\n[1,]   -1    0    1\n\n\n\nas.vector(x)\n\n[1] -1  0  1\n\n\n#\n# 예제9\n\nx = cbind(c(1,2),c(3,4))\nx\n\n     [,1] [,2]\n[1,]    1    3\n[2,]    2    4\n\n\n\nas.vector(x)\n\n[1] 1 2 3 4\n\n\n#\n# 예제10\n\nx = c(1,2,4,3)\nx\n\n[1] 1 2 4 3\n\n\n\nas.logical(as.matrix(x))\n\n[1] TRUE TRUE TRUE TRUE\n\n\n\nas.matrix(as.logical(x))\n\n     [,1]\n[1,] TRUE\n[2,] TRUE\n[3,] TRUE\n[4,] TRUE\n\n\n#"
  },
  {
    "objectID": "content/04wk-2.html#숙제",
    "href": "content/04wk-2.html#숙제",
    "title": "04wk-2: [R] – 벡터와 행렬의 결합, 벡터관련 연산, 자료의 변환 // 숙제",
    "section": "4. 숙제",
    "text": "4. 숙제\n1. 아래와 같은 벡터가 있다고 하자.\n\nx &lt;- -5:0 \ny &lt;- 1:5 \n\n두 벡터를 이용하여 아래와 같은 벡터를 만들라.\n\n# 출력예시 \n\n [1] -5 -4 -3 -2 -1  0  1  2  3  4  5\n\n\n(풀이)\n\nc(x,y)\n\n [1] -5 -4 -3 -2 -1  0  1  2  3  4  5\n\n\n2. 아래와 같은 벡터가 있다고 하자.\n\nx &lt;- c(1,0,1,1,0)\nx\n\n[1] 1 0 1 1 0\n\n\n1을 TRUE로 0을 FALSE로 바꾸라. 즉 아래의 결과를 얻어라.\n\n# 출력예시\n\n[1]  TRUE FALSE  TRUE  TRUE FALSE\n\n\n(풀이)\n\nas.logical(x)\n\n[1]  TRUE FALSE  TRUE  TRUE FALSE"
  },
  {
    "objectID": "content/14wk-2.html",
    "href": "content/14wk-2.html",
    "title": "14wk-2: [시각화] – 훌륭한 시각화, 타이타닉",
    "section": "",
    "text": "library(tidyverse)\noptions(repr.plot.res = 350)\noptions(repr.plot.width = 7)\noptions(repr.plot.height = 5)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "content/14wk-2.html#훌륭한-시각화",
    "href": "content/14wk-2.html#훌륭한-시각화",
    "title": "14wk-2: [시각화] – 훌륭한 시각화, 타이타닉",
    "section": "1. 훌륭한 시각화",
    "text": "1. 훌륭한 시각화\n\nA. 애드워드 터프티\n- 데이터 시각화계의 거장\n- 터프티의 이론중 백미: 엄격한 미니멀리즘\n\n최소한의 잉크로 많은 정보를 전달할 수 있다면 그것이 바로 좋은 그래프이다.\n작은 지면 내에서 잉크를 최대한 적게 써서 짧은 시간 안에 많은 영감을 주어야 한다.\n\n- 데이터-잉크비: 데이터를 표현하는데 들아가는 잉크의 양 / 그래픽을 인쇄하는데 들어가는 잉크의 총량\n- 차트정크 (나이젤홈즈의 그래프)\n\n\n“Lurking behind chartjunk is contempt both for information and for the audience. Chartjunk promoters imagine that numbers and details are boring, dull, and tedious, requiring ornament to enliven. Cosmetic decoration, which frequently distorts the data, will never salvage an underlying lack of content. If the numbers are boring, then you’ve got the wrong numbers (…) Worse is contempt for our audience, designing as if readers were obtuse and uncaring. In fact, consumers of graphics are often more intelligent about the information at hand than those who fabricate the data decoration (…) The operating moral premise of information design should be that our readers are alert and caring; they may be busy, eager to get on with it, but they are not stupid.”\n\n\n차트정크 = 대중을 멸시 + 데이터에 대한 모독\n차트정크 옹호가는 숫자와 데이터가 지루하여 활기가 필요하다고 생각하는 모양이다..\n\n- 별로인 그래프 (왼쪽) / 우수한 그래프 오른쪽\n\n- 별로인 그래프 (왼쪽) / 우수한 그래프 오른쪽\n\n- 별로인 그래프 (왼쪽) / 우수한 그래프 오른쪽\n\n- 제 생각: 글쎄…\n\n\nB. 찰스미나드의 도표\n\n인류역사상 가장 훌륭한 시각화\n\n\n- 터프티의 평\n\n지금까지 그려진 최고의 통계 그래픽일지도 모른다.\n여기에서는 군대의 크기, 2차원 평면상의 위치, 군대의 이동방향, 모스코바에서 퇴각하는 동안의 여러날짜, 온도 \\(\\to\\) 6차원의 변수\n백만번에 한번 이런 그림을 그릴수는 있겠으나.. 이러한 그림을 그리는 원칙은 없다 \\(\\to\\) 미니멀리즘\n\n- 왜 우수한 그래프일까?\n\n자료를 파악하는 기법은 최근까지도 산점도, 막대그래프, 라인플랏에 의존\n이러한 플랏의 단점은 고차원의 자료를 분석하기 어렵다는 것임\n미나드는 여러그림을 그리는 방법 대신에 한 그림에서 패널을 늘리는 방법을 선택함.\n\n\n\nC. 미나드처럼 그리는게 왜 어려운가?\n- 몸무게, 키, 성별, 국적\n\ndf = read.csv(\"body.csv\")\nhead(df)\n\n  Weight   Height   Sex Nationality\n1 72.78822 183.4868 m   korea      \n2 66.60643 173.5999 m   korea      \n3 69.80632 173.2379 m   korea      \n4 67.44944 173.2238 m   korea      \n5 70.46318 174.9319 m   korea      \n6 65.44524 177.0369 m   korea      \n\n\n- 이 자료를 시각화 한다면 보통은 아래와 같이 할 것이다.\n\nx = df$Weight[(df$Sex == \"f\") & (df$Nationality==\"korea\")]\ny = df$Height[(df$Sex == \"f\") & (df$Nationality==\"korea\")]\nplot(x,y)\n\n\n\n\n\n\n\n\n\nx = df$Weight[(df$Sex == \"f\") & (df$Nationality==\"foreign\")]\ny = df$Height[(df$Sex == \"f\") & (df$Nationality==\"foreign\")]\nplot(x,y)\n\n\n\n\n\n\n\n\n\nx = df$Weight[(df$Sex == \"m\") & (df$Nationality==\"korea\")]\ny = df$Height[(df$Sex == \"m\") & (df$Nationality==\"korea\")]\nplot(x,y)\n\n\n\n\n\n\n\n\n\nx = df$Weight[(df$Sex == \"m\") & (df$Nationality==\"foreign\")]\ny = df$Height[(df$Sex == \"m\") & (df$Nationality==\"foreign\")]\nplot(x,y)\n\n\n\n\n\n\n\n\n- 아래와 같이 2x2로 할듯\n\npar(mfrow= c(2,2))\nx = df$Weight[(df$Sex == \"f\") & (df$Nationality==\"korea\")]\ny = df$Height[(df$Sex == \"f\") & (df$Nationality==\"korea\")]\nplot(x,y)\nx = df$Weight[(df$Sex == \"f\") & (df$Nationality==\"foreign\")]\ny = df$Height[(df$Sex == \"f\") & (df$Nationality==\"foreign\")]\nplot(x,y)\nx = df$Weight[(df$Sex == \"m\") & (df$Nationality==\"korea\")]\ny = df$Height[(df$Sex == \"m\") & (df$Nationality==\"korea\")]\nplot(x,y)\nx = df$Weight[(df$Sex == \"m\") & (df$Nationality==\"foreign\")]\ny = df$Height[(df$Sex == \"m\") & (df$Nationality==\"foreign\")]\nplot(x,y)\npar(mfrow= c(1,1))\n\n\n\n\n\n\n\n\n- 하나의 그림에 모든 정보를 표현하려면?\n\nggplot(df) + geom_point(\n    aes(x=Weight, y=Height,color=Sex,shape=Nationality)\n) + theme_minimal()"
  },
  {
    "objectID": "content/14wk-2.html#타이타닉",
    "href": "content/14wk-2.html#타이타닉",
    "title": "14wk-2: [시각화] – 훌륭한 시각화, 타이타닉",
    "section": "2. 타이타닉",
    "text": "2. 타이타닉\n\nA. Data\n- 데이터 load\n\ndf = read.csv('titanic.csv')\nhead(df)\n\n  PassengerId Survived Pclass\n1 1           0        3     \n2 2           1        1     \n3 3           1        3     \n4 4           1        1     \n5 5           0        3     \n6 6           0        3     \n  Name                                                Sex    Age SibSp Parch\n1 Braund, Mr. Owen Harris                             male   22  1     0    \n2 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female 38  1     0    \n3 Heikkinen, Miss. Laina                              female 26  0     0    \n4 Futrelle, Mrs. Jacques Heath (Lily May Peel)        female 35  1     0    \n5 Allen, Mr. William Henry                            male   35  0     0    \n6 Moran, Mr. James                                    male   NA  0     0    \n  Ticket           Fare    Cabin Embarked\n1 A/5 21171         7.2500       S       \n2 PC 17599         71.2833 C85   C       \n3 STON/O2. 3101282  7.9250       S       \n4 113803           53.1000 C123  S       \n5 373450            8.0500       S       \n6 330877            8.4583       Q       \n\n\n\n\nB. 시각화\n\ndf$logFare = log(df$Fare + 1)\n\n\nggplot(df) + geom_point(aes(x= logFare, y= Age, color= Sex, alpha= factor(Survived))) + theme_minimal()\n\nWarning message:\n“Using alpha for a discrete variable is not advised.”\nWarning message:\n“Removed 177 rows containing missing values or values outside the scale range\n(`geom_point()`).”\n\n\n\n\n\n\n\n\n\n\n\nC. 분해\n\nfig = ggplot(df)\npoint = geom_point(aes(x= logFare, y= Age, color= Sex, alpha= factor(Survived)))\ntheme = theme_minimal()\n\n\nfig + point + theme\n\nWarning message:\n“Using alpha for a discrete variable is not advised.”\nWarning message:\n“Removed 177 rows containing missing values or values outside the scale range\n(`geom_point()`).”"
  },
  {
    "objectID": "content/12wk-1.html",
    "href": "content/12wk-1.html",
    "title": "12wk-1: [DataFrame] – Pandas 행과 열의 선택 (2) // 숙제",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt"
  },
  {
    "objectID": "content/12wk-1.html#pandas-행과-열의-선택",
    "href": "content/12wk-1.html#pandas-행과-열의-선택",
    "title": "12wk-1: [DataFrame] – Pandas 행과 열의 선택 (2) // 숙제",
    "section": "1. Pandas 행과 열의 선택",
    "text": "1. Pandas 행과 열의 선택\n\nA. df 만들기\n\ndct = {'date': ['12/30','12/31','01/01','01/02','01/03'], 'X1': [65,95,65,55,80], 'X2': [55,100,90,80,30], 'X3': [50,50,60,75,30], 'X4': [40,80,30,80,100]}\ndf = pd.DataFrame(dct)\ndf \n\n\n\n\n\n\n\n\ndate\nX1\nX2\nX3\nX4\n\n\n\n\n0\n12/30\n65\n55\n50\n40\n\n\n1\n12/31\n95\n100\n50\n80\n\n\n2\n01/01\n65\n90\n60\n30\n\n\n3\n01/02\n55\n80\n75\n80\n\n\n4\n01/03\n80\n30\n30\n100\n\n\n\n\n\n\n\n\n\nB. 열의 선택\n- 방법1 – df.\n\n# df.X1 \n\n- 방법2 – df[]\n\n# df['X1'] # str \n# df[['X1']] # [str]\n# df[['X1','X3']] # [str,str]\n\n- 방법3 – df.iloc\n\n# df.iloc[:,0] # int\n# df.iloc[:,-2:] # int:int - 슬라이싱\n# df.iloc[:,1::2] # int:int - 스트라이딩\n# df.iloc[:,[0]] # [int]\n# df.iloc[:,[0,1]] # [int,int]\n# df.iloc[:,[True,True,False,False]] # bool의 list \n# df.iloc[:,range(2)] # range\n\n- 방법4 – df.loc\n\n# df.loc[:,'X1'] # str\n# df.loc[:,'X1':'X3'] # 'str':'str' -- 칼럼이름으로 슬라이싱 **\n# df.loc[:,'X1'::2] # 'str':'str' -- 칼럼이름으로 스트라이딩 ** \n# df.loc[:,['X1']] # [str]\n# df.loc[:,['X1','X4']] # [str,str]\n# df.loc[:,[True,False,False,True,True]] # bool의 list\n\n수업때 헤맨 내용 재 설명\n자료형이 pandas.core.series.Series 인 경우와 pandas.core.frame.DataFrame 인 경우는 사용가능한 메소드가 다른 경우도 있으므로 조심해야함.\n\ndf = pd.read_csv(\"titanic.csv\")[:5]\ndf\n\n\n\n\n\n\n\n\nPassengerId\nSurvived\nPclass\nName\nSex\nAge\nSibSp\nParch\nTicket\nFare\nCabin\nEmbarked\n\n\n\n\n0\n1\n0\n3\nBraund, Mr. Owen Harris\nmale\n22.0\n1\n0\nA/5 21171\n7.2500\nNaN\nS\n\n\n1\n2\n1\n1\nCumings, Mrs. John Bradley (Florence Briggs Th...\nfemale\n38.0\n1\n0\nPC 17599\n71.2833\nC85\nC\n\n\n2\n3\n1\n3\nHeikkinen, Miss. Laina\nfemale\n26.0\n0\n0\nSTON/O2. 3101282\n7.9250\nNaN\nS\n\n\n3\n4\n1\n1\nFutrelle, Mrs. Jacques Heath (Lily May Peel)\nfemale\n35.0\n1\n0\n113803\n53.1000\nC123\nS\n\n\n4\n5\n0\n3\nAllen, Mr. William Henry\nmale\n35.0\n0\n0\n373450\n8.0500\nNaN\nS\n\n\n\n\n\n\n\n아래의 2개는 비슷해보이지만 약간 다를수 있음\n# 예시1 – 비슷하게 동작하는 경우\n\ndf['Survived'].mean()\n\nnp.float64(0.6)\n\n\n\ndf[['Survived']].mean()\n\nSurvived    0.6\ndtype: float64\n\n\n#\n# 예시2 – 비슷하게 동작하지 않는 경우\n\ndf[['Survived']].to_list()\n#list(df[['Survived']])\n\n\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n&lt;ipython-input-28-20e11f3d036a&gt; in ?()\n----&gt; 1 df[['Survived']].to_list()\n      2 #list(df[['Survived']])\n\n/lib/python3.12/site-packages/pandas/core/generic.py in ?(self, name)\n   6295             and name not in self._accessors\n   6296             and self._info_axis._can_hold_identifiers_and_holds_name(name)\n   6297         ):\n   6298             return self[name]\n-&gt; 6299         return object.__getattribute__(self, name)\n\nAttributeError: 'DataFrame' object has no attribute 'to_list'\n\n\n\n\ndf['Survived'].to_list()\n#list(df['Survived'])\n\n[0, 1, 1, 1, 0]\n\n\n#\n\n\nC. 행의 선택\n\ndct = {'date': ['12/30','12/31','01/01','01/02','01/03'], 'X1': [65,95,65,55,80], 'X2': [55,100,90,80,30], 'X3': [50,50,60,75,30], 'X4': [40,80,30,80,100]}\ndf = pd.DataFrame(dct)\ndf \n\n\n\n\n\n\n\n\ndate\nX1\nX2\nX3\nX4\n\n\n\n\n0\n12/30\n65\n55\n50\n40\n\n\n1\n12/31\n95\n100\n50\n80\n\n\n2\n01/01\n65\n90\n60\n30\n\n\n3\n01/02\n55\n80\n75\n80\n\n\n4\n01/03\n80\n30\n30\n100\n\n\n\n\n\n\n\n- 방법1: df[] + int:int, str:str, [bool,bool], pd.Series([bool,bool]) – \\((\\star\\star\\star\\star\\star)\\)\n\n# df[:2] # int:int -- 슬라이싱 // df.iloc[:2,:], df.iloc[:2] 와 같음\n# df[::2] # int:int -- 스트라이딩 \n# df[['12' in date for date in df.date]] # [bool,bool]\n# df[df.X1 &lt; 70] # pd.Series([bool,bool])\n\n- 방법2: df.iloc[], df.iloc[,:] + int, int:int, [int,int], [bool,bool], range\n\n# df.iloc[0] # int \n# df.iloc[-2:] # int:int -- 슬라이싱\n# df.iloc[1::2] # int:int -- 스트라이딩\n# df.iloc[[0]] # [int]\n# df.iloc[[0,1]] # [int,int]\n# df.iloc[['12' in date for date in df.date]] # [bool,bool]\n# df.iloc[range(2)] # range\n\n\n# df.iloc[0,:] # int \n# df.iloc[-2:,:] # int:int -- 슬라이싱\n# df.iloc[1::2,:] # int:int -- 스트라이딩\n# df.iloc[[0],:] # [int]\n# df.iloc[[0,1],:] # [int,int]\n# df.iloc[['12' in date for date in df.date],:] # [bool,bool]\n# df.iloc[range(2),:] # range\n\n- 방법3: df.loc[], df.loc[,:] + int, str, int:int, str:str, [int,int], [str,str], [bool,bool], pd.Series([bool,bool])\n\n# df.loc[0] # int  \n# df.loc[:2] # int:int \n# df.loc[[0,1]] # [int,int]\n# df.loc[['12' in date for date in df.date]] # [bool,bool]\n# df.loc[df.X1&gt;70] # pd.Series([bool,bool]) \n\n\n\nD. 제 스타일\n- 가장 안전한 코드\n\ndf.loc[:,:]\n\n\n\n\n\n\n\n\ndate\nX1\nX2\nX3\nX4\n\n\n\n\n0\n12/30\n65\n55\n50\n40\n\n\n1\n12/31\n95\n100\n50\n80\n\n\n2\n01/01\n65\n90\n60\n30\n\n\n3\n01/02\n55\n80\n75\n80\n\n\n4\n01/03\n80\n30\n30\n100\n\n\n\n\n\n\n\n- 상황1: 하나의 col을 뽑으려 할때 좋은 코드\n\n# df.X1 # 최애 \n# df['X1'] # 차애 \n# df[['X1']] # 차애\n\n- 상황2: row 슬라이싱을 할때 좋은 코드 \\((\\star\\star\\star)\\)\n\n# df[:5] # 최애 \n\n- 상황3: 조건에 맞는 row를 뽑을때 좋은 코드\n\n# df[df.X1&lt;60] # 최애\n# df.loc[['12' in date for date in df.date]] # 차애\n\n- 상황4: 하나의 row를 뽑으려 할때 좋은 코드\n\n# df.iloc[0] # 최애 \n# df.loc[0] # 차애\n\n- 상황5: (row,col)을 뽑으려 할때 좋은 코드\n\n# 최애: pd.Series를 뽑고 -&gt; 인덱스로접근\n# df.X1[0]\n# df['X1'][0]\n\n# 차애: iloc, loc 으로 한번에 뽑기\n# df.iloc[0,0]\n# df.loc[0,'X1']\n\n위의 상황이외에는 df.loc[:,:]를 사용하는것이 유리하다\n- 상황6: column 슬라이싱을 할때\n\n# df.loc[:,'X1':'X3'] # 끝점포함\n\n- 상황7: row + column 슬라이싱을 하는 가장 좋은 코드\n\n# df.loc[::2,'X1':'X2']\n\n- 상황8: 조건에 맞는 col을 뽑기에 가장 좋은 코드\n\n# df.loc[:,[len(colname)&gt;2 for colname in df.columns]]\n\n- 상황9: 조건에 맞는 row, col을 뽑기에 가장 좋은 코드\n\n# df.loc[df.X1&gt;70,[len(colname)&gt;2 for colname in df.columns]]\n\n\n\nE. 제 스타일 X\n- 제가 안쓰는 코드1\n\ndf[:1]\n\n\n\n\n\n\n\n\ndate\nX1\nX2\nX3\nX4\n\n\n\n\n0\n12/30\n65\n55\n50\n40\n\n\n\n\n\n\n\n\ndf[:1]\n\n\n\n\n\n\n\n\ndate\nX1\nX2\nX3\nX4\n\n\n\n\n0\n12/30\n65\n55\n50\n40\n\n\n\n\n\n\n\n이러면 내 입장에서는 마치 아래가 동작할 것 같잖아..\n\ndf[0] \n\n\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\nFile /lib/python3.12/site-packages/pandas/core/indexes/base.py:3805, in Index.get_loc(self, key)\n   3804 try:\n-&gt; 3805     return self._engine.get_loc(casted_key)\n   3806 except KeyError as err:\n\nFile index.pyx:167, in pandas._libs.index.IndexEngine.get_loc()\n\nFile index.pyx:196, in pandas._libs.index.IndexEngine.get_loc()\n\nFile pandas/_libs/hashtable_class_helper.pxi:7081, in pandas._libs.hashtable.PyObjectHashTable.get_item()\n\nFile pandas/_libs/hashtable_class_helper.pxi:7089, in pandas._libs.hashtable.PyObjectHashTable.get_item()\n\nKeyError: 0\n\nThe above exception was the direct cause of the following exception:\n\nKeyError                                  Traceback (most recent call last)\nCell In[248], line 1\n----&gt; 1 df[0] \n\nFile /lib/python3.12/site-packages/pandas/core/frame.py:4102, in DataFrame.__getitem__(self, key)\n   4100 if self.columns.nlevels &gt; 1:\n   4101     return self._getitem_multilevel(key)\n-&gt; 4102 indexer = self.columns.get_loc(key)\n   4103 if is_integer(indexer):\n   4104     indexer = [indexer]\n\nFile /lib/python3.12/site-packages/pandas/core/indexes/base.py:3812, in Index.get_loc(self, key)\n   3807     if isinstance(casted_key, slice) or (\n   3808         isinstance(casted_key, abc.Iterable)\n   3809         and any(isinstance(x, slice) for x in casted_key)\n   3810     ):\n   3811         raise InvalidIndexError(key)\n-&gt; 3812     raise KeyError(key) from err\n   3813 except TypeError:\n   3814     # If we have a listlike key, _check_indexing_error will raise\n   3815     #  InvalidIndexError. Otherwise we fall through and re-raise\n   3816     #  the TypeError.\n   3817     self._check_indexing_error(key)\n\nKeyError: 0\n\n\n\n- 제가 안쓰는 코드2: bool의 list를 사용할때 iloc은 가급적 쓰지마세요\n\ndf.iloc[list(df.X1&lt;80), :]\n\n\n\n\n\n\n\n\ndate\nX1\nX2\nX3\nX4\n\n\n\n\n0\n12/30\n65\n55\n50\n40\n\n\n2\n01/01\n65\n90\n60\n30\n\n\n3\n01/02\n55\n80\n75\n80\n\n\n\n\n\n\n\n이러면 마치 아래도 동작할 것 같잖아..\n\ndf.iloc[df['X1']&lt;80,:]\n\n\n---------------------------------------------------------------------------\nNotImplementedError                       Traceback (most recent call last)\nCell In[260], line 1\n----&gt; 1 df.iloc[df['X1']&lt;80,:]\n\nFile /lib/python3.12/site-packages/pandas/core/indexing.py:1184, in _LocationIndexer.__getitem__(self, key)\n   1182     if self._is_scalar_access(key):\n   1183         return self.obj._get_value(*key, takeable=self._takeable)\n-&gt; 1184     return self._getitem_tuple(key)\n   1185 else:\n   1186     # we by definition only have the 0th axis\n   1187     axis = self.axis or 0\n\nFile /lib/python3.12/site-packages/pandas/core/indexing.py:1690, in _iLocIndexer._getitem_tuple(self, tup)\n   1689 def _getitem_tuple(self, tup: tuple):\n-&gt; 1690     tup = self._validate_tuple_indexer(tup)\n   1691     with suppress(IndexingError):\n   1692         return self._getitem_lowerdim(tup)\n\nFile /lib/python3.12/site-packages/pandas/core/indexing.py:966, in _LocationIndexer._validate_tuple_indexer(self, key)\n    964 for i, k in enumerate(key):\n    965     try:\n--&gt; 966         self._validate_key(k, i)\n    967     except ValueError as err:\n    968         raise ValueError(\n    969             \"Location based indexing can only have \"\n    970             f\"[{self._valid_types}] types\"\n    971         ) from err\n\nFile /lib/python3.12/site-packages/pandas/core/indexing.py:1578, in _iLocIndexer._validate_key(self, key, axis)\n   1576 if hasattr(key, \"index\") and isinstance(key.index, Index):\n   1577     if key.index.inferred_type == \"integer\":\n-&gt; 1578         raise NotImplementedError(\n   1579             \"iLocation based boolean \"\n   1580             \"indexing on an integer type \"\n   1581             \"is not available\"\n   1582         )\n   1583     raise ValueError(\n   1584         \"iLocation based boolean indexing cannot use \"\n   1585         \"an indexable as a mask\"\n   1586     )\n   1587 return\n\nNotImplementedError: iLocation based boolean indexing on an integer type is not available\n\n\n\n\n\nF. 필터링 – numpy랑 비슷\n\ndf[df.X1 + df.X2 &gt; 150]\n\n\n\n\n\n\n\n\ndate\nX1\nX2\nX3\nX4\n\n\n\n\n1\n12/31\n95\n100\n50\n80\n\n\n2\n01/01\n65\n90\n60\n30"
  },
  {
    "objectID": "content/12wk-1.html#숙제",
    "href": "content/12wk-1.html#숙제",
    "title": "12wk-1: [DataFrame] – Pandas 행과 열의 선택 (2) // 숙제",
    "section": "2. 숙제",
    "text": "2. 숙제\n\ndf = pd.read_csv(\"titanic.csv\")\ndf\n\n\n\n\n\n\n\n\nPassengerId\nSurvived\nPclass\nName\nSex\nAge\nSibSp\nParch\nTicket\nFare\nCabin\nEmbarked\n\n\n\n\n0\n1\n0\n3\nBraund, Mr. Owen Harris\nmale\n22.0\n1\n0\nA/5 21171\n7.2500\nNaN\nS\n\n\n1\n2\n1\n1\nCumings, Mrs. John Bradley (Florence Briggs Th...\nfemale\n38.0\n1\n0\nPC 17599\n71.2833\nC85\nC\n\n\n2\n3\n1\n3\nHeikkinen, Miss. Laina\nfemale\n26.0\n0\n0\nSTON/O2. 3101282\n7.9250\nNaN\nS\n\n\n3\n4\n1\n1\nFutrelle, Mrs. Jacques Heath (Lily May Peel)\nfemale\n35.0\n1\n0\n113803\n53.1000\nC123\nS\n\n\n4\n5\n0\n3\nAllen, Mr. William Henry\nmale\n35.0\n0\n0\n373450\n8.0500\nNaN\nS\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n886\n887\n0\n2\nMontvila, Rev. Juozas\nmale\n27.0\n0\n0\n211536\n13.0000\nNaN\nS\n\n\n887\n888\n1\n1\nGraham, Miss. Margaret Edith\nfemale\n19.0\n0\n0\n112053\n30.0000\nB42\nS\n\n\n888\n889\n0\n3\nJohnston, Miss. Catherine Helen \"Carrie\"\nfemale\nNaN\n1\n2\nW./C. 6607\n23.4500\nNaN\nS\n\n\n889\n890\n1\n1\nBehr, Mr. Karl Howell\nmale\n26.0\n0\n0\n111369\n30.0000\nC148\nC\n\n\n890\n891\n0\n3\nDooley, Mr. Patrick\nmale\n32.0\n0\n0\n370376\n7.7500\nNaN\nQ\n\n\n\n\n891 rows × 12 columns\n\n\n\n3세미만의 승객들의 Age, Survived, Name 을 출력하라.\n\ndf[['Survived', 'Age', 'Name']][df.Age&lt;3]\n\n\n\n\n\n\n\n\nSurvived\nAge\nName\n\n\n\n\n7\n0\n2.00\nPalsson, Master. Gosta Leonard\n\n\n16\n0\n2.00\nRice, Master. Eugene\n\n\n78\n1\n0.83\nCaldwell, Master. Alden Gates\n\n\n119\n0\n2.00\nAndersson, Miss. Ellis Anna Maria\n\n\n164\n0\n1.00\nPanula, Master. Eino Viljami\n\n\n172\n1\n1.00\nJohnson, Miss. Eleanor Ileen\n\n\n183\n1\n1.00\nBecker, Master. Richard F\n\n\n205\n0\n2.00\nStrom, Miss. Telma Matilda\n\n\n297\n0\n2.00\nAllison, Miss. Helen Loraine\n\n\n305\n1\n0.92\nAllison, Master. Hudson Trevor\n\n\n340\n1\n2.00\nNavratil, Master. Edmond Roger\n\n\n381\n1\n1.00\nNakid, Miss. Maria (\"Mary\")\n\n\n386\n0\n1.00\nGoodwin, Master. Sidney Leonard\n\n\n469\n1\n0.75\nBaclini, Miss. Helene Barbara\n\n\n479\n1\n2.00\nHirvonen, Miss. Hildur E\n\n\n530\n1\n2.00\nQuick, Miss. Phyllis May\n\n\n642\n0\n2.00\nSkoog, Miss. Margit Elizabeth\n\n\n644\n1\n0.75\nBaclini, Miss. Eugenie\n\n\n755\n1\n0.67\nHamalainen, Master. Viljo\n\n\n788\n1\n1.00\nDean, Master. Bertram Vere\n\n\n803\n1\n0.42\nThomas, Master. Assad Alexander\n\n\n824\n0\n2.00\nPanula, Master. Urho Abraham\n\n\n827\n1\n1.00\nMallet, Master. Andre\n\n\n831\n1\n0.83\nRichards, Master. George Sibley"
  }
]